<html xmlns:v="urn:schemas-microsoft-com:vml" xmlns:o="urn:schemas-microsoft-com:office:office" xmlns:w="urn:schemas-microsoft-com:office:word" xmlns="http://www.w3.org/TR/REC-html40">

	<head>
		<meta http-equiv="Content-Type" content="text/html; charset=windows-1252">
		<meta name="ProgId" content="Word.Document">
		<meta name="Generator" content="Microsoft Word 9">
		<meta name="Originator" content="Microsoft Word 9">
		<link rel="File-List" href="Chap_08_files/filelist.xml">
		<!--[if !mso]>
<style>
v\:* {behavior:url(#default#VML);}
o\:* {behavior:url(#default#VML);}
w\:* {behavior:url(#default#VML);}
.shape {behavior:url(#default#VML);}
</style>
<![endif]-->
		<title>CHAPTER 8</title>
		<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>Ruth L Silverio</o:Author>
  <o:Keywords>{artman 1,M:\SLM\SRC\MASM61\APPS\ART\mpchp08.doc}</o:Keywords>
  <o:Description>Vent2Word 6/12/92</o:Description>
  <o:Template>MSGRIDA1.DOT</o:Template>
  <o:LastAuthor>Randall Hyde</o:LastAuthor>
  <o:Revision>2</o:Revision>
  <o:TotalTime>2</o:TotalTime>
  <o:Created>2001-09-06T23:33:00Z</o:Created>
  <o:LastSaved>2001-09-06T23:33:00Z</o:LastSaved>
  <o:Pages>16</o:Pages>
  <o:Words>5450</o:Words>
  <o:Characters>31089</o:Characters>
  <o:Company>Dell Computer Corporation</o:Company>
  <o:Version>9.3821</o:Version>
 </o:DocumentProperties>
</xml><![endif]-->
		<!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:PrintFractionalCharacterWidth/>
  <w:HideSpellingErrors/>
  <w:HideGrammaticalErrors/>
  <w:DoNotHyphenateCaps/>
  <w:DrawingGridHorizontalSpacing>6 pt</w:DrawingGridHorizontalSpacing>
  <w:DrawingGridVerticalSpacing>6 pt</w:DrawingGridVerticalSpacing>
  <w:DisplayVerticalDrawingGridEvery>0</w:DisplayVerticalDrawingGridEvery>
  <w:UseMarginsForDrawingGridOrigin/>
  <w:Compatibility>
   <w:PrintColBlack/>
   <w:ShowBreaksInFrames/>
   <w:SuppressSpBfAfterPgBrk/>
   <w:SwapBordersFacingPages/>
   <w:ConvMailMergeEsc/>
   <w:UsePrinterMetrics/>
   <w:FootnoteLayoutLikeWW8/>
   <w:ShapeLayoutLikeWW8/>
   <w:AlignTablesRowByRow/>
   <w:ForgetLastTabAlignment/>
   <w:NoSpaceRaiseLower/>
   <w:LayoutRawTableWidth/>
   <w:LayoutTableRowsApart/>
  </w:Compatibility>
 </w:WordDocument>
</xml><![endif]-->
		<style>
<!--
 /* Font Definitions */
@font-face
	{font-family:Times;
	panose-1:0 0 0 0 0 0 0 0 0 0;
	mso-font-charset:0;
	mso-generic-font-family:roman;
	mso-font-format:other;
	mso-font-pitch:variable;
	mso-font-signature:3 0 0 0 1 0;}
@font-face
	{font-family:Helvetica-Narrow;
	panose-1:0 0 0 0 0 0 0 0 0 0;
	mso-font-charset:0;
	mso-generic-font-family:swiss;
	mso-font-format:other;
	mso-font-pitch:variable;
	mso-font-signature:3 0 0 0 1 0;}
@font-face
	{font-family:"Arial Narrow";
	panose-1:2 11 5 6 2 2 2 3 2 4;
	mso-font-charset:0;
	mso-generic-font-family:swiss;
	mso-font-pitch:variable;
	mso-font-signature:647 0 0 0 159 0;}
@font-face
	{font-family:"Lucida Sans Typewriter";
	panose-1:2 11 5 9 3 5 4 3 2 4;
	mso-font-charset:0;
	mso-generic-font-family:modern;
	mso-font-pitch:fixed;
	mso-font-signature:3 0 0 0 1 0;}
 /* Style Definitions */
p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:"";
	margin-top:0in;
	margin-right:0in;
	margin-bottom:8.0pt;
	margin-left:0in;
	line-height:12.0pt;
	mso-line-height-rule:exactly;
	mso-pagination:widow-orphan;
	font-size:10.5pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
h1
	{mso-style-parent:"";
	mso-style-next:Normal;
	margin-top:10.0pt;
	margin-right:0in;
	margin-bottom:4.0pt;
	margin-left:-1.25in;
	line-height:22.0pt;
	mso-line-height-rule:exactly;
	mso-pagination:widow-orphan lines-together;
	page-break-after:avoid;
	mso-outline-level:1;
	font-size:20.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Arial Narrow";
	mso-font-kerning:0pt;
	mso-bidi-font-weight:normal;}
h2
	{mso-style-parent:"Heading 1";
	mso-style-next:Normal;
	margin-top:7.0pt;
	margin-right:0in;
	margin-bottom:3.0pt;
	margin-left:-1.25in;
	line-height:19.0pt;
	mso-line-height-rule:exactly;
	mso-pagination:widow-orphan lines-together;
	page-break-after:avoid;
	mso-outline-level:2;
	font-size:17.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Arial Narrow";
	mso-bidi-font-weight:normal;}
h3
	{mso-style-parent:"Heading 1";
	mso-style-next:Normal;
	margin-top:4.0pt;
	margin-right:0in;
	margin-bottom:2.0pt;
	margin-left:0in;
	line-height:17.0pt;
	mso-line-height-rule:exactly;
	mso-pagination:widow-orphan lines-together;
	page-break-after:avoid;
	mso-outline-level:3;
	font-size:15.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Arial Narrow";
	mso-bidi-font-weight:normal;}
h4
	{mso-style-parent:"Heading 1";
	mso-style-next:Normal;
	margin-top:3.0pt;
	margin-right:0in;
	margin-bottom:2.0pt;
	margin-left:0in;
	line-height:14.0pt;
	mso-line-height-rule:exactly;
	mso-pagination:widow-orphan lines-together;
	page-break-after:avoid;
	mso-outline-level:4;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Arial Narrow";
	mso-bidi-font-weight:normal;}
h5
	{mso-style-parent:"Heading 1";
	mso-style-next:Normal;
	margin-top:2.0pt;
	margin-right:0in;
	margin-bottom:2.0pt;
	margin-left:0in;
	line-height:12.0pt;
	mso-line-height-rule:exactly;
	mso-pagination:widow-orphan;
	page-break-after:avoid;
	mso-outline-level:5;
	font-size:10.5pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Arial Narrow";
	mso-bidi-font-weight:normal;}
h6
	{mso-style-parent:"Heading 1";
	mso-style-next:H6p;
	margin-top:2.0pt;
	margin-right:0in;
	margin-bottom:0in;
	margin-left:0in;
	margin-bottom:.0001pt;
	line-height:11.9pt;
	mso-line-height-rule:exactly;
	mso-pagination:widow-orphan;
	page-break-after:avoid;
	mso-outline-level:6;
	mso-element:frame;
	mso-element-frame-height:12.75pt;
	mso-element-frame-hspace:6.5pt;
	mso-element-wrap:around;
	mso-element-anchor-vertical:paragraph;
	mso-element-anchor-horizontal:column;
	mso-element-top:.05pt;
	font-size:10.5pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Arial Narrow";
	mso-bidi-font-weight:normal;}
p.MsoHeading7, li.MsoHeading7, div.MsoHeading7
	{mso-style-next:"Normal Indent";
	margin-top:0in;
	margin-right:0in;
	margin-bottom:8.0pt;
	margin-left:.5in;
	line-height:12.0pt;
	mso-line-height-rule:exactly;
	mso-pagination:widow-orphan;
	mso-outline-level:7;
	font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	font-style:italic;}
p.MsoHeading8, li.MsoHeading8, div.MsoHeading8
	{mso-style-next:"Normal Indent";
	margin-top:0in;
	margin-right:0in;
	margin-bottom:8.0pt;
	margin-left:.5in;
	line-height:12.0pt;
	mso-line-height-rule:exactly;
	mso-pagination:widow-orphan;
	mso-outline-level:8;
	font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	font-style:italic;}
p.MsoHeading9, li.MsoHeading9, div.MsoHeading9
	{mso-style-next:"Normal Indent";
	margin-top:0in;
	margin-right:0in;
	margin-bottom:8.0pt;
	margin-left:.5in;
	line-height:12.0pt;
	mso-line-height-rule:exactly;
	mso-pagination:widow-orphan;
	mso-outline-level:9;
	font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
p.MsoIndex1, li.MsoIndex1, div.MsoIndex1
	{mso-style-next:Normal;
	margin-top:0in;
	margin-right:0in;
	margin-bottom:8.0pt;
	margin-left:0in;
	line-height:12.0pt;
	mso-line-height-rule:exactly;
	mso-pagination:widow-orphan;
	font-size:10.5pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
p.MsoIndex2, li.MsoIndex2, div.MsoIndex2
	{mso-style-next:Normal;
	margin-top:0in;
	margin-right:0in;
	margin-bottom:8.0pt;
	margin-left:.25in;
	line-height:12.0pt;
	mso-line-height-rule:exactly;
	mso-pagination:widow-orphan;
	font-size:10.5pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
p.MsoIndex3, li.MsoIndex3, div.MsoIndex3
	{mso-style-next:Normal;
	margin-top:0in;
	margin-right:0in;
	margin-bottom:8.0pt;
	margin-left:.5in;
	line-height:12.0pt;
	mso-line-height-rule:exactly;
	mso-pagination:widow-orphan;
	font-size:10.5pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
p.MsoIndex4, li.MsoIndex4, div.MsoIndex4
	{mso-style-next:Normal;
	margin-top:0in;
	margin-right:0in;
	margin-bottom:8.0pt;
	margin-left:.75in;
	line-height:12.0pt;
	mso-line-height-rule:exactly;
	mso-pagination:widow-orphan;
	font-size:10.5pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
p.MsoIndex5, li.MsoIndex5, div.MsoIndex5
	{mso-style-next:Normal;
	margin-top:0in;
	margin-right:0in;
	margin-bottom:8.0pt;
	margin-left:1.0in;
	line-height:12.0pt;
	mso-line-height-rule:exactly;
	mso-pagination:widow-orphan;
	font-size:10.5pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
p.MsoIndex6, li.MsoIndex6, div.MsoIndex6
	{mso-style-next:Normal;
	margin-top:0in;
	margin-right:0in;
	margin-bottom:8.0pt;
	margin-left:1.25in;
	line-height:12.0pt;
	mso-line-height-rule:exactly;
	mso-pagination:widow-orphan;
	font-size:10.5pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
p.MsoIndex7, li.MsoIndex7, div.MsoIndex7
	{mso-style-next:Normal;
	margin-top:0in;
	margin-right:0in;
	margin-bottom:8.0pt;
	margin-left:1.5in;
	line-height:12.0pt;
	mso-line-height-rule:exactly;
	mso-pagination:widow-orphan;
	font-size:10.5pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
p.MsoToc1, li.MsoToc1, div.MsoToc1
	{margin-top:0in;
	margin-right:0in;
	margin-bottom:2.0pt;
	margin-left:0in;
	line-height:12.0pt;
	mso-line-height-rule:exactly;
	mso-pagination:widow-orphan lines-together;
	page-break-after:avoid;
	tab-stops:right dotted 348.0pt;
	font-size:10.5pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
p.MsoToc2, li.MsoToc2, div.MsoToc2
	{mso-style-parent:"TOC 1";
	margin-top:0in;
	margin-right:0in;
	margin-bottom:2.0pt;
	margin-left:14.0pt;
	line-height:12.0pt;
	mso-line-height-rule:exactly;
	mso-pagination:widow-orphan lines-together;
	page-break-after:avoid;
	tab-stops:right dotted 348.0pt;
	font-size:10.5pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
p.MsoToc3, li.MsoToc3, div.MsoToc3
	{mso-style-parent:"TOC 1";
	margin-top:0in;
	margin-right:0in;
	margin-bottom:2.0pt;
	margin-left:28.0pt;
	line-height:12.0pt;
	mso-line-height-rule:exactly;
	mso-pagination:widow-orphan lines-together;
	page-break-after:avoid;
	tab-stops:right dotted 348.0pt;
	font-size:10.5pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
p.MsoToc4, li.MsoToc4, div.MsoToc4
	{mso-style-next:Normal;
	margin-top:0in;
	margin-right:.5in;
	margin-bottom:8.0pt;
	margin-left:1.5in;
	line-height:12.0pt;
	mso-line-height-rule:exactly;
	mso-pagination:widow-orphan;
	tab-stops:dotted 5.75in right blank 6.0in;
	font-size:10.5pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
p.MsoToc5, li.MsoToc5, div.MsoToc5
	{mso-style-next:Normal;
	margin-top:0in;
	margin-right:.5in;
	margin-bottom:8.0pt;
	margin-left:2.0in;
	line-height:12.0pt;
	mso-line-height-rule:exactly;
	mso-pagination:widow-orphan;
	tab-stops:dotted 5.75in right blank 6.0in;
	font-size:10.5pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
p.MsoToc6, li.MsoToc6, div.MsoToc6
	{mso-style-next:Normal;
	margin-top:0in;
	margin-right:.5in;
	margin-bottom:8.0pt;
	margin-left:2.5in;
	line-height:12.0pt;
	mso-line-height-rule:exactly;
	mso-pagination:widow-orphan;
	tab-stops:dotted 5.75in right blank 6.0in;
	font-size:10.5pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
p.MsoToc7, li.MsoToc7, div.MsoToc7
	{mso-style-next:Normal;
	margin-top:0in;
	margin-right:.5in;
	margin-bottom:8.0pt;
	margin-left:3.0in;
	line-height:12.0pt;
	mso-line-height-rule:exactly;
	mso-pagination:widow-orphan;
	tab-stops:dotted 5.75in right blank 6.0in;
	font-size:10.5pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
p.MsoToc8, li.MsoToc8, div.MsoToc8
	{mso-style-next:Normal;
	margin-top:0in;
	margin-right:.5in;
	margin-bottom:8.0pt;
	margin-left:3.5in;
	line-height:12.0pt;
	mso-line-height-rule:exactly;
	mso-pagination:widow-orphan;
	tab-stops:dotted 5.75in right blank 6.0in;
	font-size:10.5pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
p.MsoNormalIndent, li.MsoNormalIndent, div.MsoNormalIndent
	{margin-top:0in;
	margin-right:0in;
	margin-bottom:8.0pt;
	margin-left:14.0pt;
	line-height:12.0pt;
	mso-line-height-rule:exactly;
	mso-pagination:widow-orphan;
	font-size:10.5pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
p.MsoFootnoteText, li.MsoFootnoteText, div.MsoFootnoteText
	{margin-top:0in;
	margin-right:0in;
	margin-bottom:8.0pt;
	margin-left:0in;
	line-height:12.0pt;
	mso-line-height-rule:exactly;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
p.MsoCommentText, li.MsoCommentText, div.MsoCommentText
	{margin-top:0in;
	margin-right:0in;
	margin-bottom:9.0pt;
	margin-left:0in;
	line-height:12.0pt;
	mso-line-height-rule:exactly;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	color:green;}
p.MsoHeader, li.MsoHeader, div.MsoHeader
	{mso-style-parent:"";
	mso-style-next:"header rule";
	margin-top:0in;
	margin-right:0in;
	margin-bottom:0in;
	margin-left:-1.25in;
	margin-bottom:.0001pt;
	line-height:10.5pt;
	mso-line-height-rule:exactly;
	mso-pagination:widow-orphan;
	tab-stops:right 348.0pt;
	font-size:9.5pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Arial Narrow";
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";
	font-weight:bold;
	mso-bidi-font-weight:normal;}
p.MsoFooter, li.MsoFooter, div.MsoFooter
	{mso-style-parent:"";
	margin:0in;
	margin-bottom:.0001pt;
	line-height:7.0pt;
	mso-pagination:widow-orphan;
	mso-element:frame;
	mso-element-wrap:around;
	mso-element-anchor-vertical:page;
	mso-element-anchor-horizontal:page;
	mso-element-left:100.0pt;
	mso-element-top:735.15pt;
	mso-height-rule:exactly;
	font-size:5.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
p.MsoIndexHeading, li.MsoIndexHeading, div.MsoIndexHeading
	{mso-style-next:"Index 1";
	margin-top:0in;
	margin-right:0in;
	margin-bottom:8.0pt;
	margin-left:0in;
	line-height:12.0pt;
	mso-line-height-rule:exactly;
	mso-pagination:widow-orphan;
	font-size:10.5pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
span.MsoFootnoteReference
	{mso-ansi-font-size:8.0pt;
	mso-bidi-font-size:8.0pt;
	mso-text-raise:3.0pt;}
span.MsoCommentReference
	{color:green;}
p.Wh, li.Wh, div.Wh
	{mso-style-name:Wh;
	mso-style-parent:Nh;
	mso-style-next:Np1;
	margin-top:2.0pt;
	margin-right:0in;
	margin-bottom:0in;
	margin-left:0in;
	margin-bottom:.0001pt;
	line-height:11.9pt;
	mso-line-height-rule:exactly;
	mso-pagination:widow-orphan;
	page-break-after:avoid;
	mso-element:frame;
	mso-element-frame-height:11.75pt;
	mso-element-frame-hspace:6.5pt;
	mso-element-wrap:around;
	mso-element-anchor-vertical:paragraph;
	mso-element-anchor-horizontal:column;
	mso-element-top:.05pt;
	font-size:10.5pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Arial Narrow";
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";
	color:blue;
	font-weight:bold;
	mso-bidi-font-weight:normal;}
p.Ws, li.Ws, div.Ws
	{mso-style-name:Ws;
	mso-style-parent:"";
	mso-style-next:Wh;
	margin-top:2.0pt;
	margin-right:1.5pt;
	margin-bottom:0in;
	margin-left:1.5pt;
	margin-bottom:.0001pt;
	line-height:4.0pt;
	mso-line-height-rule:exactly;
	mso-pagination:widow-orphan lines-together;
	page-break-after:avoid;
	border:none;
	mso-border-bottom-alt:double blue 2.25pt;
	padding:0in;
	mso-padding-alt:0in 0in 0in 0in;
	font-size:6.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	color:white;}
p.We, li.We, div.We
	{mso-style-name:We;
	mso-style-next:Normal;
	margin-top:0in;
	margin-right:1.5pt;
	margin-bottom:0in;
	margin-left:1.5pt;
	margin-bottom:.0001pt;
	line-height:10.0pt;
	mso-line-height-rule:exactly;
	mso-pagination:widow-orphan;
	border:none;
	mso-border-top-alt:double blue 2.25pt;
	padding:0in;
	mso-padding-alt:1.0pt 0in 0in 0in;
	font-size:8.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	color:white;}
p.Np1, li.Np1, div.Np1
	{mso-style-name:Np1;
	mso-style-parent:Np2;
	mso-style-next:Ne;
	margin-top:2.0pt;
	margin-right:0in;
	margin-bottom:4.0pt;
	margin-left:0in;
	line-height:12.0pt;
	mso-line-height-rule:exactly;
	mso-pagination:widow-orphan;
	page-break-after:avoid;
	font-size:10.5pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
p.Nh, li.Nh, div.Nh
	{mso-style-name:Nh;
	mso-style-parent:"";
	mso-style-next:Np1;
	margin-top:2.0pt;
	margin-right:0in;
	margin-bottom:0in;
	margin-left:0in;
	margin-bottom:.0001pt;
	line-height:11.9pt;
	mso-line-height-rule:exactly;
	mso-pagination:widow-orphan;
	page-break-after:avoid;
	mso-element:frame;
	mso-element-frame-height:11.75pt;
	mso-element-frame-hspace:6.5pt;
	mso-element-wrap:around;
	mso-element-anchor-vertical:paragraph;
	mso-element-anchor-horizontal:column;
	mso-element-top:.05pt;
	font-size:10.5pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Arial Narrow";
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";
	font-weight:bold;
	mso-bidi-font-weight:normal;}
p.Ne, li.Ne, div.Ne
	{mso-style-name:Ne;
	mso-style-parent:"";
	mso-style-next:Normal;
	margin-top:0in;
	margin-right:1.5pt;
	margin-bottom:2.0pt;
	margin-left:1.5pt;
	line-height:7.0pt;
	mso-line-height-rule:exactly;
	mso-pagination:widow-orphan lines-together;
	border:none;
	mso-border-top-alt:solid windowtext .75pt;
	padding:0in;
	mso-padding-alt:1.0pt 0in 0in 0in;
	font-size:6.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	color:white;}
p.Ns, li.Ns, div.Ns
	{mso-style-name:Ns;
	mso-style-parent:"";
	mso-style-next:Nh;
	margin-top:0in;
	margin-right:1.5pt;
	margin-bottom:0in;
	margin-left:1.5pt;
	margin-bottom:.0001pt;
	line-height:4.0pt;
	mso-line-height-rule:exactly;
	mso-pagination:widow-orphan lines-together;
	page-break-after:avoid;
	border:none;
	mso-border-bottom-alt:solid windowtext .75pt;
	padding:0in;
	mso-padding-alt:0in 0in 1.0pt 0in;
	font-size:6.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	color:white;}
p.Nhi, li.Nhi, div.Nhi
	{mso-style-name:Nhi;
	mso-style-parent:Nh;
	mso-style-next:Np1i;
	margin-top:2.0pt;
	margin-right:0in;
	margin-bottom:0in;
	margin-left:14.0pt;
	margin-bottom:.0001pt;
	line-height:11.9pt;
	mso-line-height-rule:exactly;
	mso-pagination:widow-orphan;
	page-break-after:avoid;
	mso-element:frame;
	mso-element-frame-height:11.75pt;
	mso-element-frame-hspace:6.5pt;
	mso-element-wrap:around;
	mso-element-anchor-vertical:paragraph;
	mso-element-anchor-horizontal:column;
	mso-element-top:.05pt;
	font-size:10.5pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Arial Narrow";
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";
	font-weight:bold;
	mso-bidi-font-weight:normal;}
p.Nsi, li.Nsi, div.Nsi
	{mso-style-name:Nsi;
	mso-style-parent:Ns;
	mso-style-next:Nhi;
	margin-top:0in;
	margin-right:1.5pt;
	margin-bottom:0in;
	margin-left:15.5pt;
	margin-bottom:.0001pt;
	line-height:4.0pt;
	mso-line-height-rule:exactly;
	mso-pagination:widow-orphan lines-together;
	page-break-after:avoid;
	border:none;
	mso-border-bottom-alt:solid windowtext .75pt;
	padding:0in;
	mso-padding-alt:0in 0in 1.0pt 0in;
	font-size:6.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	color:white;}
p.Np1i, li.Np1i, div.Np1i
	{mso-style-name:Np1i;
	mso-style-parent:Np1;
	mso-style-next:Nei;
	margin-top:2.0pt;
	margin-right:0in;
	margin-bottom:4.0pt;
	margin-left:14.0pt;
	text-indent:-14.0pt;
	line-height:12.0pt;
	mso-line-height-rule:exactly;
	mso-pagination:widow-orphan;
	page-break-after:avoid;
	font-size:10.5pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
p.Nei, li.Nei, div.Nei
	{mso-style-name:Nei;
	mso-style-parent:Ne;
	mso-style-next:Normal;
	margin-top:0in;
	margin-right:1.5pt;
	margin-bottom:0in;
	margin-left:15.5pt;
	margin-bottom:.0001pt;
	line-height:7.0pt;
	mso-line-height-rule:exactly;
	mso-pagination:widow-orphan lines-together;
	border:none;
	mso-border-top-alt:solid windowtext .75pt;
	padding:0in;
	mso-padding-alt:1.0pt 0in 0in 0in;
	font-size:6.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	color:white;}
p.Wsi, li.Wsi, div.Wsi
	{mso-style-name:Wsi;
	mso-style-parent:Ws;
	mso-style-next:Whi;
	margin-top:2.0pt;
	margin-right:1.5pt;
	margin-bottom:0in;
	margin-left:15.5pt;
	margin-bottom:.0001pt;
	line-height:4.0pt;
	mso-line-height-rule:exactly;
	mso-pagination:widow-orphan lines-together;
	page-break-after:avoid;
	border:none;
	mso-border-bottom-alt:double blue 2.25pt;
	padding:0in;
	mso-padding-alt:0in 0in 0in 0in;
	font-size:6.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	color:white;}
p.Whi, li.Whi, div.Whi
	{mso-style-name:Whi;
	mso-style-parent:Nhi;
	mso-style-next:Np1i;
	margin-top:2.0pt;
	margin-right:0in;
	margin-bottom:0in;
	margin-left:14.0pt;
	margin-bottom:.0001pt;
	line-height:11.9pt;
	mso-line-height-rule:exactly;
	mso-pagination:widow-orphan;
	page-break-after:avoid;
	mso-element:frame;
	mso-element-frame-height:11.75pt;
	mso-element-frame-hspace:6.5pt;
	mso-element-wrap:around;
	mso-element-anchor-vertical:paragraph;
	mso-element-anchor-horizontal:column;
	mso-element-top:.05pt;
	font-size:10.5pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Arial Narrow";
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";
	color:blue;
	font-weight:bold;
	mso-bidi-font-weight:normal;}
p.Wei, li.Wei, div.Wei
	{mso-style-name:Wei;
	mso-style-parent:We;
	mso-style-next:Normal;
	margin-top:0in;
	margin-right:1.5pt;
	margin-bottom:0in;
	margin-left:15.5pt;
	margin-bottom:.0001pt;
	line-height:7.0pt;
	mso-line-height-rule:exactly;
	mso-pagination:widow-orphan;
	border:none;
	mso-border-top-alt:double blue 2.25pt;
	padding:0in;
	mso-padding-alt:1.0pt 0in 0in 0in;
	font-size:6.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	color:white;}
p.Sbre, li.Sbre, div.Sbre
	{mso-style-name:Sbre;
	mso-style-parent:"";
	mso-style-next:Normal;
	margin-top:0in;
	margin-right:0in;
	margin-bottom:6.0pt;
	margin-left:-12.0pt;
	line-height:10.0pt;
	mso-line-height-rule:exactly;
	mso-pagination:widow-orphan;
	font-size:8.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
p.Sbrh, li.Sbrh, div.Sbrh
	{mso-style-name:Sbrh;
	mso-style-parent:"";
	mso-style-next:Sbrp;
	margin-top:3.0pt;
	margin-right:14.0pt;
	margin-bottom:2.0pt;
	margin-left:14.0pt;
	line-height:14.0pt;
	mso-pagination:widow-orphan lines-together;
	page-break-after:avoid;
	background:#FFFFBA;
	mso-shading:windowtext;
	mso-pattern:gray-40 yellow;
	border:none;
	mso-border-alt:solid white 1.5pt;
	padding:0in;
	mso-padding-alt:14.0pt 14.0pt 14.0pt 14.0pt;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Arial Narrow";
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";
	font-weight:bold;
	mso-bidi-font-weight:normal;}
p.Sbrs, li.Sbrs, div.Sbrs
	{mso-style-name:Sbrs;
	mso-style-parent:"";
	mso-style-next:Sbrh;
	margin-top:0in;
	margin-right:14.0pt;
	margin-bottom:0in;
	margin-left:14.0pt;
	margin-bottom:.0001pt;
	line-height:5.0pt;
	mso-line-height-rule:exactly;
	mso-pagination:widow-orphan lines-together;
	page-break-after:avoid;
	font-size:4.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
p.Tt, li.Tt, div.Tt
	{mso-style-name:Tt;
	mso-style-parent:"";
	mso-style-next:Th;
	margin-top:1.0pt;
	margin-right:0in;
	margin-bottom:3.0pt;
	margin-left:0in;
	line-height:11.0pt;
	mso-line-height-rule:exactly;
	mso-pagination:widow-orphan lines-together;
	page-break-after:avoid;
	font-size:9.5pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	font-weight:bold;
	mso-bidi-font-weight:normal;}
p.Th, li.Th, div.Th
	{mso-style-name:Th;
	margin-top:1.0pt;
	margin-right:0in;
	margin-bottom:3.0pt;
	margin-left:12.0pt;
	line-height:11.0pt;
	mso-line-height-rule:exactly;
	mso-pagination:widow-orphan lines-together;
	page-break-after:avoid;
	font-size:9.5pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	font-weight:bold;
	mso-bidi-font-weight:normal;}
p.Tp, li.Tp, div.Tp
	{mso-style-name:Tp;
	margin-top:1.0pt;
	margin-right:0in;
	margin-bottom:3.0pt;
	margin-left:12.0pt;
	line-height:11.0pt;
	mso-line-height-rule:exactly;
	mso-pagination:widow-orphan lines-together;
	tab-stops:14.0pt 28.0pt;
	font-size:9.5pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
p.Te, li.Te, div.Te
	{mso-style-name:Te;
	mso-style-next:Normal;
	margin-top:4.0pt;
	margin-right:1.5pt;
	margin-bottom:4.0pt;
	margin-left:1.5pt;
	text-align:right;
	line-height:9.0pt;
	mso-line-height-rule:exactly;
	mso-pagination:widow-orphan lines-together;
	border:none;
	mso-border-top-alt:solid windowtext .75pt;
	padding:0in;
	mso-padding-alt:1.0pt 0in 0in 0in;
	font-size:8.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
p.Le, li.Le, div.Le
	{mso-style-name:Le;
	mso-style-next:Normal;
	margin:0in;
	margin-bottom:.0001pt;
	text-align:right;
	line-height:8.0pt;
	mso-line-height-rule:exactly;
	mso-pagination:widow-orphan lines-together;
	font-size:6.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
p.H6p, li.H6p, div.H6p
	{mso-style-name:H6p;
	mso-style-next:Normal;
	margin-top:2.0pt;
	margin-right:0in;
	margin-bottom:8.0pt;
	margin-left:0in;
	line-height:12.0pt;
	mso-line-height-rule:exactly;
	mso-pagination:widow-orphan;
	font-size:10.5pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
p.Ttw, li.Ttw, div.Ttw
	{mso-style-name:Ttw;
	mso-style-parent:Tt;
	mso-style-next:Th;
	margin-top:1.0pt;
	margin-right:0in;
	margin-bottom:3.0pt;
	margin-left:-1.25in;
	line-height:11.0pt;
	mso-line-height-rule:exactly;
	mso-pagination:widow-orphan lines-together;
	page-break-after:avoid;
	font-size:9.5pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	font-weight:bold;
	mso-bidi-font-weight:normal;}
p.ih, li.ih, div.ih
	{mso-style-name:ih;
	mso-style-parent:"";
	mso-style-next:Normal;
	margin-top:0in;
	margin-right:0in;
	margin-bottom:21.0pt;
	margin-left:-1.25in;
	line-height:30.0pt;
	mso-line-height-rule:exactly;
	page-break-before:always;
	mso-pagination:widow-orphan lines-together;
	page-break-after:avoid;
	font-size:24.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Arial Narrow";
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";
	font-weight:bold;
	mso-bidi-font-weight:normal;}
p.Ch, li.Ch, div.Ch
	{mso-style-name:Ch;
	mso-style-parent:"";
	mso-style-next:Normal;
	margin:0in;
	margin-bottom:.0001pt;
	line-height:27.0pt;
	mso-line-height-rule:exactly;
	mso-pagination:widow-orphan lines-together;
	page-break-after:avoid;
	mso-element:frame;
	mso-element-frame-width:336.0pt;
	mso-element-frame-height:123.0pt;
	mso-element-wrap:no-wrap-beside;
	mso-element-anchor-vertical:paragraph;
	mso-element-anchor-horizontal:margin;
	mso-element-left:-1.25in;
	mso-element-top:.05pt;
	mso-height-rule:exactly;
	font-size:24.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Arial Narrow";
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";
	font-weight:bold;
	mso-bidi-font-weight:normal;}
p.Ln1, li.Ln1, div.Ln1
	{mso-style-name:Ln1;
	margin-top:0in;
	margin-right:0in;
	margin-bottom:4.0pt;
	margin-left:14.0pt;
	text-indent:-22.0pt;
	line-height:12.0pt;
	mso-line-height-rule:exactly;
	mso-pagination:widow-orphan lines-together;
	tab-stops:right 8.0pt left 14.0pt;
	font-size:10.5pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
p.Lb1, li.Lb1, div.Lb1
	{mso-style-name:Lb1;
	mso-style-parent:Ln1;
	margin-top:0in;
	margin-right:0in;
	margin-bottom:4.0pt;
	margin-left:14.0pt;
	text-indent:-14.0pt;
	line-height:12.0pt;
	mso-line-height-rule:exactly;
	mso-pagination:widow-orphan lines-together;
	tab-stops:14.0pt;
	font-size:10.5pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
p.Ex, li.Ex, div.Ex
	{mso-style-name:Ex;
	mso-style-parent:"";
	margin:0in;
	margin-bottom:.0001pt;
	line-height:11.0pt;
	mso-line-height-rule:exactly;
	mso-pagination:widow-orphan lines-together;
	page-break-after:avoid;
	tab-stops:19.0pt 38.0pt 57.0pt 76.0pt 95.0pt 114.0pt 133.0pt 152.0pt 171.0pt 190.0pt;
	font-size:8.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Lucida Sans Typewriter";
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";}
p.Proch, li.Proch, div.Proch
	{mso-style-name:Proch;
	mso-style-parent:"";
	mso-style-next:Ln1;
	margin-top:4.0pt;
	margin-right:0in;
	margin-bottom:4.0pt;
	margin-left:0in;
	text-indent:-.25in;
	line-height:12.0pt;
	mso-line-height-rule:exactly;
	mso-pagination:widow-orphan lines-together;
	page-break-after:avoid;
	tab-stops:0in;
	font-size:10.5pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	font-weight:bold;
	mso-bidi-font-weight:normal;}
p.Hn1, li.Hn1, div.Hn1
	{mso-style-name:Hn1;
	mso-style-parent:"Heading 1";
	mso-style-next:Normal;
	margin-top:10.0pt;
	margin-right:0in;
	margin-bottom:4.0pt;
	margin-left:-1.25in;
	line-height:22.0pt;
	mso-line-height-rule:exactly;
	mso-pagination:widow-orphan lines-together;
	page-break-after:avoid;
	mso-outline-level:1;
	font-size:20.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Arial Narrow";
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";
	font-weight:bold;
	mso-bidi-font-weight:normal;}
p.Hn2, li.Hn2, div.Hn2
	{mso-style-name:Hn2;
	mso-style-parent:"Heading 2";
	mso-style-next:Normal;
	margin-top:7.0pt;
	margin-right:0in;
	margin-bottom:3.0pt;
	margin-left:-1.25in;
	line-height:19.0pt;
	mso-line-height-rule:exactly;
	mso-pagination:widow-orphan lines-together;
	page-break-after:avoid;
	mso-outline-level:2;
	font-size:17.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Arial Narrow";
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";
	font-weight:bold;
	mso-bidi-font-weight:normal;}
p.Mp, li.Mp, div.Mp
	{mso-style-name:Mp;
	mso-style-parent:"";
	mso-style-next:Normal;
	margin:0in;
	margin-bottom:.0001pt;
	line-height:11.0pt;
	mso-line-height-rule:exactly;
	mso-pagination:widow-orphan lines-together;
	page-break-after:avoid;
	mso-element:frame;
	mso-element-frame-width:78.0pt;
	mso-element-frame-hspace:12.0pt;
	mso-element-wrap:around;
	mso-element-anchor-vertical:paragraph;
	mso-element-anchor-horizontal:page;
	mso-element-top:.05pt;
	mso-height-rule:exactly;
	font-size:9.5pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Arial Narrow";
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";}
p.Lp1, li.Lp1, div.Lp1
	{mso-style-name:Lp1;
	mso-style-parent:Ln1;
	margin-top:0in;
	margin-right:0in;
	margin-bottom:4.0pt;
	margin-left:14.0pt;
	line-height:12.0pt;
	mso-line-height-rule:exactly;
	mso-pagination:widow-orphan lines-together;
	tab-stops:right 8.0pt left 14.0pt;
	font-size:10.5pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
p.Np2, li.Np2, div.Np2
	{mso-style-name:Np2;
	mso-style-next:Ne;
	margin-top:0in;
	margin-right:0in;
	margin-bottom:4.0pt;
	margin-left:0in;
	line-height:12.0pt;
	mso-line-height-rule:exactly;
	mso-pagination:widow-orphan;
	page-break-after:avoid;
	font-size:10.5pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
p.Erm, li.Erm, div.Erm
	{mso-style-name:Erm;
	mso-style-next:Erp;
	margin-top:5.0pt;
	margin-right:12.0pt;
	margin-bottom:2.0pt;
	margin-left:0in;
	line-height:12.0pt;
	mso-pagination:widow-orphan lines-together;
	page-break-after:avoid;
	font-size:10.5pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	font-weight:bold;
	mso-bidi-font-weight:normal;}
p.Erp, li.Erp, div.Erp
	{mso-style-name:Erp;
	margin-top:0in;
	margin-right:0in;
	margin-bottom:5.0pt;
	margin-left:0in;
	line-height:12.0pt;
	mso-line-height-rule:exactly;
	mso-pagination:widow-orphan lines-together;
	font-size:10.5pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
p.Cn, li.Cn, div.Cn
	{mso-style-name:Cn;
	mso-style-parent:"";
	mso-style-next:Ch;
	margin-top:0in;
	margin-right:0in;
	margin-bottom:14.0pt;
	margin-left:-1.25in;
	line-height:12.0pt;
	mso-line-height-rule:exactly;
	mso-pagination:widow-orphan lines-together;
	page-break-after:avoid;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	text-transform:uppercase;
	letter-spacing:6.0pt;}
p.Lb2, li.Lb2, div.Lb2
	{mso-style-name:Lb2;
	mso-style-parent:Lb1;
	margin-top:0in;
	margin-right:0in;
	margin-bottom:4.0pt;
	margin-left:28.0pt;
	text-indent:-14.0pt;
	line-height:12.0pt;
	mso-line-height-rule:exactly;
	mso-pagination:widow-orphan lines-together;
	tab-stops:28.0pt;
	font-size:10.5pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
p.Exl, li.Exl, div.Exl
	{mso-style-name:Exl;
	mso-style-parent:Ex;
	margin-top:0in;
	margin-right:0in;
	margin-bottom:0in;
	margin-left:14.0pt;
	margin-bottom:.0001pt;
	line-height:11.0pt;
	mso-line-height-rule:exactly;
	mso-pagination:widow-orphan lines-together;
	page-break-after:avoid;
	tab-stops:33.0pt 52.0pt 71.0pt 1.25in 109.0pt 128.0pt 147.0pt 166.0pt 185.0pt 204.0pt;
	font-size:8.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Lucida Sans Typewriter";
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";}
p.Cap, li.Cap, div.Cap
	{mso-style-name:Cap;
	mso-style-parent:"";
	mso-style-next:Normal;
	margin-top:0in;
	margin-right:0in;
	margin-bottom:12.0pt;
	margin-left:0in;
	line-height:11.0pt;
	mso-line-height-rule:exactly;
	mso-pagination:widow-orphan lines-together;
	tab-stops:14.0pt 28.0pt;
	font-size:9.5pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	font-weight:bold;
	mso-bidi-font-weight:normal;}
p.Ln2, li.Ln2, div.Ln2
	{mso-style-name:Ln2;
	mso-style-parent:Ln1;
	margin-top:0in;
	margin-right:0in;
	margin-bottom:4.0pt;
	margin-left:28.0pt;
	text-indent:-30.0pt;
	line-height:12.0pt;
	mso-line-height-rule:exactly;
	mso-pagination:widow-orphan lines-together;
	tab-stops:right 22.0pt left 28.0pt;
	font-size:10.5pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
p.Lp2, li.Lp2, div.Lp2
	{mso-style-name:Lp2;
	mso-style-parent:Lp1;
	margin-top:0in;
	margin-right:0in;
	margin-bottom:4.0pt;
	margin-left:28.0pt;
	line-height:12.0pt;
	mso-line-height-rule:exactly;
	mso-pagination:widow-orphan lines-together;
	tab-stops:right 8.0pt left 14.0pt;
	font-size:10.5pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
p.Rh1, li.Rh1, div.Rh1
	{mso-style-name:Rh1;
	mso-style-parent:"Heading 1";
	mso-style-next:Rmh;
	margin-top:0in;
	margin-right:0in;
	margin-bottom:13.0pt;
	margin-left:-1.25in;
	line-height:22.0pt;
	mso-line-height-rule:exactly;
	mso-pagination:widow-orphan;
	page-break-after:avoid;
	mso-outline-level:1;
	font-size:20.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Arial Narrow";
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";
	font-weight:bold;
	mso-bidi-font-weight:normal;}
p.Rmh, li.Rmh, div.Rmh
	{mso-style-name:Rmh;
	mso-style-parent:"";
	mso-style-next:Normal;
	margin-top:1.0pt;
	margin-right:0in;
	margin-bottom:0in;
	margin-left:0in;
	margin-bottom:.0001pt;
	line-height:11.0pt;
	mso-line-height-rule:exactly;
	mso-pagination:widow-orphan lines-together;
	page-break-after:avoid;
	mso-element:frame;
	mso-element-frame-width:78.0pt;
	mso-element-frame-hspace:12.0pt;
	mso-element-frame-vspace:12.0pt;
	mso-element-wrap:around;
	mso-element-anchor-vertical:paragraph;
	mso-element-anchor-horizontal:page;
	mso-element-top:.05pt;
	mso-height-rule:exactly;
	font-size:10.5pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Arial Narrow";
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";
	font-weight:bold;
	mso-bidi-font-weight:normal;}
p.headerrule, li.headerrule, div.headerrule
	{mso-style-name:"header rule";
	mso-style-parent:"";
	mso-style-next:Normal;
	margin-top:2.5pt;
	margin-right:1.5pt;
	margin-bottom:0in;
	margin-left:-88.5pt;
	margin-bottom:.0001pt;
	line-height:4.0pt;
	mso-line-height-rule:exactly;
	mso-pagination:widow-orphan;
	border:none;
	mso-border-top-alt:solid blue .75pt;
	padding:0in;
	mso-padding-alt:0in 0in 0in 0in;
	font-size:6.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
p.Ermn, li.Ermn, div.Ermn
	{mso-style-name:Ermn;
	mso-style-parent:Erm;
	margin-top:1.0pt;
	margin-right:12.0pt;
	margin-bottom:3.0pt;
	margin-left:0in;
	line-height:12.0pt;
	mso-pagination:widow-orphan lines-together;
	page-break-after:avoid;
	font-size:10.5pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	font-weight:bold;
	mso-bidi-font-weight:normal;}
p.Sbrp, li.Sbrp, div.Sbrp
	{mso-style-name:Sbrp;
	mso-style-parent:"";
	mso-style-next:Sbre;
	margin-top:0in;
	margin-right:14.0pt;
	margin-bottom:8.0pt;
	margin-left:14.0pt;
	line-height:12.0pt;
	mso-pagination:widow-orphan lines-together;
	page-break-after:avoid;
	background:#FFFFBA;
	mso-shading:windowtext;
	mso-pattern:gray-40 yellow;
	border:none;
	mso-border-alt:solid white 1.5pt;
	padding:0in;
	mso-padding-alt:14.0pt 14.0pt 14.0pt 14.0pt;
	font-size:10.5pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
p.Hn3, li.Hn3, div.Hn3
	{mso-style-name:Hn3;
	mso-style-parent:"Heading 3";
	mso-style-next:Normal;
	margin-top:4.0pt;
	margin-right:0in;
	margin-bottom:2.0pt;
	margin-left:0in;
	line-height:17.0pt;
	mso-line-height-rule:exactly;
	mso-pagination:widow-orphan lines-together;
	page-break-after:avoid;
	mso-outline-level:3;
	font-size:15.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Arial Narrow";
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";
	font-weight:bold;
	mso-bidi-font-weight:normal;}
p.Term1, li.Term1, div.Term1
	{mso-style-name:Term1;
	mso-style-parent:"";
	mso-style-next:Def1;
	margin:0in;
	margin-bottom:.0001pt;
	line-height:12.0pt;
	mso-line-height-rule:exactly;
	mso-pagination:widow-orphan lines-together;
	page-break-after:avoid;
	font-size:10.5pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
p.Lbp, li.Lbp, div.Lbp
	{mso-style-name:Lbp;
	mso-style-parent:Lb1;
	mso-style-next:Le;
	margin-top:0in;
	margin-right:0in;
	margin-bottom:4.0pt;
	margin-left:14.0pt;
	text-indent:-14.0pt;
	line-height:12.0pt;
	mso-line-height-rule:exactly;
	mso-pagination:widow-orphan lines-together;
	tab-stops:14.0pt;
	font-size:10.5pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
p.Np2i, li.Np2i, div.Np2i
	{mso-style-name:Np2i;
	mso-style-parent:Np2;
	mso-style-next:Nei;
	margin-top:0in;
	margin-right:0in;
	margin-bottom:4.0pt;
	margin-left:14.0pt;
	line-height:12.0pt;
	mso-line-height-rule:exactly;
	mso-pagination:widow-orphan;
	page-break-after:avoid;
	font-size:10.5pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
p.Term2, li.Term2, div.Term2
	{mso-style-name:Term2;
	mso-style-parent:Term1;
	mso-style-next:Def2;
	margin-top:0in;
	margin-right:0in;
	margin-bottom:0in;
	margin-left:14.0pt;
	margin-bottom:.0001pt;
	line-height:12.0pt;
	mso-line-height-rule:exactly;
	mso-pagination:widow-orphan lines-together;
	page-break-after:avoid;
	font-size:10.5pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
p.Def1, li.Def1, div.Def1
	{mso-style-name:Def1;
	mso-style-next:Term1;
	margin-top:0in;
	margin-right:0in;
	margin-bottom:4.0pt;
	margin-left:14.0pt;
	line-height:12.0pt;
	mso-line-height-rule:exactly;
	mso-pagination:widow-orphan lines-together;
	font-size:10.5pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
p.Def2, li.Def2, div.Def2
	{mso-style-name:Def2;
	mso-style-parent:Def1;
	mso-style-next:Term2;
	margin-top:0in;
	margin-right:0in;
	margin-bottom:4.0pt;
	margin-left:28.0pt;
	line-height:12.0pt;
	mso-line-height-rule:exactly;
	mso-pagination:widow-orphan lines-together;
	font-size:10.5pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
p.Rule, li.Rule, div.Rule
	{mso-style-name:Rule;
	mso-style-parent:"";
	mso-style-next:Rh1;
	margin-top:14.0pt;
	margin-right:1.5pt;
	margin-bottom:8.0pt;
	margin-left:-88.5pt;
	line-height:6.0pt;
	mso-line-height-rule:exactly;
	mso-pagination:widow-orphan;
	page-break-after:avoid;
	border:none;
	mso-border-bottom-alt:solid windowtext .75pt;
	padding:0in;
	mso-padding-alt:0in 0in 0in 0in;
	font-size:4.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	color:white;}
p.Exw, li.Exw, div.Exw
	{mso-style-name:Exw;
	mso-style-parent:Ex;
	margin-top:0in;
	margin-right:0in;
	margin-bottom:0in;
	margin-left:-1.25in;
	margin-bottom:.0001pt;
	line-height:11.0pt;
	mso-line-height-rule:exactly;
	mso-pagination:widow-orphan lines-together;
	page-break-after:avoid;
	tab-stops:-71.0pt -52.0pt -33.0pt -14.0pt 5.0pt 24.0pt 43.0pt 62.0pt 81.0pt 100.0pt;
	font-size:8.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Lucida Sans Typewriter";
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";}
p.Syn, li.Syn, div.Syn
	{mso-style-name:Syn;
	mso-style-next:Normal;
	margin-top:0in;
	margin-right:0in;
	margin-bottom:8.0pt;
	margin-left:0in;
	line-height:12.0pt;
	mso-line-height-rule:exactly;
	mso-pagination:widow-orphan lines-together;
	page-break-after:avoid;
	tab-stops:14.0pt 21.0pt 28.0pt 35.0pt 42.0pt 49.0pt 56.0pt 63.0pt 70.0pt 77.0pt 84.0pt 91.0pt 98.0pt 105.0pt 112.0pt 119.0pt 1.75in 133.0pt 140.0pt 147.0pt 154.0pt 161.0pt 168.0pt 175.0pt 182.0pt 189.0pt 196.0pt 203.0pt 210.0pt 217.0pt 224.0pt 231.0pt 238.0pt 245.0pt 3.5in 259.0pt 266.0pt 273.0pt 280.0pt 287.0pt 294.0pt 301.0pt 308.0pt 315.0pt 322.0pt 329.0pt 336.0pt 343.0pt;
	font-size:10.5pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
p.Synw, li.Synw, div.Synw
	{mso-style-name:Synw;
	mso-style-next:Normal;
	margin-top:0in;
	margin-right:0in;
	margin-bottom:8.0pt;
	margin-left:-1.25in;
	line-height:12.0pt;
	mso-line-height-rule:exactly;
	mso-pagination:widow-orphan lines-together;
	page-break-after:avoid;
	tab-stops:-76.0pt -62.0pt -48.0pt -34.0pt -20.0pt -6.0pt 8.0pt 14.0pt 21.0pt 28.0pt 35.0pt 42.0pt 49.0pt 56.0pt 63.0pt 70.0pt 77.0pt 84.0pt 91.0pt 98.0pt 105.0pt 112.0pt 119.0pt 1.75in 133.0pt 140.0pt 147.0pt 154.0pt 161.0pt 168.0pt 175.0pt 182.0pt 189.0pt 196.0pt 203.0pt 210.0pt 217.0pt 224.0pt 231.0pt 238.0pt 245.0pt 3.5in 259.0pt 266.0pt 273.0pt 280.0pt 287.0pt 294.0pt 301.0pt 308.0pt;
	font-size:10.5pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
p.Leh, li.Leh, div.Leh
	{mso-style-name:Leh;
	mso-style-parent:Le;
	mso-style-next:"Heading 1";
	margin:0in;
	margin-bottom:.0001pt;
	text-align:right;
	line-height:4.0pt;
	mso-line-height-rule:exactly;
	mso-pagination:widow-orphan lines-together;
	font-size:6.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
p.Lmc, li.Lmc, div.Lmc
	{mso-style-name:Lmc;
	margin-top:0in;
	margin-right:0in;
	margin-bottom:4.0pt;
	margin-left:0in;
	line-height:12.0pt;
	mso-line-height-rule:exactly;
	mso-pagination:widow-orphan;
	font-size:10.5pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
p.Pb, li.Pb, div.Pb
	{mso-style-name:Pb;
	mso-style-parent:"";
	mso-style-next:Normal;
	margin-top:0in;
	margin-right:0in;
	margin-bottom:0in;
	margin-left:-14.0pt;
	margin-bottom:.0001pt;
	line-height:4.0pt;
	mso-line-height-rule:exactly;
	page-break-before:always;
	mso-pagination:widow-orphan;
	page-break-after:avoid;
	mso-element:frame;
	mso-element-frame-hspace:9.0pt;
	mso-element-wrap:around;
	mso-element-anchor-vertical:paragraph;
	mso-element-anchor-horizontal:page;
	mso-element-top:.05pt;
	mso-height-rule:exactly;
	font-size:6.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
p.Procp, li.Procp, div.Procp
	{mso-style-name:Procp;
	mso-style-next:Ln1;
	margin-top:0in;
	margin-right:0in;
	margin-bottom:4.0pt;
	margin-left:0in;
	line-height:12.0pt;
	mso-line-height-rule:exactly;
	mso-pagination:widow-orphan lines-together;
	page-break-after:avoid;
	font-size:10.5pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
p.Tpi, li.Tpi, div.Tpi
	{mso-style-name:Tpi;
	mso-style-parent:Tp;
	mso-style-next:Tp;
	margin-top:1.0pt;
	margin-right:0in;
	margin-bottom:3.0pt;
	margin-left:26.0pt;
	text-indent:-14.0pt;
	line-height:11.0pt;
	mso-line-height-rule:exactly;
	mso-pagination:widow-orphan lines-together;
	tab-stops:26.0pt;
	font-size:9.5pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
p.Tpr, li.Tpr, div.Tpr
	{mso-style-name:Tpr;
	mso-style-parent:Tp;
	mso-style-next:Tp;
	margin-top:1.0pt;
	margin-right:0in;
	margin-bottom:3.0pt;
	margin-left:12.0pt;
	text-align:right;
	line-height:11.0pt;
	mso-line-height-rule:exactly;
	mso-pagination:widow-orphan lines-together;
	font-size:9.5pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
p.Texf, li.Texf, div.Texf
	{mso-style-name:Texf;
	mso-style-parent:Ex;
	margin-top:1.0pt;
	margin-right:0in;
	margin-bottom:3.0pt;
	margin-left:0in;
	line-height:11.0pt;
	mso-line-height-rule:exactly;
	mso-pagination:widow-orphan lines-together;
	page-break-after:avoid;
	tab-stops:19.0pt 38.0pt 57.0pt 76.0pt 95.0pt;
	font-size:8.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Lucida Sans Typewriter";
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";}
p.Tf, li.Tf, div.Tf
	{mso-style-name:Tf;
	mso-style-parent:Tp;
	margin-top:1.0pt;
	margin-right:0in;
	margin-bottom:2.0pt;
	margin-left:7.0pt;
	text-indent:-7.0pt;
	line-height:10.0pt;
	mso-line-height-rule:exactly;
	mso-pagination:widow-orphan lines-together;
	tab-stops:14.0pt;
	font-size:8.5pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
p.Tpf, li.Tpf, div.Tpf
	{mso-style-name:Tpf;
	mso-style-parent:Tp;
	mso-style-next:Tp;
	margin-top:1.0pt;
	margin-right:0in;
	margin-bottom:3.0pt;
	margin-left:0in;
	line-height:11.0pt;
	mso-line-height-rule:exactly;
	mso-pagination:widow-orphan lines-together;
	tab-stops:14.0pt 28.0pt;
	font-size:9.5pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
p.Tew, li.Tew, div.Tew
	{mso-style-name:Tew;
	mso-style-parent:Te;
	mso-style-next:Normal;
	margin-top:4.0pt;
	margin-right:1.5pt;
	margin-bottom:4.0pt;
	margin-left:-88.5pt;
	text-align:right;
	line-height:9.0pt;
	mso-pagination:widow-orphan lines-together;
	border:none;
	mso-border-top-alt:solid windowtext .75pt;
	padding:0in;
	mso-padding-alt:1.0pt 0in 0in 0in;
	font-size:8.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
p.Art, li.Art, div.Art
	{mso-style-name:Art;
	mso-style-parent:"";
	mso-style-next:Cap;
	margin-top:4.0pt;
	margin-right:0in;
	margin-bottom:12.0pt;
	margin-left:-1.25in;
	mso-pagination:widow-orphan lines-together;
	tab-stops:0in 14.0pt 28.0pt;
	font-size:14.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
p.Thf, li.Thf, div.Thf
	{mso-style-name:Thf;
	mso-style-parent:Th;
	mso-style-next:Th;
	margin-top:1.0pt;
	margin-right:0in;
	margin-bottom:3.0pt;
	margin-left:0in;
	line-height:11.0pt;
	mso-line-height-rule:exactly;
	mso-pagination:widow-orphan lines-together;
	page-break-after:avoid;
	font-size:9.5pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	font-weight:bold;
	mso-bidi-font-weight:normal;}
p.Tpif, li.Tpif, div.Tpif
	{mso-style-name:Tpif;
	mso-style-parent:Tpi;
	mso-style-next:Tp;
	margin-top:1.0pt;
	margin-right:0in;
	margin-bottom:3.0pt;
	margin-left:14.0pt;
	text-indent:-14.0pt;
	line-height:11.0pt;
	mso-line-height-rule:exactly;
	mso-pagination:widow-orphan lines-together;
	tab-stops:14.0pt;
	font-size:9.5pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
p.Tr, li.Tr, div.Tr
	{mso-style-name:Tr;
	mso-style-parent:"";
	mso-style-next:Tpf;
	margin:0in;
	margin-bottom:.0001pt;
	text-align:right;
	line-height:1.0pt;
	mso-line-height-rule:exactly;
	mso-pagination:widow-orphan lines-together;
	page-break-after:avoid;
	border:none;
	mso-border-top-alt:solid windowtext .75pt;
	padding:0in;
	mso-padding-alt:0in 0in 0in 0in;
	font-size:4.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
p.Ph, li.Ph, div.Ph
	{mso-style-name:Ph;
	mso-style-parent:Ch;
	mso-style-next:Normal;
	margin:0in;
	margin-bottom:.0001pt;
	line-height:32.0pt;
	mso-line-height-rule:exactly;
	mso-pagination:widow-orphan lines-together;
	page-break-after:avoid;
	mso-element:frame;
	mso-element-frame-width:336.0pt;
	mso-element-frame-height:123.0pt;
	mso-element-frame-hspace:9.0pt;
	mso-element-wrap:no-wrap-beside;
	mso-element-anchor-vertical:paragraph;
	mso-element-anchor-horizontal:margin;
	mso-element-left:-1.25in;
	mso-element-top:.15pt;
	mso-height-rule:exactly;
	font-size:30.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	color:blue;}
p.index, li.index, div.index
	{mso-style-name:index;
	mso-style-next:Normal;
	margin-top:0in;
	margin-right:0in;
	margin-bottom:4.0pt;
	margin-left:0in;
	line-height:12.0pt;
	mso-line-height-rule:exactly;
	mso-pagination:widow-orphan lines-together;
	page-break-after:avoid;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:Arial;
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";
	color:fuchsia;
	display:none;
	mso-hide:all;}
p.CapSd, li.CapSd, div.CapSd
	{mso-style-name:CapSd;
	mso-style-parent:Cap;
	margin:0in;
	margin-bottom:.0001pt;
	line-height:11.0pt;
	mso-line-height-rule:exactly;
	mso-pagination:widow-orphan lines-together;
	tab-stops:right 78.0pt;
	mso-element:frame;
	mso-element-frame-width:78.0pt;
	mso-element-frame-hspace:12.0pt;
	mso-element-wrap:around;
	mso-element-anchor-vertical:paragraph;
	mso-element-anchor-horizontal:page;
	mso-element-top:.05pt;
	mso-height-rule:exactly;
	font-size:9.5pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	font-weight:bold;
	mso-bidi-font-weight:normal;}
p.ArtSd, li.ArtSd, div.ArtSd
	{mso-style-name:ArtSd;
	mso-style-parent:Art;
	mso-style-next:Normal;
	margin-top:0in;
	margin-right:0in;
	margin-bottom:12.0pt;
	margin-left:0in;
	mso-pagination:widow-orphan lines-together;
	page-break-after:avoid;
	tab-stops:right 78.0pt;
	mso-element:frame;
	mso-element-frame-width:78.0pt;
	mso-element-frame-hspace:12.0pt;
	mso-element-wrap:around;
	mso-element-anchor-vertical:paragraph;
	mso-element-anchor-horizontal:page;
	mso-element-top:.05pt;
	mso-height-rule:exactly;
	font-size:14.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
p.Tex, li.Tex, div.Tex
	{mso-style-name:Tex;
	mso-style-parent:Texf;
	margin-top:1.0pt;
	margin-right:0in;
	margin-bottom:3.0pt;
	margin-left:12.0pt;
	line-height:11.0pt;
	mso-line-height-rule:exactly;
	mso-pagination:widow-orphan lines-together;
	page-break-after:avoid;
	tab-stops:31.0pt 50.0pt 69.0pt 88.0pt 107.0pt;
	font-size:8.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Lucida Sans Typewriter";
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";}
p.hb1, li.hb1, div.hb1
	{mso-style-name:*hb1;
	mso-style-parent:"Heading 4";
	mso-style-next:"Heading 4";
	margin-top:1.0pt;
	margin-right:0in;
	margin-bottom:2.0pt;
	margin-left:0in;
	text-align:center;
	line-height:17.0pt;
	mso-line-height-rule:exactly;
	mso-pagination:widow-orphan lines-together;
	page-break-after:avoid;
	mso-outline-level:4;
	background:#9C9CFF;
	mso-shading:windowtext;
	mso-pattern:gray-60 blue;
	mso-element:frame;
	mso-element-frame-width:75.0pt;
	mso-element-frame-hspace:12.0pt;
	mso-element-wrap:around;
	mso-element-anchor-vertical:paragraph;
	mso-element-anchor-horizontal:margin;
	mso-element-left:-1.25in;
	mso-element-top:.05pt;
	mso-height-rule:exactly;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Arial Narrow";
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";
	color:white;
	font-weight:bold;
	mso-bidi-font-weight:normal;}
p.hb2, li.hb2, div.hb2
	{mso-style-name:*hb2;
	mso-style-parent:*hb1;
	margin-top:1.0pt;
	margin-right:0in;
	margin-bottom:1.0pt;
	margin-left:0in;
	text-indent:4.0pt;
	line-height:18.0pt;
	mso-line-height-rule:exactly;
	mso-pagination:widow-orphan lines-together;
	page-break-after:avoid;
	mso-outline-level:4;
	background:#9C9CFF;
	mso-shading:windowtext;
	mso-pattern:gray-60 blue;
	mso-element:frame;
	mso-element-frame-hspace:12.0pt;
	mso-element-wrap:around;
	mso-element-anchor-vertical:paragraph;
	mso-element-anchor-horizontal:margin;
	mso-element-left:right;
	mso-element-top:.1pt;
	mso-height-rule:exactly;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Arial Narrow";
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";
	color:white;
	mso-text-raise:1.5pt;
	font-weight:bold;
	mso-bidi-font-weight:normal;}
p.Cbx, li.Cbx, div.Cbx
	{mso-style-name:*Cbx;
	mso-style-parent:"";
	margin-top:2.0pt;
	margin-right:0in;
	margin-bottom:2.0pt;
	margin-left:8.0pt;
	line-height:10.5pt;
	mso-line-height-rule:exactly;
	mso-pagination:widow-orphan lines-together;
	page-break-after:avoid;
	tab-stops:22.0pt;
	font-size:9.5pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Arial Narrow";
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";}
p.Cbxe, li.Cbxe, div.Cbxe
	{mso-style-name:*Cbxe;
	mso-style-parent:Te;
	margin-top:0in;
	margin-right:1.5pt;
	margin-bottom:4.0pt;
	margin-left:-9.0pt;
	line-height:10.5pt;
	mso-line-height-rule:exactly;
	mso-pagination:widow-orphan lines-together;
	tab-stops:lined 348.0pt;
	font-size:8.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
p.Tart, li.Tart, div.Tart
	{mso-style-name:Tart;
	mso-style-parent:Tp;
	margin-top:1.0pt;
	margin-right:0in;
	margin-bottom:3.0pt;
	margin-left:0in;
	mso-pagination:widow-orphan lines-together;
	tab-stops:12.0pt 14.0pt 28.0pt;
	font-size:9.5pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
p.Sbrh2, li.Sbrh2, div.Sbrh2
	{mso-style-name:Sbrh2;
	mso-style-parent:"Heading 5";
	mso-style-next:Sbrp;
	margin-top:2.0pt;
	margin-right:14.0pt;
	margin-bottom:2.0pt;
	margin-left:14.0pt;
	line-height:12.0pt;
	mso-pagination:widow-orphan lines-together;
	page-break-after:avoid;
	mso-outline-level:5;
	background:#FFFFBA;
	mso-shading:windowtext;
	mso-pattern:gray-40 yellow;
	border:none;
	mso-border-alt:solid white 1.5pt;
	padding:0in;
	mso-padding-alt:14.0pt 14.0pt 14.0pt 14.0pt;
	font-size:10.5pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Arial Narrow";
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";
	font-weight:bold;
	mso-bidi-font-weight:normal;}
p.SbrLb, li.SbrLb, div.SbrLb
	{mso-style-name:SbrLb;
	mso-style-parent:Lb2;
	margin-top:0in;
	margin-right:14.0pt;
	margin-bottom:4.0pt;
	margin-left:28.0pt;
	text-indent:-14.0pt;
	line-height:12.0pt;
	mso-line-height-rule:exactly;
	mso-pagination:widow-orphan lines-together;
	tab-stops:28.0pt;
	background:#FFFFBA;
	mso-shading:windowtext;
	mso-pattern:gray-40 yellow;
	border:none;
	mso-border-alt:solid white 1.5pt;
	padding:0in;
	mso-padding-alt:14.0pt 14.0pt 14.0pt 14.0pt;
	font-size:10.5pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
p.Tei, li.Tei, div.Tei
	{mso-style-name:Tei;
	margin-top:4.0pt;
	margin-right:1.5pt;
	margin-bottom:4.0pt;
	margin-left:15.5pt;
	text-align:right;
	line-height:9.0pt;
	mso-pagination:widow-orphan lines-together;
	border:none;
	mso-border-top-alt:solid windowtext .75pt;
	padding:0in;
	mso-padding-alt:1.0pt 0in 0in 0in;
	font-size:8.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
p.SbrLp, li.SbrLp, div.SbrLp
	{mso-style-name:SbrLp;
	mso-style-parent:SbrLb;
	margin-top:0in;
	margin-right:14.0pt;
	margin-bottom:4.0pt;
	margin-left:28.0pt;
	text-indent:-14.0pt;
	line-height:12.0pt;
	mso-line-height-rule:exactly;
	mso-pagination:widow-orphan lines-together;
	tab-stops:28.0pt;
	background:#FFFFBA;
	mso-shading:windowtext;
	mso-pattern:gray-40 yellow;
	border:none;
	mso-border-alt:solid white 1.5pt;
	padding:0in;
	mso-padding-alt:14.0pt 14.0pt 14.0pt 14.0pt;
	font-size:10.5pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
p.SbrEx, li.SbrEx, div.SbrEx
	{mso-style-name:SbrEx;
	mso-style-parent:Exl;
	margin-top:0in;
	margin-right:14.0pt;
	margin-bottom:0in;
	margin-left:14.0pt;
	margin-bottom:.0001pt;
	line-height:11.0pt;
	mso-line-height-rule:exactly;
	mso-pagination:widow-orphan lines-together;
	page-break-after:avoid;
	tab-stops:33.0pt 52.0pt 71.0pt 1.25in 109.0pt 128.0pt 147.0pt 166.0pt 185.0pt 204.0pt;
	background:#FFFFBA;
	mso-shading:windowtext;
	mso-pattern:gray-40 yellow;
	border:none;
	mso-border-alt:solid white 1.5pt;
	padding:0in;
	mso-padding-alt:14.0pt 14.0pt 14.0pt 14.0pt;
	font-size:8.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Lucida Sans Typewriter";
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";}
p.Exl2, li.Exl2, div.Exl2
	{mso-style-name:Exl2;
	mso-style-parent:Exl;
	margin-top:0in;
	margin-right:0in;
	margin-bottom:0in;
	margin-left:28.0pt;
	margin-bottom:.0001pt;
	line-height:11.0pt;
	mso-line-height-rule:exactly;
	mso-pagination:widow-orphan lines-together;
	page-break-after:avoid;
	tab-stops:33.0pt 52.0pt 71.0pt 1.25in 109.0pt 128.0pt 147.0pt 166.0pt 185.0pt 204.0pt;
	font-size:8.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Lucida Sans Typewriter";
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";}
p.Tes, li.Tes, div.Tes
	{mso-style-name:Tes;
	mso-style-parent:Le;
	mso-style-next:Normal;
	margin:0in;
	margin-bottom:.0001pt;
	text-align:right;
	line-height:8.0pt;
	mso-line-height-rule:exactly;
	mso-pagination:widow-orphan lines-together;
	font-size:6.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
p.Teh, li.Teh, div.Teh
	{mso-style-name:Teh;
	mso-style-parent:Leh;
	mso-style-next:"Heading 1";
	margin:0in;
	margin-bottom:.0001pt;
	text-align:right;
	line-height:4.0pt;
	mso-line-height-rule:exactly;
	mso-pagination:widow-orphan lines-together;
	font-size:6.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
p.SbrLe, li.SbrLe, div.SbrLe
	{mso-style-name:SbrLe;
	mso-style-parent:Le;
	mso-style-next:Sbrp;
	margin-top:0in;
	margin-right:14.0pt;
	margin-bottom:0in;
	margin-left:14.0pt;
	margin-bottom:.0001pt;
	text-align:right;
	line-height:8.0pt;
	mso-pagination:widow-orphan lines-together;
	background:#FFFFBA;
	mso-shading:windowtext;
	mso-pattern:gray-40 yellow;
	border:none;
	mso-border-alt:solid white 1.5pt;
	padding:0in;
	mso-padding-alt:14.0pt 14.0pt 14.0pt 14.0pt;
	font-size:6.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
p.Tsyn, li.Tsyn, div.Tsyn
	{mso-style-name:Tsyn;
	mso-style-parent:Syn;
	margin-top:1.0pt;
	margin-right:0in;
	margin-bottom:3.0pt;
	margin-left:0in;
	line-height:12.0pt;
	mso-line-height-rule:exactly;
	mso-pagination:widow-orphan lines-together;
	page-break-after:avoid;
	tab-stops:14.0pt 21.0pt 28.0pt 35.0pt 42.0pt 49.0pt 56.0pt 63.0pt 70.0pt 77.0pt 84.0pt 91.0pt 98.0pt 105.0pt 112.0pt 119.0pt 1.75in 133.0pt 140.0pt 147.0pt 154.0pt 161.0pt 168.0pt 175.0pt 182.0pt 189.0pt 196.0pt 203.0pt 210.0pt 217.0pt 224.0pt 231.0pt 238.0pt 245.0pt 3.5in 259.0pt 266.0pt 273.0pt 280.0pt 287.0pt 294.0pt 301.0pt 308.0pt 315.0pt 322.0pt 329.0pt 336.0pt 343.0pt;
	font-size:10.5pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
 /* Page Definitions */
@page
	{mso-facing-pages:yes;}
@page Section1
	{size:8.5in 11.0in;
	margin:-127.0pt 76.5pt -115.0pt 166.5pt;
	mso-header-margin:99.35pt;
	mso-footer-margin:.25in;
	mso-gutter-margin:21.0pt;
	mso-page-numbers:211;
	mso-title-page:yes;
	mso-even-header:url("./Chap_08_files/header.htm") eh1;
	mso-header:url("./Chap_08_files/header.htm") h1;
	mso-even-footer:url("./Chap_08_files/header.htm") ef1;
	mso-footer:url("./Chap_08_files/header.htm") f1;
	mso-first-header:url("./Chap_08_files/header.htm") fh1;
	mso-first-footer:url("./Chap_08_files/header.htm") ff1;
	mso-paper-source:1;}
div.Section1
	{page:Section1;}
@page Section2
	{size:8.5in 11.0in;
	margin:-127.0pt 76.5pt -115.0pt 166.5pt;
	mso-header-margin:99.35pt;
	mso-footer-margin:.25in;
	mso-gutter-margin:21.0pt;
	mso-page-numbers:224;
	mso-even-header:url("./Chap_08_files/header.htm") eh2;
	mso-header:url("./Chap_08_files/header.htm") h1;
	mso-even-footer:url("./Chap_08_files/header.htm") ef1;
	mso-footer:url("./Chap_08_files/header.htm") f1;
	mso-first-header:url("./Chap_08_files/header.htm") fh1;
	mso-first-footer:url("./Chap_08_files/header.htm") ff1;
	mso-paper-source:1;}
div.Section2
	{page:Section2;}
-->
</style>
	</head>

	<body lang="EN-US" style="tab-interval:14.0pt">
		<div class="Section1">
			<p class="Cn" style="margin-left:0in"><a name="BeginSelect"></a>Chapter <span style='mso-field-code:"SEQ CHAPTER \\R 8"'>8</span></p>
			<div style="mso-element:frame;mso-element-wrap:no-wrap-beside">
				<table cellspacing="0" cellpadding="0" hspace="0" vspace="0" width="448" height="164">
					<tr>
						<td valign="top" align="left" height="164" style="padding-top:0in;padding-right:
  0in;padding-bottom:0in;padding-left:0in">
							<p class="Ch">Sharing Data and Procedures Among Modules and Libraries</p>
						</td>
					</tr>
				</table>
			</div>
			<![if !supportTextWrap]><br clear="ALL">
			<![endif]>
			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>XE
&quot;PROTO directive:include files&quot;<span style='mso-hide:none'> \z
&quot;MODULW.DOC-1001&quot;</span><![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-end'></span><![endif]-->
			</p>
			<p class="MsoNormal">To use symbols and procedures in more than one module, the assembler must be able to recognize the shared data as global to all the modules where they are used. MASM provides techniques to simplify data-sharing and give a high-level interface to multiple-module programming. With these techniques, you can place shared symbols in include files. This makes the data declarations in the file available to all modules that use the include file.</p>
			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>xe
&quot;aa&quot; \z &quot;MODULW.DOC-1098&quot;<![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-end'></span><![endif]-->
			</p>
			<p class="MsoNormal">This chapter explains the two data-sharing methods MASM 6.1 offers. The first method simplifies data sharing between modules with include files. The second does not involve include files. Instead, this method allows modules to share procedures and data items using the <b style="mso-bidi-font-weight:
normal">PUBLIC</b> and <b style="mso-bidi-font-weight:normal">EXTERN</b> directives.</p>
			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>xe
&quot;aa&quot; \z &quot;MODULW.DOC-1099&quot;<![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-end'></span><![endif]-->
			</p>
			<p class="MsoNormal">The last section of this chapter explains how to create program libraries and access their routines.</p>
			<h1 style="margin-left:0in">Selecting Data-Sharing Methods</h1>
			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>XE
&quot;Data-sharing methods&quot;<span style='mso-hide:none'> \z
&quot;MODULW.DOC-1002&quot;</span><![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-end'></span><![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-begin'></span>XE &quot;Directives:PUBLIC&quot;<span
style='mso-hide:none'> \z &quot;MODULW.DOC-1003&quot;</span><![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-end'></span><![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-begin'></span>xe Directives:EXTERN \t &quot;See EXTERN
directive&quot;<span style='mso-hide:none'> \z &quot;MODULW.DOC-1004&quot;</span><![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-end'></span><![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-begin'></span>XE &quot;Directives:COMM&quot;<span
style='mso-hide:none'> \z &quot;MODULW.DOC-1005&quot;</span><![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-end'></span><![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-begin'></span>xe Directives:EXTERNDEF \t &quot;See
EXTERNDEF directive&quot;<span style='mso-hide:none'> \z
&quot;MODULW.DOC-1006&quot;</span><![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-end'></span><![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-begin'></span>XE &quot;PUBLIC directive&quot;<span
style='mso-hide:none'> \z &quot;MODULW.DOC-1007&quot;</span><![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-end'></span><![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-begin'></span>XE &quot;EXTERN
directive:data-sharing&quot;<span style='mso-hide:none'> \z
&quot;MODULW.DOC-1008&quot;</span><![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-end'></span><![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-begin'></span>XE &quot;COMM directive&quot;<span
style='mso-hide:none'> \z &quot;MODULW.DOC-1009&quot;</span><![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-end'></span><![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-begin'></span>XE &quot;EXTERNDEF
directive:data-sharing&quot;<span style='mso-hide:none'> \z
&quot;MODULW.DOC-1010&quot;</span><![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-end'></span><![endif]-->
			</p>
			<p class="MsoNormal">If data defined in one module is to be used in other modules of a program, you must declare the data public and external. MASM provides several ways to do this:</p>
			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>xe
&quot;aa&quot; \z &quot;MODULW.DOC-1100&quot;<![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-end'></span><![endif]-->
			</p>
			<p class="Lb1"><!--[if supportFields]><span style='mso-element:field-begin'></span>SYMBOL
117 \f &quot;MSIcons&quot; \s 9.5 \h <![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-end'></span><![endif]-->
			<span style="mso-tab-count:
1">&nbsp; </span>Declare a symbol public with the <b style="mso-bidi-font-weight:
normal">PUBLIC</b> directive in the module where it is defined. This makes the symbol available to other modules. You must also place an <b style="mso-bidi-font-weight:
normal">EXTERN</b> statement for that symbol in all other modules that refer to the public symbol. This statement informs the assembler that the symbol is external<span style="letter-spacing:-1.75pt"> </span>&#151;<span style="letter-spacing:
-1.75pt"> </span>that is, defined in another module.</p>
			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>xe
Programs:multiple-module \t &quot;See Multiple-module programs&quot;<span
style='mso-hide:none'> \z &quot;MODULW.DOC-1011&quot;</span><![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-end'></span><![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-begin'></span>XE &quot;Multiple-module
programs:data-sharing methods, selecting&quot;<span style='mso-hide:none'> \z
&quot;MODULW.DOC-1012&quot;</span><![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-end'></span><![endif]-->
			</p>
			<p class="Lb1"><!--[if supportFields]><span style='mso-element:field-begin'></span>SYMBOL
117 \f &quot;MSIcons&quot; \s 9.5 \h <![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-end'></span><![endif]-->
			<span style="mso-tab-count:
1">&nbsp; </span>Declare the data communal with the <b style="mso-bidi-font-weight:
normal">COMM</b> directive. However, communal variables have limitations. You cannot depend on their location in memory because they are allocated by the linker, and they cannot be initialized.</p>
			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>XE
&quot;Global:variables&quot;<span style='mso-hide:none'> \z
&quot;MODULW.DOC-1013&quot;</span><![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-end'></span><![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-begin'></span>XE &quot;Variables:global&quot;<span
style='mso-hide:none'> \z &quot;MODULW.DOC-1014&quot;</span><![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-end'></span><![endif]-->
			</p>
			<p class="MsoNormal">The <b style="mso-bidi-font-weight:normal">EXTERNDEF</b> directive declares a symbol either public or external, as appropriate. <b style="mso-bidi-font-weight:normal">EXTERNDEF</b> simplifies the declarations for global (public and external) variables and encourages the use of include files.</p>
			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>xe
&quot;aa&quot; \z &quot;MODULW.DOC-1101&quot;<![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-end'></span><![endif]-->
			</p>
			<p class="MsoNormal">The next section provides further details on using include files. For more information on <b style="mso-bidi-font-weight:normal">PUBLIC</b> and <b style="mso-bidi-font-weight:normal">EXTERN</b>, see &#147;Using Alternatives to Include Files,&#148; page 219.</p>
			<h1 style="margin-left:0in">Sharing Symbols with Include Files</h1>
			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>XE
&quot;Include files:overview&quot;<span style='mso-hide:none'> \z
&quot;MODULW.DOC-1015&quot;</span><![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-end'></span><![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-begin'></span>XE &quot;INCLUDE directive&quot;<span
style='mso-hide:none'> \z &quot;MODULW.DOC-1016&quot;</span><![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-end'></span><![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-begin'></span>XE &quot;Directives:INCLUDE&quot;<span
style='mso-hide:none'> \z &quot;MODULW.DOC-1017&quot;</span><![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-end'></span><![endif]-->
			</p>
			<p class="MsoNormal">Include files can contain any valid MASM statement, but typically consist of type and symbol declarations. The assembler inserts the contents of the include file into a module at the location of the <b style="mso-bidi-font-weight:normal">INCLUDE</b> directive. Include files are optional, but can simplify project organization by eliminating the need to insert common declarations into all modules of a program. An alternative to using include files is described in &#147;Using Alternatives to Include Files,&#148; page 219.</p>
			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>XE
&quot;Multiple-module programs:sharing symbols with include files&quot;<span
style='mso-hide:none'> \z &quot;MODULW.DOC-1018&quot;</span><![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-end'></span><![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-begin'></span>XE &quot;Multiple-module
programs:modules, organizing&quot;<span style='mso-hide:none'> \z
&quot;MODULW.DOC-1019&quot;</span><![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-end'></span><![endif]-->
			</p>
			<p class="MsoNormal">This section explains how to organize symbol definitions and the declarations that make them global (available to all modules); how to make both variables and procedures public with <b style="mso-bidi-font-weight:normal">EXTERNDEF</b>, <b style="mso-bidi-font-weight:normal">PROTO</b>, and <b style="mso-bidi-font-weight:
normal">COMM</b>.; and where to place these directives in the modules and include files.<span style="mso-spacerun: yes">&nbsp; </span></p>
			<h2 style="margin-left:0in">Organizing Modules</h2>
			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>xe
&quot;aa&quot; \z &quot;MODULW.DOC-1102&quot;<![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-end'></span><![endif]-->
			</p>
			<p class="MsoNormal">This section summarizes the organization of declarations and definitions in modules and include files and the use of the <b style="mso-bidi-font-weight:normal">INCLUDE</b> directive.</p>
			<h4>Include Files</h4>
			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>xe
&quot;aa&quot; \z &quot;MODULW.DOC-1103&quot;<![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-end'></span><![endif]-->
			</p>
			<p class="MsoNormal">Type declarations that need to be identical in every module should be placed in an include file. This ensures consistency and saves time when you update programs. Include files should contain only symbol declarations and any other declarations that are resolved at assembly time. (For a list of assembly-time operations, see &#147;Generating and Running Executable Programs&#148; in Chapter 1.)</p>
			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>xe
&quot;aa&quot; \z &quot;MODULW.DOC-1104&quot;<![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-end'></span><![endif]-->
			</p>
			<p class="MsoNormal">If more than one module accesses the include file, the file cannot contain statements that define and allocate memory for symbols. Otherwise, the assembler would attempt to allocate the same symbol more than once.</p>
			<div style="border:none;border-bottom:solid windowtext .75pt;padding:0in 0in 1.0pt 0in">
				<p class="Ns"><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>
			</div>
			<div style="mso-element:frame;mso-element-wrap:around">
				<table cellspacing="0" cellpadding="0" hspace="0" vspace="0" height="16" align="left">
					<tr>
						<td valign="top" align="left" height="16" style="padding-top:0in;padding-right:
  6.5pt;padding-bottom:0in;padding-left:6.5pt">
							<p class="Nh">Note</p>
						</td>
					</tr>
				</table>
			</div>
			<p class="Np1">An include file used in two or more modules should not allocate data variables.</p>
			<div style="border:none;border-top:solid windowtext .75pt;padding:1.0pt 0in 0in 0in">
				<p class="Ne"><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>
			</div>
			<h4>Modules</h4>
			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>XE
&quot;Multiple-module programs:include files, assembling&quot;<span
style='mso-hide:none'> \z &quot;MODULW.DOC-1020&quot;</span><![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-end'></span><![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-begin'></span>XE &quot;Assembly:INCLUDE files&quot;<span
style='mso-hide:none'> \z &quot;MODULW.DOC-1021&quot;</span><![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-end'></span><![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-begin'></span>XE &quot;INCLUDE directive&quot;<span
style='mso-hide:none'> \z &quot;MODULW.DOC-1022&quot;</span><![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-end'></span><![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-begin'></span>XE &quot;Directives:INCLUDE&quot;<span
style='mso-hide:none'> \z &quot;MODULW.DOC-1023&quot;</span><![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-end'></span><![endif]-->
			</p>
			<p class="MsoNormal">An <b style="mso-bidi-font-weight:normal">INCLUDE</b> statement is usually placed before data and code segments in your modules. When the assembler encounters an <b style="mso-bidi-font-weight:normal">INCLUDE</b> directive, it opens the specified file and assembles all its statements. The assembler then returns to the original module and continues the assembly.</p>
			<div style="mso-element:frame;mso-element-wrap:around;mso-element-top:0in;
mso-height-rule:exactly">
				<table cellspacing="0" cellpadding="0" hspace="0" vspace="0" align="left">
					<tr>
						<td valign="top" align="left" style="padding-top:0in;padding-right:9.0pt;
  padding-bottom:0in;padding-left:9.0pt">
							<p class="Pb" style="margin-left:0in;mso-element:frame;mso-element-wrap:around;
  mso-element-top:0in;mso-height-rule:exactly"><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>
						</td>
					</tr>
				</table>
			</div>
			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>xe
&quot;aa&quot; \z &quot;MODULW.DOC-1105&quot;<![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-end'></span><![endif]-->
			</p>
			<p class="MsoNormal">The <b style="mso-bidi-font-weight:normal">INCLUDE</b> directive takes the form:</p>
			<p class="Syn"><b style="mso-bidi-font-weight:normal">INCLUDE</b> <i style="mso-bidi-font-style:normal">filename</i></p>
			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>XE
&quot;Multiple-module programs:include files, assembling&quot;<span
style='mso-hide:none'> \z &quot;MODULW.DOC-1024&quot;</span><![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-end'></span><![endif]-->
			</p>
			<p class="MsoNormal">where <i style="mso-bidi-font-style:normal">filename</i> is the full name of the include file. For example, the following declaration inserts the contents of the include file SCREEN.INC in your program:</p>
			<p class="Ex"><span style="mso-tab-count:1">&nbsp;&nbsp;&nbsp; </span>INCLUDE SCREEN.INC<br style="mso-special-character:line-break">
			<![if !supportLineBreakNewLine]><br style="mso-special-character:line-break">
			<![endif]></p>
			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>xe
&quot;aa&quot; \z &quot;MODULW.DOC-1106&quot;<![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-end'></span><![endif]-->
			</p>
			<p class="MsoNormal">The filename in the <b style="mso-bidi-font-weight:normal">INCLUDE</b> directive must be fully specified; no extensions are assumed. If a full pathname is not given, the assembler first searches the directory of the source file containing the <b style="mso-bidi-font-weight:normal">INCLUDE</b> directive.</p>
			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>XE
&quot;ML:Command-line options:/I&quot;<span style='mso-hide:none'> \z
&quot;MODULW.DOC-1025&quot;</span><![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-end'></span><![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-begin'></span>XE &quot;/I command-line option,
ML&quot;<span style='mso-hide:none'> \z &quot;MODULW.DOC-1026&quot;</span><![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-end'></span><![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-begin'></span>XE
&quot;Environment:variables:INCLUDE&quot;<span style='mso-hide:none'> \z
&quot;MODULW.DOC-1027&quot;</span><![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-end'></span><![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-begin'></span>XE &quot;INCLUDE environment
variable&quot;<span style='mso-hide:none'> \z &quot;MODULW.DOC-1028&quot;</span><![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-end'></span><![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-begin'></span>XE &quot;Variables:environment&quot;<span
style='mso-hide:none'> \z &quot;MODULW.DOC-1029&quot;</span><![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-end'></span><![endif]-->
			</p>
			<p class="MsoNormal">If the include file is not in the source file directory, the assembler searches the paths specified in the assembler&#146;s command-line option /I, or in PWB&#146;s Include Paths field in the MASM Option dialog box (accessed from the Option menu). The /I option takes this form:</p>
			<p class="Syn"><b style="mso-bidi-font-weight:normal">/I</b> <i style="mso-bidi-font-style:
normal">path</i></p>
			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>XE
&quot;ML:Command-line options:/X&quot;<span style='mso-hide:none'> \z
&quot;MODULW.DOC-1030&quot;</span><![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-end'></span><![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-begin'></span>XE &quot;/X command-line option,
ML&quot;<span style='mso-hide:none'> \z &quot;MODULW.DOC-1031&quot;</span><![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-end'></span><![endif]-->
			</p>
			<p class="MsoNormal">You can include more than one /I option on the command line. The assembler then searches for include files within each specified path in the order given. If none of these directories contains the include file, the assembler finally searches in the paths specified in the INCLUDE environment variable. If the include file still cannot be found, an assembly error occurs. (The /x command-line option tells the assembler to ignore the INCLUDE environment variable when searching for include files.)</p>
			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>XE
&quot;Include files:nested&quot;<span style='mso-hide:none'> \z
&quot;MODULW.DOC-1032&quot;</span><![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-end'></span><![endif]-->
			</p>
			<p class="MsoNormal">An include file may specify another include file. The assembler processes the second include file before returning to the first. Your program can nest include files this way as deeply as the amount of free memory allows.</p>
			<h4>Include Files or Modules</h4>
			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>xe
&quot;aa&quot; \z &quot;MODULW.DOC-1107&quot;<![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-end'></span><![endif]-->
			</p>
			<p class="MsoNormal">You can use the <b style="mso-bidi-font-weight:normal">EQU</b> directive to create named constants that cannot be redefined in your program. (For information about the <b style="mso-bidi-font-weight:normal">EQU</b> directive, see &#147;Integer Constants and Constant Expressions,&#148; page 11.) Placing a constant defined with <b style="mso-bidi-font-weight:normal">EQU</b> in an include file makes it available to all modules that use that include file.</p>
			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>XE
&quot;Include files:assembling&quot;<span style='mso-hide:none'> \z
&quot;MODULW.DOC-1033&quot;</span><![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-end'></span><![endif]-->
			</p>
			<p class="MsoNormal">Placing <b style="mso-bidi-font-weight:normal">TYPEDEF</b>, <b style="mso-bidi-font-weight:normal">STRUCT</b>, <b style="mso-bidi-font-weight:
normal">UNION</b>, and <b style="mso-bidi-font-weight:normal">RECORD</b> definitions in an include file guarantees consistency in type definitions. If required, the variable instances derived from these definitions can be made public among the modules with <b style="mso-bidi-font-weight:normal">EXTERNDEF</b> declarations (see the next section). Macros, including macros defined with <b style="mso-bidi-font-weight:normal">TEXTEQU</b>, must be placed in include files to make them visible in other modules.</p>
			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>xe
&quot;aa&quot; \z &quot;MODULW.DOC-1108&quot;<![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-end'></span><![endif]-->
			</p>
			<p class="MsoNormal">If you elect to use full segment definitions with, or instead of, simplified definitions, you can force a consistent segment order in all files by defining segments in an include file. This technique is explained in &#147;Controlling the Segment Order,&#148;<br>
			page 47.</p>
			<h2 style="margin-left:0in">Declaring Symbols Public and External</h2>
			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>XE
&quot;Multiple-module programs:declaring symbols public and external&quot;<span
style='mso-hide:none'> \z &quot;MODULW.DOC-1034&quot;</span><![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-end'></span><![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-begin'></span>XE &quot;Symbols:declaring public and
external&quot;<span style='mso-hide:none'> \z &quot;MODULW.DOC-1035&quot;</span><![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-end'></span><![endif]-->
			</p>
			<p class="MsoNormal">It is sometimes useful to make certain procedures and variables (such as status flags) global to all program modules. Global variables are freely accessible within all routines; you do not have to explicitly pass them to the routines that need them. This section describes how to make variables and procedures global using the <b style="mso-bidi-font-weight:
normal">EXTERNDEF</b>, <b style="mso-bidi-font-weight:normal">PROTO</b>, or <b style="mso-bidi-font-weight:normal">COMM</b> declarations within include files.</p>
			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>XE
&quot;Procedures:PROTO directive&quot;<span style='mso-hide:none'> \z
&quot;MODULW.DOC-1036&quot;</span><![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-end'></span><![endif]-->
			</p>
			<p class="MsoNormal">When a procedure is defined in one module and called in another module, it must be declared public in the defining module and external in the calling module(s). MASM offers three ways to declare a procedure public and external:</p>
			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>xe
&quot;aa&quot; \z &quot;MODULW.DOC-1109&quot;<![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-end'></span><![endif]-->
			</p>
			<p class="Lb1"><!--[if supportFields]><span style='mso-element:field-begin'></span>SYMBOL
117 \f &quot;MSIcons&quot; \s 9.5 \h <![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-end'></span><![endif]-->
			<span style="mso-tab-count:
1">&nbsp; </span>Use the <b style="mso-bidi-font-weight:normal">PUBLIC</b> directive in the defining module and <b style="mso-bidi-font-weight:normal">EXTERN</b> in all other modules that reference the procedure. The <b style="mso-bidi-font-weight:
normal">PUBLIC</b> and <b style="mso-bidi-font-weight:normal">EXTERN</b> directives are explained on page 220.</p>
			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>xe
&quot;aa&quot; \z &quot;MODULW.DOC-1110&quot;<![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-end'></span><![endif]-->
			</p>
			<p class="Lb1"><!--[if supportFields]><span style='mso-element:field-begin'></span>SYMBOL
117 \f &quot;MSIcons&quot; \s 9.5 \h <![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-end'></span><![endif]-->
			<span style="mso-tab-count:
1">&nbsp; </span>Declare the procedure with <b style="mso-bidi-font-weight:normal">EXTERNDEF</b>.</p>
			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>xe
&quot;aa&quot; \z &quot;MODULW.DOC-1111&quot;<![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-end'></span><![endif]-->
			</p>
			<p class="Lb1"><!--[if supportFields]><span style='mso-element:field-begin'></span>SYMBOL
117 \f &quot;MSIcons&quot; \s 9.5 \h <![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-end'></span><![endif]-->
			<span style="mso-tab-count:
1">&nbsp; </span>Prototype the procedure with the <b style="mso-bidi-font-weight:
normal">PROTO</b> directive.</p>
			<h3>Using EXTERNDEF</h3>
			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>XE
&quot;EXTERNDEF directive:symbols, declaring&quot;<span style='mso-hide:none'>
\z &quot;MODULW.DOC-1037&quot;</span><![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-end'></span><![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-begin'></span>xe Directives:EXTERNDEF \t &quot;See
EXTERNDEF directive&quot;<span style='mso-hide:none'> \z
&quot;MODULW.DOC-1038&quot;</span><![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-end'></span><![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-begin'></span>XE &quot;Procedures:include files&quot;<span
style='mso-hide:none'> \z &quot;MODULW.DOC-1039&quot;</span><![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-end'></span><![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-begin'></span>XE &quot;Procedures:EXTERNDEF
directive&quot;<span style='mso-hide:none'> \z &quot;MODULW.DOC-1040&quot;</span><![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-end'></span><![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-begin'></span>XE &quot;Data types:qualifiedtypes&quot;<span
style='mso-hide:none'> \z &quot;MODULW.DOC-1041&quot;</span><![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-end'></span><![endif]-->
			</p>
			<p class="MsoNormal">MASM treats <b style="mso-bidi-font-weight:normal">EXTERNDEF</b> as a public declaration in the defining module, and as an external declaration in the referencing module(s). You can use the <b style="mso-bidi-font-weight:
normal">EXTERNDEF</b> statement in your include file to make a variable common to two or more modules. <b style="mso-bidi-font-weight:normal">EXTERNDEF</b> works with all types of variables, including arrays, structures, unions, and records. It also works with procedures.<span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </span></p>
			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>xe
&quot;aa&quot; \z &quot;MODULW.DOC-1112&quot;<![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-end'></span><![endif]-->
			</p>
			<p class="MsoNormal">As a result, a single include file can contain an <b style="mso-bidi-font-weight:normal">EXTERNDEF</b> declaration that works in both the defining module and any referencing module. It is ignored in modules that neither define nor reference the variable. Therefore, an include file for a library which is used in multiple .EXE files does not force the definition of a symbol as <b style="mso-bidi-font-weight:normal">EXTERN</b> does.</p>
			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>xe
&quot;aa&quot; \z &quot;MODULW.DOC-1113&quot;<![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-end'></span><![endif]-->
			</p>
			<p class="MsoNormal">The <b style="mso-bidi-font-weight:normal">EXTERNDEF</b> statement takes this form:</p>
			<p class="Syn"><b style="mso-bidi-font-weight:normal">EXTERNDEF</b> <span style="font-family:Times;letter-spacing:-1.5pt">[</span><span style="font-family:
Times">[</span><i style="mso-bidi-font-style:normal">langtype</i><span style="font-family:Times;letter-spacing:-1.5pt">]</span><span style="font-family:
Times">]</span> <i style="mso-bidi-font-style:normal">name</i>:<i style="mso-bidi-font-style:normal">qualifiedtype</i></p>
			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>xe
&quot;aa&quot; \z &quot;MODULW.DOC-1114&quot;<![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-end'></span><![endif]-->
			</p>
			<p class="MsoNormal">The <i style="mso-bidi-font-style:normal">name</i> is the variable&#146;s identifier. The <i style="mso-bidi-font-style:normal">qualifiedtype</i> is explained in detail in &#147;Data Types,&#148; page 14.</p>
			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>XE
&quot;Multiple-module programs:EXTERNDEF, using&quot;<span style='mso-hide:
none'> \z &quot;MODULW.DOC-1042&quot;</span><![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-end'></span><![endif]-->
			</p>
			<p class="MsoNormal">The optional <i style="mso-bidi-font-style:normal">langtype</i> specifier sets the naming conventions for the <i style="mso-bidi-font-style:
normal">name</i> it precedes. It overrides any language specified in the <b style="mso-bidi-font-weight:normal">.MODEL</b> directive. The specifier can be <b style="mso-bidi-font-weight:normal">C</b>, <b style="mso-bidi-font-weight:normal">SYSCALL</b>, <b style="mso-bidi-font-weight:normal">STDCALL</b>, <b style="mso-bidi-font-weight:
normal">PASCAL</b>, <b style="mso-bidi-font-weight:normal">FORTRAN</b>, or <b style="mso-bidi-font-weight:normal">BASIC</b>. For information on selecting the appropriate <i style="mso-bidi-font-style:normal">langtype</i> type, see &#147;Naming and Calling Conventions,&#148; page 308.</p>
			<div style="mso-element:frame;mso-element-wrap:around;mso-height-rule:exactly">
				<table cellspacing="0" cellpadding="0" hspace="0" vspace="0" align="left">
					<tr>
						<td valign="top" align="left" style="padding-top:0in;padding-right:9.0pt;
  padding-bottom:0in;padding-left:9.0pt">
							<p class="Pb" style="margin-left:0in"><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>
						</td>
					</tr>
				</table>
			</div>
			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>xe
&quot;aa&quot; \z &quot;MODULW.DOC-1115&quot;<![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-end'></span><![endif]-->
			</p>
			<p class="MsoNormal">The following diagram shows the statements that declare an array, make it public, and use it in another module.</p>
			<p class="Art" style="margin-left:0in"><span style="mso-tab-count:1">&nbsp;&nbsp;&nbsp; </span><span style='mso-field-code:"include M\:\\\\SLM\\\\SRC\\\\MASM61\\\\APPS\\\\ART\\\\mpchp08\.doc art_mp0801_eps  \\* mergeformat"'><a name="art_mp0801_eps"></a><a name="space_mp0801_eps"><span style="mso-bookmark:
art_mp0801_eps"></span></a><!--[if supportFields]><span style='mso-bookmark:
space_mp0801_eps'><span style='mso-bookmark:art_mp0801_eps'></span></span><span
style='mso-element:field-begin'></span><span style='mso-bookmark:space_mp0801_eps'><span
style='mso-bookmark:art_mp0801_eps'><b style='mso-bidi-font-weight:normal'>IMPORT
M:\\SLM\\SRC\\MASM61\\APPS\\ART\\MP0801.EPS \* mergeformat<span
style='mso-element:field-separator'></span></b></span></span><![endif]-->
			<span style="mso-bookmark:space_mp0801_eps"><span style="mso-bookmark:art_mp0801_eps"><b style="mso-bidi-font-weight:normal"><!--[if gte vml 1]><v:shapetype id="_x0000_t75"
 coordsize="21600,21600" o:spt="75" o:preferrelative="t" path="m@4@5l@4@11@9@11@9@5xe"
 filled="f" stroked="f">
 <v:stroke joinstyle="miter"/>
 <v:formulas>
  <v:f eqn="if lineDrawn pixelLineWidth 0"/>
  <v:f eqn="sum @0 1 0"/>
  <v:f eqn="sum 0 0 @1"/>
  <v:f eqn="prod @2 1 2"/>
  <v:f eqn="prod @3 21600 pixelWidth"/>
  <v:f eqn="prod @3 21600 pixelHeight"/>
  <v:f eqn="sum @0 0 1"/>
  <v:f eqn="prod @6 1 2"/>
  <v:f eqn="prod @7 21600 pixelWidth"/>
  <v:f eqn="sum @8 21600 0"/>
  <v:f eqn="prod @7 21600 pixelHeight"/>
  <v:f eqn="sum @10 21600 0"/>
 </v:formulas>
 <v:path o:extrusionok="f" gradientshapeok="t" o:connecttype="rect"/>
 <o:lock v:ext="edit" aspectratio="t"/>
</v:shapetype><v:shape id="_x0000_i1025" type="#_x0000_t75" style='width:297.75pt;
 height:150.75pt'>
 <v:imagedata src="./Chap_08_files/image001.wmz" o:href="file:///M:/SLM/SRC/MASM61/APPS/ART/MP0801.EPS"/>
</v:shape><![endif]-->
			<![if !vml]><img width="397" height="201" src="Chap_08_files/image002.gif" v:shapes="_x0000_i1025"><![endif]></b></span></span><!--[if supportFields]><span
style='mso-bookmark:space_mp0801_eps'><span style='mso-bookmark:art_mp0801_eps'></span></span><span
style='mso-element:field-end'></span><![endif]-->
			 <span style="mso-bookmark:
space_mp0801_eps"><span style="mso-bookmark:art_mp0801_eps"></span></span></span></p>
			<p class="Cap">Figure <!--[if supportFields]><span style='font-family:Times'><span
style='mso-element:field-begin'></span>SEQ chapter \c<span style='mso-element:
field-separator'></span></span><![endif]-->
			<span style="font-family:Times">8</span><!--[if supportFields]><span
style='font-family:Times'><span style='mso-element:field-end'></span></span><![endif]-->
			 <span style="font-family:Times">.</span><!--[if supportFields]><span
style='font-family:Times'><span style='mso-element:field-begin'></span>SEQ
figure<span style='mso-element:field-separator'></span></span><![endif]-->
			 <span style="font-family:Times">1</span><!--[if supportFields]><span
style='font-family:Times'><span style='mso-element:field-end'></span></span><![endif]-->
			 <span style="font-family:Helvetica-Narrow"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </span></span>Using EXTERNDEF for Variables</p>
			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>XE
&quot;EXTERNDEF directive:symbols, declaring&quot;<span style='mso-hide:none'>
\z &quot;MODULW.DOC-1043&quot;</span><![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-end'></span><![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-begin'></span>xe Directives:EXTERNDEF \t &quot;See
EXTERNDEF directive&quot;<span style='mso-hide:none'> \z
&quot;MODULW.DOC-1044&quot;</span><![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-end'></span><![endif]-->
			</p>
			<p class="MsoNormal">The file position of <b style="mso-bidi-font-weight:normal">EXTERNDEF</b> directives is important. For more information, see &#147;Positioning External Declarations,&#148; following.<span style="mso-spacerun: yes">&nbsp; </span></p>
			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>XE
&quot;Procedures:EXTERNDEF directive&quot;<span style='mso-hide:none'> \z
&quot;MODULW.DOC-1045&quot;</span><![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-end'></span><![endif]-->
			</p>
			<p class="MsoNormal">You can also make procedures visible by using <b style="mso-bidi-font-weight:normal">EXTERNDEF</b> without <b style="mso-bidi-font-weight:
normal">PROTO</b> inside an include file. This method treats the procedure name as a simple identifier, without the parameter list, so you forgo the assembler&#146;s ability to check for the correct parameters during assembly. Use<b style="mso-bidi-font-weight:normal"> EXTERNDEF</b> with procedures in the same way as variables:</p>
			<p class="Ex">EXTERNDEF MyProc:FAR<span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>; Declare far procedure external<br style="mso-special-character:line-break">
			<![if !supportLineBreakNewLine]><br style="mso-special-character:line-break">
			<![endif]></p>
			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>XE
&quot;Double colon (\\:\\:)&quot;<span style='mso-hide:none'> \z
&quot;MODULW.DOC-1046&quot;</span><![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-end'></span><![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-begin'></span>XE &quot;\\:\\: (double colon)&quot;<span
style='mso-hide:none'> \z &quot;MODULW.DOC-1047&quot;</span><![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-end'></span><![endif]-->
			</p>
			<p class="MsoNormal">You can also use <b style="mso-bidi-font-weight:normal">EXTERNDEF</b> to make a code label global between modules so that one module can reference a label in another module. Give the label global scope with the double colon operator, like this:<span style="mso-spacerun: yes">&nbsp; </span></p>
			<p class="Ex">EXTERNDEF codelabel:NEAR<br>
			.<br>
			.<br>
			.<br>
			codelabel::<br style="mso-special-character:line-break">
			<![if !supportLineBreakNewLine]><br style="mso-special-character:line-break">
			<![endif]></p>
			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>xe
&quot;aa&quot; \z &quot;MODULW.DOC-1116&quot;<![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-end'></span><![endif]-->
			</p>
			<p class="MsoNormal">Another module can reference <span style='font-size:9.5pt;
font-family:"Lucida Sans Typewriter"'>codelabel</span> like this:</p>
			<p class="Ex" style="page-break-after:auto">EXTERNDEF codelabel:NEAR<br>
			.<br>
			.<br>
			.<br>
			<span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>jmp<span style="mso-spacerun:
yes">&nbsp;&nbsp;&nbsp;&nbsp; </span>codelabel<br style="mso-special-character:line-break">
			<![if !supportLineBreakNewLine]><br style="mso-special-character:line-break">
			<![endif]></p>
			<h3>Using PROTO</h3>
			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>xe
&quot;External declarations&quot; \z &quot;MODULW.DOC-1048&quot;<![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-end'></span><![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-begin'></span>xe &quot;Proto directive:include files,
in&quot; \z &quot;MODULW.DOC-1049&quot;<![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-end'></span><![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-begin'></span>XE &quot;Procedures:INVOKE
directive&quot;<span style='mso-hide:none'> \z &quot;MODULW.DOC-1050&quot;</span><![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-end'></span><![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-begin'></span>XE &quot;Multiple-module programs:PROTO,
using&quot;<span style='mso-hide:none'> \z &quot;MODULW.DOC-1051&quot;</span><![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-end'></span><![endif]-->
			</p>
			<p class="Syn">This section describes how to prototype a procedure with the <b style="mso-bidi-font-weight:normal">PROTO</b> directive. <b style="mso-bidi-font-weight:
normal">PROTO</b> automatically issues an <b style="mso-bidi-font-weight:normal">EXTERNDEF</b> for the procedure unless the <b style="mso-bidi-font-weight:normal">PROC</b> statement declares the procedure <b style="mso-bidi-font-weight:normal">PRIVATE</b>. Defining a prototype enables type-checking for the procedure arguments.</p>
			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>xe
&quot;aa&quot; \z &quot;MODULW.DOC-1117&quot;<![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-end'></span><![endif]-->
			</p>
			<p class="MsoNormal">Follow these steps to create an interface for a procedure defined in one module and called from other modules:</p>
			<p class="Ln1" style="margin-left:22.0pt"><span style="mso-tab-count:1"></span>1.<span style="mso-tab-count:1">&nbsp; </span>Place the <b style="mso-bidi-font-weight:normal">PROTO</b> declaration in the include file.</p>
			<p class="Ln1" style="margin-left:22.0pt"><span style="mso-tab-count:1"></span>2.<span style="mso-tab-count:1">&nbsp; </span>Define the procedure with <b style="mso-bidi-font-weight:
normal">PROC</b> in one module. The <b style="mso-bidi-font-weight:normal">PROC</b> directive declares the procedure <b style="mso-bidi-font-weight:normal">PUBLIC</b> by default.</p>
			<p class="Ln1" style="margin-left:22.0pt"><span style="mso-tab-count:1"></span>3.<span style="mso-tab-count:1">&nbsp; </span>Call the procedure with the <b style="mso-bidi-font-weight:normal">INVOKE</b> statement (or with <b style="mso-bidi-font-weight:normal">CALL</b>). Make sure that all calling modules access the include file.</p>
			<p class="Le"><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>
			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>xe
&quot;aa&quot; \z &quot;MODULW.DOC-1118&quot;<![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-end'></span><![endif]-->
			</p>
			<p class="MsoNormal">For descriptions, syntax, and examples of <b style="mso-bidi-font-weight:normal">PROTO</b>, <b style="mso-bidi-font-weight:
normal">PROC</b>, and <b style="mso-bidi-font-weight:normal">INVOKE, </b>see Chapter 7, &#147;Controlling Program Flow.&#148;</p>
			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>xe
&quot;aa&quot; \z &quot;MODULW.DOC-1119&quot;<![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-end'></span><![endif]-->
			</p>
			<p class="MsoNormal">The following example illustrates these three steps. In the example, a <b style="mso-bidi-font-weight:normal">PROTO</b> statement defines the far procedure <span style='font-size:9.5pt;font-family:"Lucida Sans Typewriter"'>CopyFile</span>, which uses the C parameter-passing and naming conventions, and takes the arguments <span style='font-size:9.5pt;font-family:"Lucida Sans Typewriter"'>filename</span> and <span style='font-size:9.5pt;font-family:"Lucida Sans Typewriter"'>numberlines</span>. The diagram following the example shows the file placement for these statements.</p>
			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>xe
Directives:PROTO \t &quot;See PROTO directive&quot;<span style='mso-hide:none'>
\z &quot;MODULW.DOC-1052&quot;</span><![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-end'></span><![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-begin'></span>XE &quot;Procedures:PROTO
directive&quot;<span style='mso-hide:none'> \z &quot;MODULW.DOC-1053&quot;</span><![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-end'></span><![endif]-->
			</p>
			<p class="MsoNormal">This definition goes into the include file:</p>
			<p class="Ex">CopyFile PROTO FAR C filename:BYTE, numberlines:WORD<br style="mso-special-character:line-break">
			<![if !supportLineBreakNewLine]><br style="mso-special-character:line-break">
			<![endif]></p>
			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>xe
&quot;aa&quot; \z &quot;MODULW.DOC-1120&quot;<![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-end'></span><![endif]-->
			</p>
			<p class="MsoNormal">The procedure definition for <span style='font-size:9.5pt;
font-family:"Lucida Sans Typewriter"'>CopyFile</span> is:</p>
			<p class="Ex">CopyFile PROC FAR C USES cx, filename:BYTE, numberlines:WORD<br style="mso-special-character:line-break">
			<![if !supportLineBreakNewLine]><br style="mso-special-character:line-break">
			<![endif]></p>
			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>xe
&quot;aa&quot; \z &quot;MODULW.DOC-1121&quot;<![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-end'></span><![endif]-->
			</p>
			<p class="MsoNormal">To call the <span style='font-size:9.5pt;font-family:"Lucida Sans Typewriter"'>CopyFile</span> procedure, you can use this <b style="mso-bidi-font-weight:normal">INVOKE</b> statement:</p>
			<p class="Ex"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>INVOKE<span style="mso-spacerun: yes">&nbsp;&nbsp; </span>CopyFile, NameVar, 200</p>
			<p class="Ex" style="page-break-after:auto"><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>
			<p class="Art" style="margin-left:0in"><span style="mso-tab-count:1">&nbsp;&nbsp;&nbsp; </span><span style='mso-field-code:"include M\:\\\\SLM\\\\SRC\\\\MASM61\\\\APPS\\\\ART\\\\mpchp08\.doc art_mp0802_eps  \\* mergeformat"'><a name="art_mp0802_eps"></a><a name="space_mp0802_eps"><span style="mso-bookmark:
art_mp0802_eps"></span></a><!--[if supportFields]><span style='mso-bookmark:
space_mp0802_eps'><span style='mso-bookmark:art_mp0802_eps'></span></span><span
style='mso-element:field-begin'></span><span style='mso-bookmark:space_mp0802_eps'><span
style='mso-bookmark:art_mp0802_eps'><b style='mso-bidi-font-weight:normal'><span
style='font-family:"Lucida Sans Typewriter"'>IMPORT
M:\\SLM\\SRC\\MASM61\\APPS\\ART\\MP0802.EPS \* mergeformat<span
style='mso-element:field-separator'></span></span></b></span></span><![endif]-->
			<span style="mso-bookmark:space_mp0802_eps"><span style="mso-bookmark:art_mp0802_eps"><b style="mso-bidi-font-weight:normal"><span style='font-family:"Lucida Sans Typewriter"'><!--[if gte vml 1]><v:shape
 id="_x0000_i1026" type="#_x0000_t75" style='width:348pt;height:167.25pt'>
 <v:imagedata src="./Chap_08_files/image003.wmz" o:href="file:///M:/SLM/SRC/MASM61/APPS/ART/MP0802.EPS"/>
</v:shape><![endif]-->
			<![if !vml]><img width="464" height="223" src="Chap_08_files/image004.gif" v:shapes="_x0000_i1026"><![endif]></span></b></span></span><!--[if supportFields]><span
style='mso-bookmark:space_mp0802_eps'><span style='mso-bookmark:art_mp0802_eps'></span></span><span
style='mso-element:field-end'></span><![endif]-->
			 <span style="mso-bookmark:
space_mp0802_eps"><span style="mso-bookmark:art_mp0802_eps"></span></span></span></p>
			<p class="Cap">Figure<span style="font-family:Helvetica-Narrow"> </span><!--[if supportFields]><span
style='font-family:Times'><span style='mso-element:field-begin'></span>SEQ
chapter \c<span style='mso-element:field-separator'></span></span><![endif]-->
			<span style="font-family:Times">8</span><!--[if supportFields]><span
style='font-family:Times'><span style='mso-element:field-end'></span></span><![endif]-->
			 <span style="font-family:Times">.</span><!--[if supportFields]><span
style='font-family:Times'><span style='mso-element:field-begin'></span>SEQ
figure<span style='mso-element:field-separator'></span></span><![endif]-->
			 <span style="font-family:Times">2</span><!--[if supportFields]><span
style='font-family:Times'><span style='mso-element:field-end'></span></span><![endif]-->
			 <span style="font-family:Helvetica-Narrow"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </span></span><span style="font-family:Times">Using PROTO and INVOKE</span></p>
			<h3>Using COMM</h3>
			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>XE
&quot;Communal variables&quot;<span style='mso-hide:none'> \z
&quot;MODULW.DOC-1054&quot;</span><![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-end'></span><![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-begin'></span>XE &quot;External variables&quot;<span
style='mso-hide:none'> \z &quot;MODULW.DOC-1055&quot;</span><![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-end'></span><![endif]-->
			</p>
			<p class="MsoNormal">Another way to share variables among modules is to add the <b style="mso-bidi-font-weight:normal">COMM</b> (communal) declaration to your include file. Since communal variables are allocated by the linker and cannot be initialized, you cannot depend on their location or sequence.</p>
			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>XE
&quot;Variables:communal&quot;<span style='mso-hide:none'> \z
&quot;MODULW.DOC-1056&quot;</span><![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-end'></span><![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-begin'></span>XE &quot;Variables:external&quot;<span
style='mso-hide:none'> \z &quot;MODULW.DOC-1057&quot;</span><![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-end'></span><![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-begin'></span>XE &quot;Multiple-module programs:COMM,
using&quot;<span style='mso-hide:none'> \z &quot;MODULW.DOC-1058&quot;</span><![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-end'></span><![endif]-->
			</p>
			<p class="MsoNormal">Communal variables are supported by MASM primarily for compatibility with communal variables in Microsoft C. Communal variables are not used in any other Microsoft language, and they are not compatible with C++ and some other languages.</p>
			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>XE
&quot;COMM directive&quot;<span style='mso-hide:none'> \z
&quot;MODULW.DOC-1059&quot;</span><![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-end'></span><![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-begin'></span>XE &quot;Directives:COMM&quot;<span
style='mso-hide:none'> \z &quot;MODULW.DOC-1060&quot;</span><![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-end'></span><![endif]-->
			</p>
			<p class="MsoNormal"><b style="mso-bidi-font-weight:normal">COMM</b> declares a data variable external and instructs the linker to allocate the variable if it has not been explicitly defined in a module. The memory space for communal variables may not be assigned until load time, so using communal variables may reduce the size of your executable file.</p>
			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>xe
&quot;aa&quot; \z &quot;MODULW.DOC-1122&quot;<![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-end'></span><![endif]-->
			</p>
			<p class="MsoNormal">The <b style="mso-bidi-font-weight:normal">COMM</b> declaration has the syntax:</p>
			<p class="Syn"><b style="mso-bidi-font-weight:normal">COMM</b> <span style="font-family:Times;letter-spacing:-1.5pt">[</span><span style="font-family:
Times">[</span><i style="mso-bidi-font-style:normal">langtype</i><span style="font-family:Times;letter-spacing:-1.5pt">]</span><span style="font-family:
Times">]</span> <span style="font-family:Times;letter-spacing:-1.5pt">[</span><span style="font-family:Times">[</span><b style="mso-bidi-font-weight:normal">NEAR</b> | <b style="mso-bidi-font-weight:normal">FAR</b><span style="font-family:Times;
letter-spacing:-1.5pt">]</span><span style="font-family:Times">]</span> <i style="mso-bidi-font-style:normal">label</i><b style="mso-bidi-font-weight:
normal">:</b><i style="mso-bidi-font-style:normal">type</i><span style="font-family:Times;letter-spacing:-1.5pt">[</span><span style="font-family:
Times">[</span><b style="mso-bidi-font-weight:normal">:</b><i style="mso-bidi-font-style:
normal">count</i><span style="font-family:Times;letter-spacing:-1.5pt">]</span><span style="font-family:Times">]</span></p>
			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>xe
&quot;aa&quot; \z &quot;MODULW.DOC-1123&quot;<![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-end'></span><![endif]-->
			</p>
			<p class="MsoNormal">The <i style="mso-bidi-font-style:normal">label</i> is the name of the variable. The <i style="mso-bidi-font-style:normal">langtype</i> sets the naming conventions for the name it precedes. It overrides any language specified in the <b style="mso-bidi-font-weight:normal">.MODEL</b> directive.</p>
			<div style="mso-element:frame;mso-element-wrap:around;mso-height-rule:exactly">
				<table cellspacing="0" cellpadding="0" hspace="0" vspace="0" align="left">
					<tr>
						<td valign="top" align="left" style="padding-top:0in;padding-right:9.0pt;
  padding-bottom:0in;padding-left:9.0pt">
							<p class="Pb" style="margin-left:0in"><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>
						</td>
					</tr>
				</table>
			</div>
			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>XE
&quot;COMM directive&quot;<span style='mso-hide:none'> \z
&quot;MODULW.DOC-1061&quot;</span><![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-end'></span><![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-begin'></span>XE &quot;Directives:COMM&quot;<span
style='mso-hide:none'> \z &quot;MODULW.DOC-1062&quot;</span><![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-end'></span><![endif]-->
			</p>
			<p class="MsoNormal">If <b style="mso-bidi-font-weight:normal">NEAR</b> or <b style="mso-bidi-font-weight:normal">FAR</b> is not specified, the variable determines the default from the current memory model (<b style="mso-bidi-font-weight:
normal">NEAR</b> for <b style="mso-bidi-font-weight:normal">TINY</b>, <b style="mso-bidi-font-weight:normal">SMALL</b>, <b style="mso-bidi-font-weight:
normal">COMPACT</b>, and <b style="mso-bidi-font-weight:normal">FLAT</b>; <b style="mso-bidi-font-weight:normal">FAR</b> for <b style="mso-bidi-font-weight:
normal">MEDIUM</b>, <b style="mso-bidi-font-weight:normal">LARGE</b>, and <b style="mso-bidi-font-weight:normal">HUGE</b>). If you do not provide a memory model with the .<b style="mso-bidi-font-weight:normal">MODEL</b> directive, you must specify a distance when accessing a communal variable, like this:</p>
			<p class="Ex" style="page-break-after:auto"><span style="mso-spacerun:
yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>mov<span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp; </span>ax, NEAR PTR CommNear<br>
			<span style="mso-spacerun: yes">&nbsp; </span><span style="mso-spacerun:
yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>mov<span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp; </span>bx, FAR PTR CommFar<br style="mso-special-character:line-break">
			<![if !supportLineBreakNewLine]><br style="mso-special-character:line-break">
			<![endif]></p>
			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>xe
&quot;aa&quot; \z &quot;MODULW.DOC-1124&quot;<![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-end'></span><![endif]-->
			</p>
			<p class="MsoNormal">The <i style="mso-bidi-font-style:normal">type</i> can be a constant expression, but it is usually a type such as <b style="mso-bidi-font-weight:
normal">BYTE</b>, <b style="mso-bidi-font-weight:normal">WORD</b>, or <b style="mso-bidi-font-weight:normal">DWORD</b>, or a structure, union, or record. If you first declare the <i style="mso-bidi-font-style:normal">type</i> with <b style="mso-bidi-font-weight:normal">TYPEDEF</b>, CodeView can provide type information. The <i style="mso-bidi-font-style:normal">count</i> is the number of elements. If no <i style="mso-bidi-font-style:normal">count</i> is given, one element is assumed.</p>
			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>xe
&quot;aa&quot; \z &quot;MODULW.DOC-1125&quot;<![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-end'></span><![endif]-->
			</p>
			<p class="MsoNormal">The following example creates the on far variable <span style='font-size:9.5pt;font-family:"Lucida Sans Typewriter"'>DataBlock</span>, which is a 1,024-element array of uninitialized signed doublewords:</p>
			<p class="Ex">COMM FAR DataBlock:SDWORD:1024<br style="mso-special-character:
line-break">
			<![if !supportLineBreakNewLine]><br style="mso-special-character:line-break">
			<![endif]></p>
			<div style="border:none;border-bottom:solid windowtext .75pt;padding:0in 0in 1.0pt 0in">
				<p class="Ns"><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>
			</div>
			<div style="mso-element:frame;mso-element-wrap:around">
				<table cellspacing="0" cellpadding="0" hspace="0" vspace="0" height="16" align="left">
					<tr>
						<td valign="top" align="left" height="16" style="padding-top:0in;padding-right:
  6.5pt;padding-bottom:0in;padding-left:6.5pt">
							<p class="Nh">Note</p>
						</td>
					</tr>
				</table>
			</div>
			<p class="Np1">C variables declared outside functions (except static variables) are communal unless explicitly initialized; they are the same as assembly-language communal variables. If you are writing assembly-language modules for C, you can declare the same communal variables in both C and MASM include files. However, communal variables in C do not have to be declared communal in assembler. The linker will match the <b style="mso-bidi-font-weight:
normal">EXTERN</b>, <b style="mso-bidi-font-weight:normal">PUBLIC</b>, and <b style="mso-bidi-font-weight:normal">COMM</b> statements for the variable.</p>
			<div style="border:none;border-top:solid windowtext .75pt;padding:1.0pt 0in 0in 0in">
				<p class="Ne"><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>
			</div>
			<p class="index"><!--[if supportFields]><b style='mso-bidi-font-weight:normal'><span
style='font-size:9.0pt'><span style='mso-element:field-begin'></span>xe
&quot;aa&quot; \z &quot;MODULW.DOC-1126&quot;</span></b><![endif]-->
			<!--[if supportFields]><b
style='mso-bidi-font-weight:normal'><span style='font-size:9.0pt'><span
style='mso-element:field-end'></span></span></b><![endif]-->
			</p>
			<p class="MsoNormal"><b style="mso-bidi-font-weight:normal">EXTERNDEF</b> (explained in the previous section) is more flexible than <b style="mso-bidi-font-weight:
normal">COMM</b> because you can initialize variables defined with it, and your code can rely on the position and sequence of the defined data.</p>
			<h2 style="margin-left:0in">Positioning External Declarations</h2>
			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>XE
&quot;EXTERNDEF directive:positioning&quot;<span style='mso-hide:none'> \z
&quot;MODULW.DOC-1063&quot;</span><![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-end'></span><![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-begin'></span>XE &quot;EXTERN
directive:positioning&quot;<span style='mso-hide:none'> \z
&quot;MODULW.DOC-1064&quot;</span><![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-end'></span><![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-begin'></span>xe Directives:EXTERNDEF \t &quot;See
EXTERNDEF directive&quot;<span style='mso-hide:none'> \z
&quot;MODULW.DOC-1065&quot;</span><![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-end'></span><![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-begin'></span>xe Directives:EXTERN \t &quot;See EXTERN
directive&quot;<span style='mso-hide:none'> \z &quot;MODULW.DOC-1066&quot;</span><![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-end'></span><![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-begin'></span>XE &quot;External declarations&quot;<span
style='mso-hide:none'> \z &quot;MODULW.DOC-1067&quot;</span><![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-end'></span><![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-begin'></span>XE &quot;Multiple-module
programs:external declarations, positioning&quot;<span style='mso-hide:none'>
\z &quot;MODULW.DOC-1068&quot;</span><![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-end'></span><![endif]-->
			</p>
			<p class="MsoNormal">Although LINK determines the actual address of an external symbol, the assembler assumes a default segment for the symbol, based on the location of the external directive in the source code. You should therefore position <b style="mso-bidi-font-weight:normal">EXTERN</b> and<br>
			<b style="mso-bidi-font-weight:normal">EXTERNDEF</b> directives according to these rules:<span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </span></p>
			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>xe
&quot;aa&quot; \z &quot;MODULW.DOC-1127&quot;<![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-end'></span><![endif]-->
			</p>
			<p class="Lb1"><!--[if supportFields]><span style='mso-element:field-begin'></span>SYMBOL
117 \f &quot;MSIcons&quot; \s 9.5 \h <![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-end'></span><![endif]-->
			<span style="mso-tab-count:
1">&nbsp; </span>If you know which segment defines an external symbol, put the <b style="mso-bidi-font-weight:normal">EXTERN</b> statement in that segment.</p>
			<div style="mso-element:frame;mso-element-wrap:around;mso-height-rule:exactly">
				<table cellspacing="0" cellpadding="0" hspace="0" vspace="0" align="left">
					<tr>
						<td valign="top" align="left" style="padding-top:0in;padding-right:9.0pt;
  padding-bottom:0in;padding-left:9.0pt">
							<p class="Pb" style="margin-left:0in"><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>
						</td>
					</tr>
				</table>
			</div>
			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>xe
&quot;aa&quot; \z &quot;MODULW.DOC-1128&quot;<![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-end'></span><![endif]-->
			</p>
			<p class="Lb1"><!--[if supportFields]><span style='mso-element:field-begin'></span>SYMBOL
117 \f &quot;MSIcons&quot; \s 9.5 \h <![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-end'></span><![endif]-->
			<span style="mso-tab-count:
1">&nbsp; </span>If you know the group but not the segment, position the <b style="mso-bidi-font-weight:normal">EXTERN</b> statement outside any segment and reference the variable with the group name. For example, if <span style='font-size:9.5pt;font-family:"Lucida Sans Typewriter"'>var1</span> is in DGROUP, reference the variable as</p>
			<p class="Exl"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>mov DGROUP:var1, 10<br style="mso-special-character:line-break">
			<![if !supportLineBreakNewLine]><br style="mso-special-character:line-break">
			<![endif]></p>
			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>xe
&quot;aa&quot; \z &quot;MODULW.DOC-1129&quot;<![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-end'></span><![endif]-->
			</p>
			<p class="Lb1"><!--[if supportFields]><span style='mso-element:field-begin'></span>SYMBOL
117 \f &quot;MSIcons&quot; \s 9.5 \h <![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-end'></span><![endif]-->
			<span style="mso-tab-count:
1">&nbsp; </span>If you know nothing about the location of an external variable, put the <b style="mso-bidi-font-weight:normal">EXTERN</b> statement outside any segment. You can use the <b style="mso-bidi-font-weight:normal">SEG</b> directive to access the external variable like this:</p>
			<p class="Exl" style="margin-left:13.7pt;page-break-after:auto"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>mov<span style="mso-spacerun:
yes">&nbsp;&nbsp;&nbsp;&nbsp; </span>ax, SEG var1<br>
			<span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>mov<span style="mso-spacerun:
yes">&nbsp;&nbsp;&nbsp;&nbsp; </span>es, ax<br>
			<span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>mov<span style="mso-spacerun:
yes">&nbsp;&nbsp;&nbsp;&nbsp; </span>ax, es:var1<br style="mso-special-character:line-break">
			<![if !supportLineBreakNewLine]><br style="mso-special-character:line-break">
			<![endif]></p>
			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>xe
&quot;aa&quot; \z &quot;MODULW.DOC-1130&quot;<![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-end'></span><![endif]-->
			</p>
			<p class="Lb1"><!--[if supportFields]><span style='mso-element:field-begin'></span>SYMBOL
117 \f &quot;MSIcons&quot; \s 9.5 \h <![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-end'></span><![endif]-->
			<span style="mso-tab-count:
1">&nbsp; </span>If the symbol is an absolute symbol or a far code label, you can declare it external anywhere in the source code.</p>
			<p class="Le"><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>
			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>XE
&quot;Predefined symbols:@CurSeg&quot;<span style='mso-hide:none'> \z
&quot;MODULW.DOC-1069&quot;</span><![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-end'></span><![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-begin'></span>XE &quot;@CurSeg predefined symbol&quot;<span
style='mso-hide:none'> \z &quot;MODULW.DOC-1070&quot;</span><![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-end'></span><![endif]-->
			</p>
			<p class="MsoNormal">Always close any segments opened in include files so that external declarations following an include statement are not incorrectly placed inside a segment. If you want to be certain an external definition lies outside a segment, you can use <b style="mso-bidi-font-weight:normal">@CurSeg</b>. The <b style="mso-bidi-font-weight:normal">@CurSeg</b> predefined symbol returns a blank if the definition is not in a segment. For example,</p>
			<p class="Ex"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>.DATA<br>
			<span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>.<br>
			<span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>.<br>
			<span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>.<br>
			@CurSeg ENDS<span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>; Close segment<br>
			<span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>EXTERNDEF var:WORD<br style="mso-special-character:line-break">
			<![if !supportLineBreakNewLine]><br style="mso-special-character:line-break">
			<![endif]></p>
			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>xe
&quot;aa&quot; \z &quot;MODULW.DOC-1131&quot;<![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-end'></span><![endif]-->
			</p>
			<p class="MsoNormal">For information about predefined symbols such as <b style="mso-bidi-font-weight:normal">@CurSeg</b>, see &#147;Predefined Symbols,&#148; page 10.</p>
			<h1 style="margin-left:0in">Using Alternatives to Include Files</h1>
			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>XE
&quot;Multiple-module programs:alternatives to include files, using&quot;<span
style='mso-hide:none'> \z &quot;MODULW.DOC-1071&quot;</span><![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-end'></span><![endif]-->
			</p>
			<p class="MsoNormal">If your project uses only two modules (or if it is written with a version of MASM prior to 6.0), you may want to continue using <b style="mso-bidi-font-weight:normal">PUBLIC</b> in the defining module and <b style="mso-bidi-font-weight:normal">EXTERN</b> in the referencing module, and not create an include file for the project. The <b style="mso-bidi-font-weight:
normal">EXTERN</b> directive can be used in an include file, but the include file containing <b style="mso-bidi-font-weight:normal">EXTERN</b> cannot be added to the module that contains the corresponding <b style="mso-bidi-font-weight:
normal">PUBLIC</b> directive for that symbol. This section assumes that you are not using include files.</p>
			<div style="mso-element:frame;mso-element-wrap:around;mso-height-rule:exactly">
				<table cellspacing="0" cellpadding="0" hspace="0" vspace="0" align="left">
					<tr>
						<td valign="top" align="left" style="padding-top:0in;padding-right:9.0pt;
  padding-bottom:0in;padding-left:9.0pt">
							<p class="Pb" style="margin-left:0in"><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>
						</td>
					</tr>
				</table>
			</div>
			<h2 style="margin-left:0in">PUBLIC and EXTERN</h2>
			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>XE
&quot;Directives:PUBLIC&quot;<span style='mso-hide:none'> \z
&quot;MODULW.DOC-1072&quot;</span><![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-end'></span><![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-begin'></span>xe Directives:EXTERN \t &quot;See EXTERN
directive&quot;<span style='mso-hide:none'> \z &quot;MODULW.DOC-1073&quot;</span><![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-end'></span><![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-begin'></span>XE &quot;PUBLIC directive&quot;<span
style='mso-hide:none'> \z &quot;MODULW.DOC-1074&quot;</span><![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-end'></span><![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-begin'></span>XE &quot;EXTERN
directive:module-specific&quot;<span style='mso-hide:none'> \z
&quot;MODULW.DOC-1075&quot;</span><![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-end'></span><![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-begin'></span>XE &quot;Symbols:declaring public and
external&quot;<span style='mso-hide:none'> \z &quot;MODULW.DOC-1076&quot;</span><![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-end'></span><![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-begin'></span>XE &quot;Multiple-module programs:PUBLIC
and EXTERN, using&quot;<span style='mso-hide:none'> \z
&quot;MODULW.DOC-1077&quot;</span><![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-end'></span><![endif]-->
			</p>
			<p class="MsoNormal">The <b style="mso-bidi-font-weight:normal">PUBLIC</b> and <b style="mso-bidi-font-weight:normal">EXTERN</b> directives are less flexible than <b style="mso-bidi-font-weight:normal">EXTERNDEF</b> and <b style="mso-bidi-font-weight:normal">PROTO</b> because they are module-specific: <b style="mso-bidi-font-weight:normal">PUBLIC</b> must appear in the defining module and <b style="mso-bidi-font-weight:normal">EXTERN</b> must appear in the calling modules. This section shows how to use<b style="mso-bidi-font-weight:
normal"> PUBLIC</b> and<b style="mso-bidi-font-weight:normal"> EXTERN</b>. Information on where to place the external declarations in your file is in &#147;Positioning External Declarations,&#148; previous.</p>
			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>xe
&quot;aa&quot; \z &quot;MODULW.DOC-1132&quot;<![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-end'></span><![endif]-->
			</p>
			<p class="MsoNormal">The <b style="mso-bidi-font-weight:normal">PUBLIC</b> directive makes a name visible outside the module in which it is defined. This gives other program modules access to that identifier.</p>
			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>xe
&quot;aa&quot; \z &quot;MODULW.DOC-1133&quot;<![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-end'></span><![endif]-->
			</p>
			<p class="MsoNormal">The <b style="mso-bidi-font-weight:normal">EXTERN</b> directive performs the complementary function. It tells the assembler that a name referenced within a particular module is actually defined and declared public in another module that will be specified at link time.</p>
			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>xe
&quot;aa&quot; \z &quot;MODULW.DOC-1134&quot;<![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-end'></span><![endif]-->
			</p>
			<p class="MsoNormal">A <b style="mso-bidi-font-weight:normal">PUBLIC</b> directive can appear anywhere in a file. Its syntax is:</p>
			<p class="Syn"><b style="mso-bidi-font-weight:normal">PUBLIC</b> <span style="font-family:Times;letter-spacing:-1.5pt">[</span><span style="font-family:
Times">[</span><i style="mso-bidi-font-style:normal">langtype</i><span style="font-family:Times;letter-spacing:-1.5pt">]</span><span style="font-family:
Times">]</span> <i style="mso-bidi-font-style:normal">name</i><span style="font-family:Times;letter-spacing:-1.5pt">[</span><span style="font-family:
Times">[</span><b style="mso-bidi-font-weight:normal">, </b><span style="font-family:Times;letter-spacing:-1.5pt">[</span><span style="font-family:
Times">[</span><i style="mso-bidi-font-style:normal">langtype</i><span style="font-family:Times;letter-spacing:-1.5pt">]</span><span style="font-family:
Times">]</span> <i style="mso-bidi-font-style:normal">name</i><span style="font-family:Times;letter-spacing:-1.5pt">]</span><span style="font-family:
Times">]...</span></p>
			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>xe
&quot;aa&quot; \z &quot;MODULW.DOC-1135&quot;<![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-end'></span><![endif]-->
			</p>
			<p class="MsoNormal">The <i style="mso-bidi-font-style:normal">name</i> must be the name of an identifier defined within the current source file. Only code labels, data labels, procedures, and numeric equates can be declared public.</p>
			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>XE
&quot;Directives:PUBLIC&quot;<span style='mso-hide:none'> \z
&quot;MODULW.DOC-1078&quot;</span><![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-end'></span><![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-begin'></span>xe Directives:EXTERN \t &quot;See EXTERN
directive&quot;<span style='mso-hide:none'> \z &quot;MODULW.DOC-1079&quot;</span><![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-end'></span><![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-begin'></span>XE &quot;PUBLIC directive&quot;<span
style='mso-hide:none'> \z &quot;MODULW.DOC-1080&quot;</span><![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-end'></span><![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-begin'></span>XE &quot;EXTERN
directive:module-specific&quot;<span style='mso-hide:none'> \z
&quot;MODULW.DOC-1081&quot;</span><![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-end'></span><![endif]-->
			</p>
			<p class="MsoNormal">If you specify the <i style="mso-bidi-font-style:normal">langtype</i> field here, it overrides the language specified by <b style="mso-bidi-font-weight:
normal">.MODEL</b>. The <i style="mso-bidi-font-style:normal">langtype</i> field can be<b style="mso-bidi-font-weight:normal"> C</b>, <b style="mso-bidi-font-weight:
normal">SYSCALL</b>, <b style="mso-bidi-font-weight:normal">STDCALL</b>, <b style="mso-bidi-font-weight:normal">PASCAL</b>, <b style="mso-bidi-font-weight:
normal">FORTRAN</b>, or<b style="mso-bidi-font-weight:normal"> BASIC</b>. For more information on specifying <i style="mso-bidi-font-style:normal">langtype</i> types, see &#147;Declaring Parameters with the PROC Directive,&#148; page 184, and &#147;Naming and Calling Conventions,&#148; page 308.<span style="mso-spacerun: yes">&nbsp; </span></p>
			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>xe
&quot;aa&quot; \z &quot;MODULW.DOC-1136&quot;<![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-end'></span><![endif]-->
			</p>
			<p class="MsoNormal">The <b style="mso-bidi-font-weight:normal">EXTERN</b> directive tells the assembler that an identifier is external<a name="MSDDNLEnd"></a><a name="CurrentCell"></a><span style="letter-spacing:-1.75pt"> </span>&#151;<span style="letter-spacing:-1.75pt"> </span>defined in some other module that will be supplied at link time. Its syntax is:</p>
			<p class="Syn"><b style="mso-bidi-font-weight:normal">EXTERN</b> <span style="font-family:Times;letter-spacing:-1.5pt">[</span><span style="font-family:
Times">[</span><i style="mso-bidi-font-style:normal">langtype</i><span style="font-family:Times;letter-spacing:-1.5pt">]</span><span style="font-family:
Times">]</span> <i style="mso-bidi-font-style:normal">name</i><b style="mso-bidi-font-weight:normal">:{ABS </b>| <i style="mso-bidi-font-style:
normal">qualifiedtype</i>}</p>
			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>XE
&quot;Operands:ABS&quot;<span style='mso-hide:none'> \z &quot;MODULW.DOC-1082&quot;</span><![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-end'></span><![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-begin'></span>XE &quot;ABS operand&quot;<span
style='mso-hide:none'> \z &quot;MODULW.DOC-1083&quot;</span><![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-end'></span><![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-begin'></span>XE &quot;Identifiers:ABS, using&quot;<span
style='mso-hide:none'> \z &quot;MODULW.DOC-1084&quot;</span><![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-end'></span><![endif]-->
			</p>
			<p class="MsoNormal">&#147;Data Types,&#148; page 14, describes <i style="mso-bidi-font-style:
normal">qualifiedtype</i>. You can use the <b style="mso-bidi-font-weight:normal">ABS</b> (absolute) keyword only with external numeric constants. <b style="mso-bidi-font-weight:
normal">ABS</b> causes the identifier to be imported as a relocatable unsized constant. This identifier can then be used anywhere a constant can be used. If the identifier is not found in another module at link time, the linker generates an error.</p>
			<div style="mso-element:frame;mso-element-wrap:around;mso-height-rule:exactly">
				<table cellspacing="0" cellpadding="0" hspace="0" vspace="0" align="left">
					<tr>
						<td valign="top" align="left" style="padding-top:0in;padding-right:9.0pt;
  padding-bottom:0in;padding-left:9.0pt">
							<p class="Pb" style="margin-left:0in"><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>
						</td>
					</tr>
				</table>
			</div>
			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>xe
&quot;aa&quot; \z &quot;MODULW.DOC-1137&quot;<![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-end'></span><![endif]-->
			</p>
			<p class="MsoNormal">In the following example, the procedure <span style='font-size:9.5pt;font-family:"Lucida Sans Typewriter"'>BuildTable</span> and the variable <span style='font-size:9.5pt;font-family:"Lucida Sans Typewriter"'>Var</span> are declared public. The procedure uses the Pascal naming and data-passing conventions:</p>
			<p class="Art" style="margin-left:0in"><span style="mso-tab-count:1">&nbsp;&nbsp;&nbsp; </span><span style='mso-field-code:"include M\:\\\\SLM\\\\SRC\\\\MASM61\\\\APPS\\\\ART\\\\mpchp08\.doc art_mp0803_eps  \\* mergeformat"'><a name="art_mp0803_eps"></a><a name="space_mp0803_eps"><span style="mso-bookmark:
art_mp0803_eps"></span></a><!--[if supportFields]><span style='mso-bookmark:
space_mp0803_eps'><span style='mso-bookmark:art_mp0803_eps'></span></span><span
style='mso-element:field-begin'></span><span style='mso-bookmark:space_mp0803_eps'><span
style='mso-bookmark:art_mp0803_eps'><b style='mso-bidi-font-weight:normal'>IMPORT
M:\\SLM\\SRC\\MASM61\\APPS\\ART\\MP0803.EPS \* mergeformat<span
style='mso-element:field-separator'></span></b></span></span><![endif]-->
			<span style="mso-bookmark:space_mp0803_eps"><span style="mso-bookmark:art_mp0803_eps"><b style="mso-bidi-font-weight:normal"><!--[if gte vml 1]><v:shape id="_x0000_i1027"
 type="#_x0000_t75" style='width:335.25pt;height:197.25pt'>
 <v:imagedata src="./Chap_08_files/image005.wmz" o:href="file:///M:/SLM/SRC/MASM61/APPS/ART/MP0803.EPS"/>
</v:shape><![endif]-->
			<![if !vml]><img width="447" height="263" src="Chap_08_files/image006.gif" v:shapes="_x0000_i1027"><![endif]></b></span></span><!--[if supportFields]><span
style='mso-bookmark:space_mp0803_eps'><span style='mso-bookmark:art_mp0803_eps'></span></span><span
style='mso-element:field-end'></span><![endif]-->
			 <span style="mso-bookmark:
space_mp0803_eps"><span style="mso-bookmark:art_mp0803_eps"></span></span></span></p>
			<p class="Cap">Figure <!--[if supportFields]><span style='font-family:Times'><span
style='mso-element:field-begin'></span>SEQ chapter \c<span style='mso-element:
field-separator'></span></span><![endif]-->
			<span style="font-family:Times">8</span><!--[if supportFields]><span
style='font-family:Times'><span style='mso-element:field-end'></span></span><![endif]-->
			 <span style="font-family:Times">.</span><!--[if supportFields]><span
style='font-family:Times'><span style='mso-element:field-begin'></span>SEQ
figure<span style='mso-element:field-separator'></span></span><![endif]-->
			 <span style="font-family:Times">3</span><!--[if supportFields]><span
style='font-family:Times'><span style='mso-element:field-end'></span></span><![endif]-->
			 <span style="font-family:Helvetica-Narrow"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </span></span>Using PUBLIC and EXTERN</p>
			<h2 style="margin-left:0in">Other Alternatives</h2>
			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>xe
&quot;aa&quot; \z &quot;MODULW.DOC-1138&quot;<![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-end'></span><![endif]-->
			</p>
			<p class="MsoNormal">You can also use the directives discussed earlier (<b style="mso-bidi-font-weight:normal">EXTERNDEF</b>, <b style="mso-bidi-font-weight:
normal">PROTO</b>, and <b style="mso-bidi-font-weight:normal">COMM</b>) without the include file. In this case, place the declarations to make a symbol global in the same module where the symbol is defined. You might want to use this technique if you are linking only a few modules that have very little data in common.</p>
			<h1 style="margin-left:0in">Developing Libraries</h1>
			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>XE
&quot;Procedures:libraries&quot;<span style='mso-hide:none'> \z
&quot;MODULW.DOC-1085&quot;</span><![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-end'></span><![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-begin'></span>XE &quot;Libraries:overview&quot;<span
style='mso-hide:none'> \z &quot;MODULW.DOC-1086&quot;</span><![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-end'></span><![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-begin'></span>XE &quot;Multiple-module
programs:libraries, developing&quot;<span style='mso-hide:none'> \z
&quot;MODULW.DOC-1087&quot;</span><![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-end'></span><![endif]-->
			</p>
			<p class="MsoNormal">As you create reusable procedures, you can place them in a library file for convenient access. Although you can put any routine into a library, each library file, recognizable by its .LIB extension, usually contains related routines. For example, you might place string-manipulation functions in one library, matrix calculations in another, and port communications in another. Do not place communal variables (defined with the <b style="mso-bidi-font-weight:normal">COMM</b> directive) in a library.<span style="mso-spacerun: yes">&nbsp; </span></p>
			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>xe
&quot;aa&quot; \z &quot;MODULW.DOC-1139&quot;<![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-end'></span><![endif]-->
			</p>
			<p class="MsoNormal">A library consists of combined object modules, each created from a single source file. The object module is the smallest independent unit in a library. If you link with one symbol in a module, the linker adds the entire module to your program, but not the entire library.</p>
			<h2 style="margin-left:0in">Associating Libraries with Modules</h2>
			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>xe
&quot;aa&quot; \z &quot;MODULW.DOC-1140&quot;<![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-end'></span><![endif]-->
			</p>
			<p class="MsoNormal">You can choose either of two methods for associating your libraries with the modules that use them: you can use the <b style="mso-bidi-font-weight:
normal">INCLUDELIB</b> directive inside your source files, or link the modules from the command line.</p>
			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>XE
&quot;INCLUDELIB directive&quot;<span style='mso-hide:none'> \z
&quot;MODULW.DOC-1088&quot;</span><![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-end'></span><![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-begin'></span>XE &quot;Directives:INCLUDELIB&quot;<span
style='mso-hide:none'> \z &quot;MODULW.DOC-1089&quot;</span><![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-end'></span><![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-begin'></span>XE &quot;Libraries:source files,
specifying in&quot;<span style='mso-hide:none'> \z &quot;MODULW.DOC-1090&quot;</span><![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-end'></span><![endif]-->
			</p>
			<p class="MsoNormal">To associate a specified library with your object code, use <b style="mso-bidi-font-weight:normal">INCLUDELIB</b>. You can add this directive to the source file to specify the libraries you want linked, rather than specifying them in the LINK command line. The <b style="mso-bidi-font-weight:
normal">INCLUDELIB</b><br>
			syntax is:</p>
			<p class="Syn"><b style="mso-bidi-font-weight:normal">INCLUDELIB</b> <i style="mso-bidi-font-style:normal">libraryname</i></p>
			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>xe
&quot;aa&quot; \z &quot;MODULW.DOC-1141&quot;<![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-end'></span><![endif]-->
			</p>
			<p class="MsoNormal">The <i style="mso-bidi-font-style:normal">libraryname</i> can be a file name or a complete path specification. If you do not specify an extension, .LIB is assumed. The <i style="mso-bidi-font-style:normal">libraryname</i> is placed in the comment record of the object file. LINK reads this record and links with the specified library file.</p>
			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>XE
&quot;Multiple-module programs:libraries, developing&quot;<span
style='mso-hide:none'> \z &quot;MODULW.DOC-1091&quot;</span><![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-end'></span><![endif]-->
			</p>
			<p class="MsoNormal">For example, the statement <span style='font-size:9.5pt;
font-family:"Lucida Sans Typewriter"'>INCLUDELIB GRAPHICS</span> passes a message from the assembler to the linker telling LINK to use library routines from the file GRAPHICS.LIB. If you place this statement in the source file DRAW.ASM and GRAPHICS.LIB is in the same directory, you can assemble and link the program with the following command:</p>
			<p class="Ex">ML DRAW.ASM<br style="mso-special-character:line-break">
			<![if !supportLineBreakNewLine]><br style="mso-special-character:line-break">
			<![endif]></p>
			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>xe
&quot;aa&quot; \z &quot;MODULW.DOC-1142&quot;<![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-end'></span><![endif]-->
			</p>
			<p class="MsoNormal">Without the <b style="mso-bidi-font-weight:normal">INCLUDELIB</b> directive, you must link the program DRAW.ASM with either of the following commands:</p>
			<p class="Ex">ML DRAW.ASM GRAPHICS.LIB<br>
			ML DRAW /link GRAPHICS<br style="mso-special-character:line-break">
			<![if !supportLineBreakNewLine]><br style="mso-special-character:line-break">
			<![endif]></p>
			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>xe
&quot;aa&quot; \z &quot;MODULW.DOC-1143&quot;<![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-end'></span><![endif]-->
			</p>
			<p class="MsoNormal">If you want to assemble and link separately, type</p>
			<p class="Ex">ML /c DRAW.ASM<br>
			LINK DRAW,,,GRAPHICS<br style="mso-special-character:line-break">
			<![if !supportLineBreakNewLine]><br style="mso-special-character:line-break">
			<![endif]></p>
			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>xe
&quot;aa&quot; \z &quot;MODULW.DOC-1144&quot;<![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-end'></span><![endif]-->
			</p>
			<p class="MsoNormal">If you do not specify a complete path in the <b style="mso-bidi-font-weight:normal">INCLUDELIB</b> statement or at the command line, LINK searches for the library file in the following order:</p>
			<p class="Ln1" style="margin-left:22.0pt"><span style="mso-tab-count:1"></span>1.<span style="mso-tab-count:1">&nbsp; </span>In the current directory.</p>
			<p class="Ln1" style="margin-left:22.0pt"><span style="mso-tab-count:1"></span>2.<span style="mso-tab-count:1">&nbsp; </span>In any directories in the library field of the LINK command line.</p>
			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>XE
&quot;Variables:environment&quot;<span style='mso-hide:none'> \z
&quot;MODULW.DOC-1092&quot;</span><![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-end'></span><![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-begin'></span>XE &quot;Environment:variables:LIB&quot;<span
style='mso-hide:none'> \z &quot;MODULW.DOC-1093&quot;</span><![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-end'></span><![endif]-->
			</p>
			<p class="Ln1" style="margin-left:22.0pt"><span style="mso-tab-count:1"></span>3.<span style="mso-tab-count:1">&nbsp; </span>In any directories specified by the LIB environment variable.</p>
			<p class="Le"><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>
			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>xe
&quot;aa&quot; \z &quot;MODULW.DOC-1145&quot;<![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-end'></span><![endif]-->
			</p>
			<p class="MsoNormal">The LIB.EXE utility helps you create, organize, and maintain run-time libraries. Refer to <i style="mso-bidi-font-style:normal">Environment and Tools</i> for instructions on LIB.EXE.</p>
			<h2 style="margin-left:0in">Using EXTERN with Library Routines</h2>
			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>XE
&quot;Executable (.EXE) files:controlling size of&quot;<span style='mso-hide:
none'> \z &quot;MODULW.DOC-1094&quot;</span><![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-end'></span><![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-begin'></span>XE &quot;EXTERN directive:executable
file size, limiting&quot;<span style='mso-hide:none'> \z
&quot;MODULW.DOC-1095&quot;</span><![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-end'></span><![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-begin'></span>xe Directives:EXTERN \t &quot;See EXTERN
directive&quot;<span style='mso-hide:none'> \z &quot;MODULW.DOC-1096&quot;</span><![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-end'></span><![endif]-->
			<a name="bmXETemp"></a><a name="FindXETemp1"><span style="mso-bookmark:bmXETemp"></span></a><!--[if supportFields]><span
style='mso-bookmark:FindXETemp1'><span style='mso-bookmark:bmXETemp'></span></span><span
style='mso-element:field-begin'></span><span style='mso-bookmark:FindXETemp1'><span
style='mso-bookmark:bmXETemp'>XE &quot;Multiple-module programs:EXTERN with
library routines, using&quot;</span></span><span style='mso-bookmark:FindXETemp1'><span
style='mso-bookmark:bmXETemp'><span style='mso-hide:none'> \z
&quot;MODULW.DOC-1097&quot;</span></span></span><![endif]-->
			<span style="mso-bookmark:FindXETemp1"><span style="mso-bookmark:bmXETemp"></span></span><!--[if supportFields]><span
style='mso-bookmark:FindXETemp1'><span style='mso-bookmark:bmXETemp'></span></span><span
style='mso-element:field-end'></span><![endif]-->
			<span style="mso-bookmark:
FindXETemp1"><span style="mso-bookmark:bmXETemp"></span></span></p>
			<p class="MsoNormal"><a name="FindXETemp">In some cases, <b style="mso-bidi-font-weight:
normal">EXTERN</b> helps you limit the size of your executable file by specifying in the syntax an alternative name for a procedure. You would use this form of the <b style="mso-bidi-font-weight:normal">EXTERN</b> directive when declaring a procedure or symbol that may not need to be used.</a></p>
			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>xe
&quot;aa&quot; \z &quot;MODULW.DOC-1146&quot;<![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-end'></span><![endif]-->
			</p>
			<p class="MsoNormal">The syntax looks like this:</p>
			<p class="Syn"><b style="mso-bidi-font-weight:normal">EXTERN</b> <span style="font-family:Times;letter-spacing:-1.5pt">[</span><span style="font-family:
Times">[</span><i style="mso-bidi-font-style:normal">langtype</i><span style="font-family:Times;letter-spacing:-1.5pt">]</span><span style="font-family:
Times">]</span> <i style="mso-bidi-font-style:normal">name</i> <span style="font-family:Times;letter-spacing:-1.5pt">[</span><span style="font-family:
Times">[</span> <b style="mso-bidi-font-weight:normal">(</b><i style="mso-bidi-font-style:normal">altname</i><b style="mso-bidi-font-weight:
normal">) </b><span style="font-family:Times;letter-spacing:-1.5pt">]</span><span style="font-family:Times">]</span> <b style="mso-bidi-font-weight:normal">:</b><i style="mso-bidi-font-style:normal">qualifiedtype</i></p>
			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>xe
&quot;aa&quot; \z &quot;MODULW.DOC-1147&quot;<![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-end'></span><![endif]-->
			</p>
			<p class="MsoNormal">The addition of the <i style="mso-bidi-font-style:normal">altname</i> to the syntax provides the name of an alternate procedure that the linker uses to resolve the external reference if the procedure given by <i style="mso-bidi-font-style:normal">name</i> is not needed. Both <i style="mso-bidi-font-style:normal">name</i> and <i style="mso-bidi-font-style:
normal">altname</i> must have the same <i style="mso-bidi-font-style:normal">qualifiedtype</i>.</p>
			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>xe
&quot;aa&quot; \z &quot;MODULW.DOC-1148&quot;<![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-end'></span><![endif]-->
			</p>
			<p class="MsoNormal">When the linker encounters an external definition for a procedure that gives an <i style="mso-bidi-font-style:normal">altname</i>, the linker finishes processing that module before it links the object module that contains the procedure given by <i style="mso-bidi-font-style:normal">name</i>. If the program does not reference any symbols in the <i style="mso-bidi-font-style:
normal">name</i> file&#146;s object from any of the linked modules, the linker uses <i style="mso-bidi-font-style:normal">altname</i> to satisfy the external reference. This saves space because the library object module is not brought in.</p>
			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>xe
&quot;aa&quot; \z &quot;MODULW.DOC-1149&quot;<![endif]-->
			<!--[if supportFields]><span
style='mso-element:field-end'></span><![endif]-->
			</p>
			<p class="MsoNormal">For example, assume that the contents of STARTUP.ASM include these statements:</p>
			<p class="Ex">EXTERN<span style="mso-spacerun: yes">&nbsp; </span>init(dummy):PROC<br>
			<span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>.<br>
			<span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>.<br>
			<span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>.<br>
			dummy<span style="mso-spacerun: yes">&nbsp;&nbsp; </span>PROC<br>
			<span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>.<br>
			<span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>.<br>
			<span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>.<span style="mso-spacerun:
yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>; A procedure definition containing no<br>
			<span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>ret<span style="mso-spacerun:
yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>;<span style="mso-spacerun: yes">&nbsp;&nbsp; </span>executable code<br>
			<br>
			dummy<span style="mso-spacerun: yes">&nbsp;&nbsp; </span>ENDP<br>
			<span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>.<br>
			<span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>.<br>
			<span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>.<br>
			<span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>call<span style="mso-spacerun:
yes">&nbsp;&nbsp; </span>init<span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>; Defined in FLOAT.OBJ<br style="mso-special-character:line-break">
			<![if !supportLineBreakNewLine]><br style="mso-special-character:line-break">
			<![endif]></p>
			<p class="index"><a name="bkEntry"></a><!--[if supportFields]><span
style='mso-bookmark:bkEntry'></span><span style='mso-element:field-begin'></span><span
style='mso-bookmark:bkEntry'>xe &quot;aa&quot; \z &quot;MODULW.DOC-1150&quot;</span><![endif]-->
			<span style="mso-bookmark:bkEntry"></span><!--[if supportFields]><span
style='mso-bookmark:bkEntry'></span><span style='mso-element:field-end'></span><![endif]-->
			<span style="mso-bookmark:bkEntry"></span></p>
			<p class="MsoNormal">In this example, the reference to the routine <span style='font-size:9.5pt;font-family:"Lucida Sans Typewriter"'>init</span> (defined in FLOAT.OBJ) does not force the module FLOAT.OBJ to be linked into the executable file. If another reference causes FLOAT.OBJ to be linked into the executable file, then <span style='font-size:9.5pt;font-family:"Lucida Sans Typewriter"'>init</span> will refer to the <span style='font-size:9.5pt;font-family:"Lucida Sans Typewriter"'>init</span> label in FLOAT.OBJ. If there are no references that force linkage with FLOAT.OBJ, the linker will use the alternate name for <span style='font-size:
9.5pt;font-family:"Lucida Sans Typewriter"'>init(dummy)</span>.</p>
			<p class="MsoNormal"><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>
		</div>
		<span style='font-size:10.5pt;mso-bidi-font-size:10.0pt;font-family:"Times New Roman";
mso-fareast-font-family:"Times New Roman";mso-ansi-language:EN-US;mso-fareast-language:
EN-US;mso-bidi-language:AR-SA'><br clear="all" style="page-break-before:always;
mso-break-type:section-break">
		</span>
		<div class="Section2">
			<p class="MsoNormal"><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>
		</div>
	</body>

</html>
