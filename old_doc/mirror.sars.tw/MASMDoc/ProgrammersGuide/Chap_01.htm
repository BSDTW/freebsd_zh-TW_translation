<html xmlns:v="urn:schemas-microsoft-com:vml" xmlns:o="urn:schemas-microsoft-com:office:office" xmlns:w="urn:schemas-microsoft-com:office:word" xmlns="http://www.w3.org/TR/REC-html40">	<head>		<meta http-equiv="Content-Type" content="text/html; charset=windows-1252">		<meta name="ProgId" content="Word.Document">		<meta name="Generator" content="Microsoft Word 9">		<meta name="Originator" content="Microsoft Word 9">		<link rel="File-List" href="Chap_01_files/filelist.xml">		<!--[if !mso]><style>v\:* {behavior:url(#default#VML);}o\:* {behavior:url(#default#VML);}w\:* {behavior:url(#default#VML);}.shape {behavior:url(#default#VML);}</style><![endif]-->		<title>CHAPTER 1</title>		<!--[if gte mso 9]><xml> <o:DocumentProperties>  <o:Author>Terri Sharkey</o:Author>  <o:Keywords>{artman 1,M:\SLM\SRC\MASM61\APPS\ART\mpchp01.doc}</o:Keywords>  <o:Description>Converted with 6/12/92 version of Ven2Word</o:Description>  <o:Template>MSGRIDA1.DOT</o:Template>  <o:LastAuthor>Randall Hyde</o:LastAuthor>  <o:Revision>2</o:Revision>  <o:TotalTime>4516</o:TotalTime>  <o:LastPrinted>1992-10-28T00:14:00Z</o:LastPrinted>  <o:Created>2001-09-06T22:18:00Z</o:Created>  <o:LastSaved>2001-09-06T22:18:00Z</o:LastSaved>  <o:Pages>30</o:Pages>  <o:Words>13200</o:Words>  <o:Characters>84784</o:Characters>  <o:Company>Dell Computer Corporation</o:Company>  <o:Version>9.3821</o:Version> </o:DocumentProperties></xml><![endif]-->		<!--[if gte mso 9]><xml> <w:WordDocument>  <w:DoNotHyphenateCaps/>  <w:DrawingGridHorizontalSpacing>6 pt</w:DrawingGridHorizontalSpacing>  <w:DrawingGridVerticalSpacing>6 pt</w:DrawingGridVerticalSpacing>  <w:DisplayVerticalDrawingGridEvery>0</w:DisplayVerticalDrawingGridEvery>  <w:UseMarginsForDrawingGridOrigin/>  <w:Compatibility>   <w:PrintColBlack/>   <w:ShowBreaksInFrames/>   <w:SuppressSpBfAfterPgBrk/>   <w:SwapBordersFacingPages/>   <w:ConvMailMergeEsc/>   <w:UsePrinterMetrics/>   <w:FootnoteLayoutLikeWW8/>   <w:ShapeLayoutLikeWW8/>   <w:AlignTablesRowByRow/>   <w:ForgetLastTabAlignment/>   <w:NoSpaceRaiseLower/>   <w:LayoutRawTableWidth/>   <w:LayoutTableRowsApart/>  </w:Compatibility> </w:WordDocument></xml><![endif]-->		<style><!-- /* Font Definitions */@font-face	{font-family:Times;	panose-1:0 0 0 0 0 0 0 0 0 0;	mso-font-charset:0;	mso-generic-font-family:roman;	mso-font-format:other;	mso-font-pitch:variable;	mso-font-signature:3 0 0 0 1 0;}@font-face	{font-family:"Tms Rmn";	panose-1:0 0 0 0 0 0 0 0 0 0;	mso-font-charset:0;	mso-generic-font-family:roman;	mso-font-format:other;	mso-font-pitch:variable;	mso-font-signature:3 0 0 0 1 0;}@font-face	{font-family:Helvetica-Narrow;	panose-1:0 0 0 0 0 0 0 0 0 0;	mso-font-charset:0;	mso-generic-font-family:swiss;	mso-font-format:other;	mso-font-pitch:variable;	mso-font-signature:3 0 0 0 1 0;}@font-face	{font-family:"Arial Narrow";	panose-1:2 11 5 6 2 2 2 3 2 4;	mso-font-charset:0;	mso-generic-font-family:swiss;	mso-font-pitch:variable;	mso-font-signature:647 0 0 0 159 0;}@font-face	{font-family:"Lucida Sans Typewriter";	panose-1:2 11 5 9 3 5 4 3 2 4;	mso-font-charset:0;	mso-generic-font-family:modern;	mso-font-pitch:fixed;	mso-font-signature:3 0 0 0 1 0;} /* Style Definitions */p.MsoNormal, li.MsoNormal, div.MsoNormal	{mso-style-parent:"";	margin-top:0in;	margin-right:0in;	margin-bottom:8.0pt;	margin-left:0in;	line-height:12.0pt;	mso-line-height-rule:exactly;	mso-pagination:widow-orphan;	font-size:10.5pt;	mso-bidi-font-size:10.0pt;	font-family:"Times New Roman";	mso-fareast-font-family:"Times New Roman";}h1	{mso-style-parent:"";	mso-style-next:Normal;	margin-top:10.0pt;	margin-right:0in;	margin-bottom:4.0pt;	margin-left:-1.25in;	line-height:22.0pt;	mso-line-height-rule:exactly;	mso-pagination:widow-orphan lines-together;	page-break-after:avoid;	mso-outline-level:1;	font-size:20.0pt;	mso-bidi-font-size:10.0pt;	font-family:"Arial Narrow";	mso-font-kerning:0pt;	mso-bidi-font-weight:normal;}h2	{mso-style-parent:"Heading 1";	mso-style-next:Normal;	margin-top:7.0pt;	margin-right:0in;	margin-bottom:3.0pt;	margin-left:-1.25in;	line-height:19.0pt;	mso-line-height-rule:exactly;	mso-pagination:widow-orphan lines-together;	page-break-after:avoid;	mso-outline-level:2;	font-size:17.0pt;	mso-bidi-font-size:10.0pt;	font-family:"Arial Narrow";	mso-bidi-font-weight:normal;}h3	{mso-style-parent:"Heading 1";	mso-style-next:Normal;	margin-top:4.0pt;	margin-right:0in;	margin-bottom:2.0pt;	margin-left:0in;	line-height:17.0pt;	mso-line-height-rule:exactly;	mso-pagination:widow-orphan lines-together;	page-break-after:avoid;	mso-outline-level:3;	font-size:15.0pt;	mso-bidi-font-size:10.0pt;	font-family:"Arial Narrow";	mso-bidi-font-weight:normal;}h4	{mso-style-parent:"Heading 1";	mso-style-next:Normal;	margin-top:3.0pt;	margin-right:0in;	margin-bottom:2.0pt;	margin-left:0in;	line-height:14.0pt;	mso-line-height-rule:exactly;	mso-pagination:widow-orphan lines-together;	page-break-after:avoid;	mso-outline-level:4;	font-size:12.0pt;	mso-bidi-font-size:10.0pt;	font-family:"Arial Narrow";	mso-bidi-font-weight:normal;}h5	{mso-style-parent:"Heading 1";	mso-style-next:Normal;	margin-top:2.0pt;	margin-right:0in;	margin-bottom:2.0pt;	margin-left:0in;	line-height:12.0pt;	mso-line-height-rule:exactly;	mso-pagination:widow-orphan;	page-break-after:avoid;	mso-outline-level:5;	font-size:10.5pt;	mso-bidi-font-size:10.0pt;	font-family:"Arial Narrow";	mso-bidi-font-weight:normal;}h6	{mso-style-parent:"Heading 1";	mso-style-next:H6p;	margin-top:2.0pt;	margin-right:0in;	margin-bottom:0in;	margin-left:0in;	margin-bottom:.0001pt;	line-height:11.9pt;	mso-line-height-rule:exactly;	mso-pagination:widow-orphan;	page-break-after:avoid;	mso-outline-level:6;	mso-element:frame;	mso-element-frame-height:12.75pt;	mso-element-frame-hspace:6.5pt;	mso-element-wrap:around;	mso-element-anchor-vertical:paragraph;	mso-element-anchor-horizontal:column;	mso-element-top:.05pt;	font-size:10.5pt;	mso-bidi-font-size:10.0pt;	font-family:"Arial Narrow";	mso-bidi-font-weight:normal;}p.MsoHeading7, li.MsoHeading7, div.MsoHeading7	{mso-style-next:"Normal Indent";	margin-top:0in;	margin-right:0in;	margin-bottom:8.0pt;	margin-left:.5in;	line-height:12.0pt;	mso-line-height-rule:exactly;	mso-pagination:widow-orphan;	mso-outline-level:7;	font-size:10.0pt;	font-family:"Times New Roman";	mso-fareast-font-family:"Times New Roman";	font-style:italic;}p.MsoHeading8, li.MsoHeading8, div.MsoHeading8	{mso-style-next:"Normal Indent";	margin-top:0in;	margin-right:0in;	margin-bottom:8.0pt;	margin-left:.5in;	line-height:12.0pt;	mso-line-height-rule:exactly;	mso-pagination:widow-orphan;	mso-outline-level:8;	font-size:10.0pt;	font-family:"Times New Roman";	mso-fareast-font-family:"Times New Roman";	font-style:italic;}p.MsoHeading9, li.MsoHeading9, div.MsoHeading9	{mso-style-next:"Normal Indent";	margin-top:0in;	margin-right:0in;	margin-bottom:8.0pt;	margin-left:.5in;	line-height:12.0pt;	mso-line-height-rule:exactly;	mso-pagination:widow-orphan;	mso-outline-level:9;	font-size:10.0pt;	font-family:"Times New Roman";	mso-fareast-font-family:"Times New Roman";}p.MsoIndex1, li.MsoIndex1, div.MsoIndex1	{mso-style-next:Normal;	margin-top:0in;	margin-right:0in;	margin-bottom:8.0pt;	margin-left:0in;	line-height:12.0pt;	mso-line-height-rule:exactly;	mso-pagination:widow-orphan;	font-size:10.5pt;	mso-bidi-font-size:10.0pt;	font-family:"Times New Roman";	mso-fareast-font-family:"Times New Roman";}p.MsoIndex2, li.MsoIndex2, div.MsoIndex2	{mso-style-next:Normal;	margin-top:0in;	margin-right:0in;	margin-bottom:8.0pt;	margin-left:.25in;	line-height:12.0pt;	mso-line-height-rule:exactly;	mso-pagination:widow-orphan;	font-size:10.5pt;	mso-bidi-font-size:10.0pt;	font-family:"Times New Roman";	mso-fareast-font-family:"Times New Roman";}p.MsoIndex3, li.MsoIndex3, div.MsoIndex3	{mso-style-next:Normal;	margin-top:0in;	margin-right:0in;	margin-bottom:8.0pt;	margin-left:.5in;	line-height:12.0pt;	mso-line-height-rule:exactly;	mso-pagination:widow-orphan;	font-size:10.5pt;	mso-bidi-font-size:10.0pt;	font-family:"Times New Roman";	mso-fareast-font-family:"Times New Roman";}p.MsoIndex4, li.MsoIndex4, div.MsoIndex4	{mso-style-next:Normal;	margin-top:0in;	margin-right:0in;	margin-bottom:8.0pt;	margin-left:.75in;	line-height:12.0pt;	mso-line-height-rule:exactly;	mso-pagination:widow-orphan;	font-size:10.5pt;	mso-bidi-font-size:10.0pt;	font-family:"Times New Roman";	mso-fareast-font-family:"Times New Roman";}p.MsoIndex5, li.MsoIndex5, div.MsoIndex5	{mso-style-next:Normal;	margin-top:0in;	margin-right:0in;	margin-bottom:8.0pt;	margin-left:1.0in;	line-height:12.0pt;	mso-line-height-rule:exactly;	mso-pagination:widow-orphan;	font-size:10.5pt;	mso-bidi-font-size:10.0pt;	font-family:"Times New Roman";	mso-fareast-font-family:"Times New Roman";}p.MsoIndex6, li.MsoIndex6, div.MsoIndex6	{mso-style-next:Normal;	margin-top:0in;	margin-right:0in;	margin-bottom:8.0pt;	margin-left:1.25in;	line-height:12.0pt;	mso-line-height-rule:exactly;	mso-pagination:widow-orphan;	font-size:10.5pt;	mso-bidi-font-size:10.0pt;	font-family:"Times New Roman";	mso-fareast-font-family:"Times New Roman";}p.MsoIndex7, li.MsoIndex7, div.MsoIndex7	{mso-style-next:Normal;	margin-top:0in;	margin-right:0in;	margin-bottom:8.0pt;	margin-left:1.5in;	line-height:12.0pt;	mso-line-height-rule:exactly;	mso-pagination:widow-orphan;	font-size:10.5pt;	mso-bidi-font-size:10.0pt;	font-family:"Times New Roman";	mso-fareast-font-family:"Times New Roman";}p.MsoToc1, li.MsoToc1, div.MsoToc1	{margin-top:0in;	margin-right:0in;	margin-bottom:2.0pt;	margin-left:0in;	line-height:12.0pt;	mso-line-height-rule:exactly;	mso-pagination:widow-orphan lines-together;	page-break-after:avoid;	tab-stops:right dotted 348.0pt;	font-size:10.5pt;	mso-bidi-font-size:10.0pt;	font-family:"Times New Roman";	mso-fareast-font-family:"Times New Roman";}p.MsoToc2, li.MsoToc2, div.MsoToc2	{mso-style-parent:"TOC 1";	margin-top:0in;	margin-right:0in;	margin-bottom:2.0pt;	margin-left:14.0pt;	line-height:12.0pt;	mso-line-height-rule:exactly;	mso-pagination:widow-orphan lines-together;	page-break-after:avoid;	tab-stops:right dotted 348.0pt;	font-size:10.5pt;	mso-bidi-font-size:10.0pt;	font-family:"Times New Roman";	mso-fareast-font-family:"Times New Roman";}p.MsoToc3, li.MsoToc3, div.MsoToc3	{mso-style-parent:"TOC 1";	margin-top:0in;	margin-right:0in;	margin-bottom:2.0pt;	margin-left:28.0pt;	line-height:12.0pt;	mso-line-height-rule:exactly;	mso-pagination:widow-orphan lines-together;	page-break-after:avoid;	tab-stops:right dotted 348.0pt;	font-size:10.5pt;	mso-bidi-font-size:10.0pt;	font-family:"Times New Roman";	mso-fareast-font-family:"Times New Roman";}p.MsoToc4, li.MsoToc4, div.MsoToc4	{mso-style-next:Normal;	margin-top:0in;	margin-right:.5in;	margin-bottom:8.0pt;	margin-left:1.5in;	line-height:12.0pt;	mso-line-height-rule:exactly;	mso-pagination:widow-orphan;	tab-stops:dotted 5.75in right blank 6.0in;	font-size:10.5pt;	mso-bidi-font-size:10.0pt;	font-family:"Times New Roman";	mso-fareast-font-family:"Times New Roman";}p.MsoToc5, li.MsoToc5, div.MsoToc5	{mso-style-next:Normal;	margin-top:0in;	margin-right:.5in;	margin-bottom:8.0pt;	margin-left:2.0in;	line-height:12.0pt;	mso-line-height-rule:exactly;	mso-pagination:widow-orphan;	tab-stops:dotted 5.75in right blank 6.0in;	font-size:10.5pt;	mso-bidi-font-size:10.0pt;	font-family:"Times New Roman";	mso-fareast-font-family:"Times New Roman";}p.MsoToc6, li.MsoToc6, div.MsoToc6	{mso-style-next:Normal;	margin-top:0in;	margin-right:.5in;	margin-bottom:8.0pt;	margin-left:2.5in;	line-height:12.0pt;	mso-line-height-rule:exactly;	mso-pagination:widow-orphan;	tab-stops:dotted 5.75in right blank 6.0in;	font-size:10.5pt;	mso-bidi-font-size:10.0pt;	font-family:"Times New Roman";	mso-fareast-font-family:"Times New Roman";}p.MsoToc7, li.MsoToc7, div.MsoToc7	{mso-style-next:Normal;	margin-top:0in;	margin-right:.5in;	margin-bottom:8.0pt;	margin-left:3.0in;	line-height:12.0pt;	mso-line-height-rule:exactly;	mso-pagination:widow-orphan;	tab-stops:dotted 5.75in right blank 6.0in;	font-size:10.5pt;	mso-bidi-font-size:10.0pt;	font-family:"Times New Roman";	mso-fareast-font-family:"Times New Roman";}p.MsoToc8, li.MsoToc8, div.MsoToc8	{mso-style-next:Normal;	margin-top:0in;	margin-right:.5in;	margin-bottom:8.0pt;	margin-left:3.5in;	line-height:12.0pt;	mso-line-height-rule:exactly;	mso-pagination:widow-orphan;	tab-stops:dotted 5.75in right blank 6.0in;	font-size:10.5pt;	mso-bidi-font-size:10.0pt;	font-family:"Times New Roman";	mso-fareast-font-family:"Times New Roman";}p.MsoNormalIndent, li.MsoNormalIndent, div.MsoNormalIndent	{margin-top:0in;	margin-right:0in;	margin-bottom:8.0pt;	margin-left:14.0pt;	line-height:12.0pt;	mso-line-height-rule:exactly;	mso-pagination:widow-orphan;	font-size:10.5pt;	mso-bidi-font-size:10.0pt;	font-family:"Times New Roman";	mso-fareast-font-family:"Times New Roman";}p.MsoFootnoteText, li.MsoFootnoteText, div.MsoFootnoteText	{margin-top:0in;	margin-right:0in;	margin-bottom:8.0pt;	margin-left:0in;	line-height:12.0pt;	mso-line-height-rule:exactly;	mso-pagination:widow-orphan;	font-size:10.0pt;	font-family:"Times New Roman";	mso-fareast-font-family:"Times New Roman";}p.MsoCommentText, li.MsoCommentText, div.MsoCommentText	{margin-top:0in;	margin-right:0in;	margin-bottom:9.0pt;	margin-left:0in;	line-height:12.0pt;	mso-line-height-rule:exactly;	mso-pagination:widow-orphan;	font-size:12.0pt;	mso-bidi-font-size:10.0pt;	font-family:"Times New Roman";	mso-fareast-font-family:"Times New Roman";	color:green;}p.MsoHeader, li.MsoHeader, div.MsoHeader	{mso-style-parent:"";	mso-style-next:"header rule";	margin-top:0in;	margin-right:0in;	margin-bottom:0in;	margin-left:-1.25in;	margin-bottom:.0001pt;	line-height:10.5pt;	mso-line-height-rule:exactly;	mso-pagination:widow-orphan;	tab-stops:right 348.0pt;	font-size:9.5pt;	mso-bidi-font-size:10.0pt;	font-family:"Arial Narrow";	mso-fareast-font-family:"Times New Roman";	mso-bidi-font-family:"Times New Roman";	font-weight:bold;	mso-bidi-font-weight:normal;}p.MsoFooter, li.MsoFooter, div.MsoFooter	{mso-style-parent:"";	margin:0in;	margin-bottom:.0001pt;	line-height:7.0pt;	mso-pagination:widow-orphan;	mso-element:frame;	mso-element-wrap:around;	mso-element-anchor-vertical:page;	mso-element-anchor-horizontal:page;	mso-element-left:100.0pt;	mso-element-top:735.15pt;	mso-height-rule:exactly;	font-size:5.0pt;	mso-bidi-font-size:10.0pt;	font-family:"Times New Roman";	mso-fareast-font-family:"Times New Roman";}p.MsoIndexHeading, li.MsoIndexHeading, div.MsoIndexHeading	{mso-style-next:"Index 1";	margin-top:0in;	margin-right:0in;	margin-bottom:8.0pt;	margin-left:0in;	line-height:12.0pt;	mso-line-height-rule:exactly;	mso-pagination:widow-orphan;	font-size:10.5pt;	mso-bidi-font-size:10.0pt;	font-family:"Times New Roman";	mso-fareast-font-family:"Times New Roman";}span.MsoFootnoteReference	{mso-ansi-font-size:8.0pt;	mso-bidi-font-size:8.0pt;	mso-text-raise:3.0pt;}span.MsoCommentReference	{color:green;}p.Wh, li.Wh, div.Wh	{mso-style-name:Wh;	mso-style-parent:Nh;	mso-style-next:Np1;	margin-top:2.0pt;	margin-right:0in;	margin-bottom:0in;	margin-left:0in;	margin-bottom:.0001pt;	line-height:11.9pt;	mso-line-height-rule:exactly;	mso-pagination:widow-orphan;	page-break-after:avoid;	mso-element:frame;	mso-element-frame-height:11.75pt;	mso-element-frame-hspace:6.5pt;	mso-element-wrap:around;	mso-element-anchor-vertical:paragraph;	mso-element-anchor-horizontal:column;	mso-element-top:.05pt;	font-size:10.5pt;	mso-bidi-font-size:10.0pt;	font-family:"Arial Narrow";	mso-fareast-font-family:"Times New Roman";	mso-bidi-font-family:"Times New Roman";	color:blue;	font-weight:bold;	mso-bidi-font-weight:normal;}p.Ws, li.Ws, div.Ws	{mso-style-name:Ws;	mso-style-parent:"";	mso-style-next:Wh;	margin-top:2.0pt;	margin-right:1.5pt;	margin-bottom:0in;	margin-left:1.5pt;	margin-bottom:.0001pt;	line-height:4.0pt;	mso-line-height-rule:exactly;	mso-pagination:widow-orphan lines-together;	page-break-after:avoid;	border:none;	mso-border-bottom-alt:double blue 2.25pt;	padding:0in;	mso-padding-alt:0in 0in 0in 0in;	font-size:6.0pt;	mso-bidi-font-size:10.0pt;	font-family:"Times New Roman";	mso-fareast-font-family:"Times New Roman";	color:white;}p.We, li.We, div.We	{mso-style-name:We;	mso-style-next:Normal;	margin-top:0in;	margin-right:1.5pt;	margin-bottom:0in;	margin-left:1.5pt;	margin-bottom:.0001pt;	line-height:10.0pt;	mso-line-height-rule:exactly;	mso-pagination:widow-orphan;	border:none;	mso-border-top-alt:double blue 2.25pt;	padding:0in;	mso-padding-alt:1.0pt 0in 0in 0in;	font-size:8.0pt;	mso-bidi-font-size:10.0pt;	font-family:"Times New Roman";	mso-fareast-font-family:"Times New Roman";	color:white;}p.Np1, li.Np1, div.Np1	{mso-style-name:Np1;	mso-style-parent:Np2;	mso-style-next:Ne;	margin-top:2.0pt;	margin-right:0in;	margin-bottom:4.0pt;	margin-left:0in;	line-height:12.0pt;	mso-line-height-rule:exactly;	mso-pagination:widow-orphan;	page-break-after:avoid;	font-size:10.5pt;	mso-bidi-font-size:10.0pt;	font-family:"Times New Roman";	mso-fareast-font-family:"Times New Roman";}p.Nh, li.Nh, div.Nh	{mso-style-name:Nh;	mso-style-parent:"";	mso-style-next:Np1;	margin-top:2.0pt;	margin-right:0in;	margin-bottom:0in;	margin-left:0in;	margin-bottom:.0001pt;	line-height:11.9pt;	mso-line-height-rule:exactly;	mso-pagination:widow-orphan;	page-break-after:avoid;	mso-element:frame;	mso-element-frame-height:11.75pt;	mso-element-frame-hspace:6.5pt;	mso-element-wrap:around;	mso-element-anchor-vertical:paragraph;	mso-element-anchor-horizontal:column;	mso-element-top:.05pt;	font-size:10.5pt;	mso-bidi-font-size:10.0pt;	font-family:"Arial Narrow";	mso-fareast-font-family:"Times New Roman";	mso-bidi-font-family:"Times New Roman";	font-weight:bold;	mso-bidi-font-weight:normal;}p.Ne, li.Ne, div.Ne	{mso-style-name:Ne;	mso-style-parent:"";	mso-style-next:Normal;	margin-top:0in;	margin-right:1.5pt;	margin-bottom:2.0pt;	margin-left:1.5pt;	line-height:7.0pt;	mso-line-height-rule:exactly;	mso-pagination:widow-orphan lines-together;	border:none;	mso-border-top-alt:solid windowtext .75pt;	padding:0in;	mso-padding-alt:1.0pt 0in 0in 0in;	font-size:6.0pt;	mso-bidi-font-size:10.0pt;	font-family:"Times New Roman";	mso-fareast-font-family:"Times New Roman";	color:white;}p.Ns, li.Ns, div.Ns	{mso-style-name:Ns;	mso-style-parent:"";	mso-style-next:Nh;	margin-top:0in;	margin-right:1.5pt;	margin-bottom:0in;	margin-left:1.5pt;	margin-bottom:.0001pt;	line-height:4.0pt;	mso-line-height-rule:exactly;	mso-pagination:widow-orphan lines-together;	page-break-after:avoid;	border:none;	mso-border-bottom-alt:solid windowtext .75pt;	padding:0in;	mso-padding-alt:0in 0in 1.0pt 0in;	font-size:6.0pt;	mso-bidi-font-size:10.0pt;	font-family:"Times New Roman";	mso-fareast-font-family:"Times New Roman";	color:white;}p.Nhi, li.Nhi, div.Nhi	{mso-style-name:Nhi;	mso-style-parent:Nh;	mso-style-next:Np1i;	margin-top:2.0pt;	margin-right:0in;	margin-bottom:0in;	margin-left:14.0pt;	margin-bottom:.0001pt;	line-height:11.9pt;	mso-line-height-rule:exactly;	mso-pagination:widow-orphan;	page-break-after:avoid;	mso-element:frame;	mso-element-frame-height:11.75pt;	mso-element-frame-hspace:6.5pt;	mso-element-wrap:around;	mso-element-anchor-vertical:paragraph;	mso-element-anchor-horizontal:column;	mso-element-top:.05pt;	font-size:10.5pt;	mso-bidi-font-size:10.0pt;	font-family:"Arial Narrow";	mso-fareast-font-family:"Times New Roman";	mso-bidi-font-family:"Times New Roman";	font-weight:bold;	mso-bidi-font-weight:normal;}p.Nsi, li.Nsi, div.Nsi	{mso-style-name:Nsi;	mso-style-parent:Ns;	mso-style-next:Nhi;	margin-top:0in;	margin-right:1.5pt;	margin-bottom:0in;	margin-left:15.5pt;	margin-bottom:.0001pt;	line-height:4.0pt;	mso-line-height-rule:exactly;	mso-pagination:widow-orphan lines-together;	page-break-after:avoid;	border:none;	mso-border-bottom-alt:solid windowtext .75pt;	padding:0in;	mso-padding-alt:0in 0in 1.0pt 0in;	font-size:6.0pt;	mso-bidi-font-size:10.0pt;	font-family:"Times New Roman";	mso-fareast-font-family:"Times New Roman";	color:white;}p.Np1i, li.Np1i, div.Np1i	{mso-style-name:Np1i;	mso-style-parent:Np1;	mso-style-next:Nei;	margin-top:2.0pt;	margin-right:0in;	margin-bottom:4.0pt;	margin-left:14.0pt;	text-indent:-14.0pt;	line-height:12.0pt;	mso-line-height-rule:exactly;	mso-pagination:widow-orphan;	page-break-after:avoid;	font-size:10.5pt;	mso-bidi-font-size:10.0pt;	font-family:"Times New Roman";	mso-fareast-font-family:"Times New Roman";}p.Nei, li.Nei, div.Nei	{mso-style-name:Nei;	mso-style-parent:Ne;	mso-style-next:Normal;	margin-top:0in;	margin-right:1.5pt;	margin-bottom:0in;	margin-left:15.5pt;	margin-bottom:.0001pt;	line-height:7.0pt;	mso-line-height-rule:exactly;	mso-pagination:widow-orphan lines-together;	border:none;	mso-border-top-alt:solid windowtext .75pt;	padding:0in;	mso-padding-alt:1.0pt 0in 0in 0in;	font-size:6.0pt;	mso-bidi-font-size:10.0pt;	font-family:"Times New Roman";	mso-fareast-font-family:"Times New Roman";	color:white;}p.Wsi, li.Wsi, div.Wsi	{mso-style-name:Wsi;	mso-style-parent:Ws;	mso-style-next:Whi;	margin-top:2.0pt;	margin-right:1.5pt;	margin-bottom:0in;	margin-left:15.5pt;	margin-bottom:.0001pt;	line-height:4.0pt;	mso-line-height-rule:exactly;	mso-pagination:widow-orphan lines-together;	page-break-after:avoid;	border:none;	mso-border-bottom-alt:double blue 2.25pt;	padding:0in;	mso-padding-alt:0in 0in 0in 0in;	font-size:6.0pt;	mso-bidi-font-size:10.0pt;	font-family:"Times New Roman";	mso-fareast-font-family:"Times New Roman";	color:white;}p.Whi, li.Whi, div.Whi	{mso-style-name:Whi;	mso-style-parent:Nhi;	mso-style-next:Np1i;	margin-top:2.0pt;	margin-right:0in;	margin-bottom:0in;	margin-left:14.0pt;	margin-bottom:.0001pt;	line-height:11.9pt;	mso-line-height-rule:exactly;	mso-pagination:widow-orphan;	page-break-after:avoid;	mso-element:frame;	mso-element-frame-height:11.75pt;	mso-element-frame-hspace:6.5pt;	mso-element-wrap:around;	mso-element-anchor-vertical:paragraph;	mso-element-anchor-horizontal:column;	mso-element-top:.05pt;	font-size:10.5pt;	mso-bidi-font-size:10.0pt;	font-family:"Arial Narrow";	mso-fareast-font-family:"Times New Roman";	mso-bidi-font-family:"Times New Roman";	color:blue;	font-weight:bold;	mso-bidi-font-weight:normal;}p.Wei, li.Wei, div.Wei	{mso-style-name:Wei;	mso-style-parent:We;	mso-style-next:Normal;	margin-top:0in;	margin-right:1.5pt;	margin-bottom:0in;	margin-left:15.5pt;	margin-bottom:.0001pt;	line-height:7.0pt;	mso-line-height-rule:exactly;	mso-pagination:widow-orphan;	border:none;	mso-border-top-alt:double blue 2.25pt;	padding:0in;	mso-padding-alt:1.0pt 0in 0in 0in;	font-size:6.0pt;	mso-bidi-font-size:10.0pt;	font-family:"Times New Roman";	mso-fareast-font-family:"Times New Roman";	color:white;}p.Sbre, li.Sbre, div.Sbre	{mso-style-name:Sbre;	mso-style-parent:"";	mso-style-next:Normal;	margin-top:0in;	margin-right:0in;	margin-bottom:6.0pt;	margin-left:-12.0pt;	line-height:10.0pt;	mso-line-height-rule:exactly;	mso-pagination:widow-orphan;	font-size:8.0pt;	mso-bidi-font-size:10.0pt;	font-family:"Times New Roman";	mso-fareast-font-family:"Times New Roman";}p.Sbrh, li.Sbrh, div.Sbrh	{mso-style-name:Sbrh;	mso-style-parent:"";	mso-style-next:Sbrp;	margin-top:3.0pt;	margin-right:14.0pt;	margin-bottom:2.0pt;	margin-left:14.0pt;	line-height:14.0pt;	mso-pagination:widow-orphan lines-together;	page-break-after:avoid;	background:#FFFFBA;	mso-shading:windowtext;	mso-pattern:gray-40 yellow;	border:none;	mso-border-alt:solid white 1.5pt;	padding:0in;	mso-padding-alt:14.0pt 14.0pt 14.0pt 14.0pt;	font-size:12.0pt;	mso-bidi-font-size:10.0pt;	font-family:"Arial Narrow";	mso-fareast-font-family:"Times New Roman";	mso-bidi-font-family:"Times New Roman";	font-weight:bold;	mso-bidi-font-weight:normal;}p.Sbrs, li.Sbrs, div.Sbrs	{mso-style-name:Sbrs;	mso-style-parent:"";	mso-style-next:Sbrh;	margin-top:0in;	margin-right:14.0pt;	margin-bottom:0in;	margin-left:14.0pt;	margin-bottom:.0001pt;	line-height:5.0pt;	mso-line-height-rule:exactly;	mso-pagination:widow-orphan lines-together;	page-break-after:avoid;	font-size:4.0pt;	mso-bidi-font-size:10.0pt;	font-family:"Times New Roman";	mso-fareast-font-family:"Times New Roman";}p.Tt, li.Tt, div.Tt	{mso-style-name:Tt;	mso-style-parent:"";	mso-style-next:Th;	margin-top:1.0pt;	margin-right:0in;	margin-bottom:3.0pt;	margin-left:0in;	line-height:11.0pt;	mso-line-height-rule:exactly;	mso-pagination:widow-orphan lines-together;	page-break-after:avoid;	font-size:9.5pt;	mso-bidi-font-size:10.0pt;	font-family:"Times New Roman";	mso-fareast-font-family:"Times New Roman";	font-weight:bold;	mso-bidi-font-weight:normal;}p.Th, li.Th, div.Th	{mso-style-name:Th;	margin-top:1.0pt;	margin-right:0in;	margin-bottom:3.0pt;	margin-left:12.0pt;	line-height:11.0pt;	mso-line-height-rule:exactly;	mso-pagination:widow-orphan lines-together;	page-break-after:avoid;	font-size:9.5pt;	mso-bidi-font-size:10.0pt;	font-family:"Times New Roman";	mso-fareast-font-family:"Times New Roman";	font-weight:bold;	mso-bidi-font-weight:normal;}p.Tp, li.Tp, div.Tp	{mso-style-name:Tp;	margin-top:1.0pt;	margin-right:0in;	margin-bottom:3.0pt;	margin-left:12.0pt;	line-height:11.0pt;	mso-line-height-rule:exactly;	mso-pagination:widow-orphan lines-together;	tab-stops:14.0pt 28.0pt;	font-size:9.5pt;	mso-bidi-font-size:10.0pt;	font-family:"Times New Roman";	mso-fareast-font-family:"Times New Roman";}p.Te, li.Te, div.Te	{mso-style-name:Te;	mso-style-next:Normal;	margin-top:4.0pt;	margin-right:1.5pt;	margin-bottom:4.0pt;	margin-left:1.5pt;	text-align:right;	line-height:9.0pt;	mso-line-height-rule:exactly;	mso-pagination:widow-orphan lines-together;	border:none;	mso-border-top-alt:solid windowtext .75pt;	padding:0in;	mso-padding-alt:1.0pt 0in 0in 0in;	font-size:8.0pt;	mso-bidi-font-size:10.0pt;	font-family:"Times New Roman";	mso-fareast-font-family:"Times New Roman";}p.Le, li.Le, div.Le	{mso-style-name:Le;	mso-style-next:Normal;	margin:0in;	margin-bottom:.0001pt;	text-align:right;	line-height:8.0pt;	mso-line-height-rule:exactly;	mso-pagination:widow-orphan lines-together;	font-size:6.0pt;	mso-bidi-font-size:10.0pt;	font-family:"Times New Roman";	mso-fareast-font-family:"Times New Roman";}p.H6p, li.H6p, div.H6p	{mso-style-name:H6p;	mso-style-next:Normal;	margin-top:2.0pt;	margin-right:0in;	margin-bottom:8.0pt;	margin-left:0in;	line-height:12.0pt;	mso-line-height-rule:exactly;	mso-pagination:widow-orphan;	font-size:10.5pt;	mso-bidi-font-size:10.0pt;	font-family:"Times New Roman";	mso-fareast-font-family:"Times New Roman";}p.Ttw, li.Ttw, div.Ttw	{mso-style-name:Ttw;	mso-style-parent:Tt;	mso-style-next:Th;	margin-top:1.0pt;	margin-right:0in;	margin-bottom:3.0pt;	margin-left:-1.25in;	line-height:11.0pt;	mso-line-height-rule:exactly;	mso-pagination:widow-orphan lines-together;	page-break-after:avoid;	font-size:9.5pt;	mso-bidi-font-size:10.0pt;	font-family:"Times New Roman";	mso-fareast-font-family:"Times New Roman";	font-weight:bold;	mso-bidi-font-weight:normal;}p.ih, li.ih, div.ih	{mso-style-name:ih;	mso-style-parent:"";	mso-style-next:Normal;	margin-top:0in;	margin-right:0in;	margin-bottom:21.0pt;	margin-left:-1.25in;	line-height:30.0pt;	mso-line-height-rule:exactly;	page-break-before:always;	mso-pagination:widow-orphan lines-together;	page-break-after:avoid;	font-size:24.0pt;	mso-bidi-font-size:10.0pt;	font-family:"Arial Narrow";	mso-fareast-font-family:"Times New Roman";	mso-bidi-font-family:"Times New Roman";	font-weight:bold;	mso-bidi-font-weight:normal;}p.Ch, li.Ch, div.Ch	{mso-style-name:Ch;	mso-style-parent:"";	mso-style-next:Normal;	margin:0in;	margin-bottom:.0001pt;	line-height:27.0pt;	mso-line-height-rule:exactly;	mso-pagination:widow-orphan lines-together;	page-break-after:avoid;	mso-element:frame;	mso-element-frame-width:336.0pt;	mso-element-frame-height:123.0pt;	mso-element-wrap:no-wrap-beside;	mso-element-anchor-vertical:paragraph;	mso-element-anchor-horizontal:margin;	mso-element-left:-1.25in;	mso-element-top:.05pt;	mso-height-rule:exactly;	font-size:24.0pt;	mso-bidi-font-size:10.0pt;	font-family:"Arial Narrow";	mso-fareast-font-family:"Times New Roman";	mso-bidi-font-family:"Times New Roman";	font-weight:bold;	mso-bidi-font-weight:normal;}p.Ln1, li.Ln1, div.Ln1	{mso-style-name:Ln1;	margin-top:0in;	margin-right:0in;	margin-bottom:4.0pt;	margin-left:14.0pt;	text-indent:-22.0pt;	line-height:12.0pt;	mso-line-height-rule:exactly;	mso-pagination:widow-orphan lines-together;	tab-stops:right 8.0pt left 14.0pt;	font-size:10.5pt;	mso-bidi-font-size:10.0pt;	font-family:"Times New Roman";	mso-fareast-font-family:"Times New Roman";}p.Lb1, li.Lb1, div.Lb1	{mso-style-name:Lb1;	mso-style-parent:Ln1;	margin-top:0in;	margin-right:0in;	margin-bottom:4.0pt;	margin-left:14.0pt;	text-indent:-14.0pt;	line-height:12.0pt;	mso-line-height-rule:exactly;	mso-pagination:widow-orphan lines-together;	tab-stops:14.0pt;	font-size:10.5pt;	mso-bidi-font-size:10.0pt;	font-family:"Times New Roman";	mso-fareast-font-family:"Times New Roman";}p.Ex, li.Ex, div.Ex	{mso-style-name:Ex;	mso-style-parent:"";	margin:0in;	margin-bottom:.0001pt;	line-height:11.0pt;	mso-line-height-rule:exactly;	mso-pagination:widow-orphan lines-together;	page-break-after:avoid;	tab-stops:19.0pt 38.0pt 57.0pt 76.0pt 95.0pt 114.0pt 133.0pt 152.0pt 171.0pt 190.0pt;	font-size:8.0pt;	mso-bidi-font-size:10.0pt;	font-family:"Lucida Sans Typewriter";	mso-fareast-font-family:"Times New Roman";	mso-bidi-font-family:"Times New Roman";}p.Proch, li.Proch, div.Proch	{mso-style-name:Proch;	mso-style-parent:"";	mso-style-next:Ln1;	margin-top:4.0pt;	margin-right:0in;	margin-bottom:4.0pt;	margin-left:0in;	text-indent:-.25in;	line-height:12.0pt;	mso-line-height-rule:exactly;	mso-pagination:widow-orphan lines-together;	page-break-after:avoid;	tab-stops:0in;	font-size:10.5pt;	mso-bidi-font-size:10.0pt;	font-family:"Times New Roman";	mso-fareast-font-family:"Times New Roman";	font-weight:bold;	mso-bidi-font-weight:normal;}p.Hn1, li.Hn1, div.Hn1	{mso-style-name:Hn1;	mso-style-parent:"Heading 1";	mso-style-next:Normal;	margin-top:10.0pt;	margin-right:0in;	margin-bottom:4.0pt;	margin-left:-1.25in;	line-height:22.0pt;	mso-line-height-rule:exactly;	mso-pagination:widow-orphan lines-together;	page-break-after:avoid;	mso-outline-level:1;	font-size:20.0pt;	mso-bidi-font-size:10.0pt;	font-family:"Arial Narrow";	mso-fareast-font-family:"Times New Roman";	mso-bidi-font-family:"Times New Roman";	font-weight:bold;	mso-bidi-font-weight:normal;}p.Hn2, li.Hn2, div.Hn2	{mso-style-name:Hn2;	mso-style-parent:"Heading 2";	mso-style-next:Normal;	margin-top:7.0pt;	margin-right:0in;	margin-bottom:3.0pt;	margin-left:-1.25in;	line-height:19.0pt;	mso-line-height-rule:exactly;	mso-pagination:widow-orphan lines-together;	page-break-after:avoid;	mso-outline-level:2;	font-size:17.0pt;	mso-bidi-font-size:10.0pt;	font-family:"Arial Narrow";	mso-fareast-font-family:"Times New Roman";	mso-bidi-font-family:"Times New Roman";	font-weight:bold;	mso-bidi-font-weight:normal;}p.Mp, li.Mp, div.Mp	{mso-style-name:Mp;	mso-style-parent:"";	mso-style-next:Normal;	margin:0in;	margin-bottom:.0001pt;	line-height:11.0pt;	mso-line-height-rule:exactly;	mso-pagination:widow-orphan lines-together;	page-break-after:avoid;	mso-element:frame;	mso-element-frame-width:78.0pt;	mso-element-frame-hspace:12.0pt;	mso-element-wrap:around;	mso-element-anchor-vertical:paragraph;	mso-element-anchor-horizontal:page;	mso-element-top:.05pt;	mso-height-rule:exactly;	font-size:9.5pt;	mso-bidi-font-size:10.0pt;	font-family:"Arial Narrow";	mso-fareast-font-family:"Times New Roman";	mso-bidi-font-family:"Times New Roman";}p.Lp1, li.Lp1, div.Lp1	{mso-style-name:Lp1;	mso-style-parent:Ln1;	margin-top:0in;	margin-right:0in;	margin-bottom:4.0pt;	margin-left:14.0pt;	line-height:12.0pt;	mso-line-height-rule:exactly;	mso-pagination:widow-orphan lines-together;	tab-stops:right 8.0pt left 14.0pt;	font-size:10.5pt;	mso-bidi-font-size:10.0pt;	font-family:"Times New Roman";	mso-fareast-font-family:"Times New Roman";}p.Np2, li.Np2, div.Np2	{mso-style-name:Np2;	mso-style-next:Ne;	margin-top:0in;	margin-right:0in;	margin-bottom:4.0pt;	margin-left:0in;	line-height:12.0pt;	mso-line-height-rule:exactly;	mso-pagination:widow-orphan;	page-break-after:avoid;	font-size:10.5pt;	mso-bidi-font-size:10.0pt;	font-family:"Times New Roman";	mso-fareast-font-family:"Times New Roman";}p.Erm, li.Erm, div.Erm	{mso-style-name:Erm;	mso-style-next:Erp;	margin-top:5.0pt;	margin-right:12.0pt;	margin-bottom:2.0pt;	margin-left:0in;	line-height:12.0pt;	mso-pagination:widow-orphan lines-together;	page-break-after:avoid;	font-size:10.5pt;	mso-bidi-font-size:10.0pt;	font-family:"Times New Roman";	mso-fareast-font-family:"Times New Roman";	font-weight:bold;	mso-bidi-font-weight:normal;}p.Erp, li.Erp, div.Erp	{mso-style-name:Erp;	margin-top:0in;	margin-right:0in;	margin-bottom:5.0pt;	margin-left:0in;	line-height:12.0pt;	mso-line-height-rule:exactly;	mso-pagination:widow-orphan lines-together;	font-size:10.5pt;	mso-bidi-font-size:10.0pt;	font-family:"Times New Roman";	mso-fareast-font-family:"Times New Roman";}p.Cn, li.Cn, div.Cn	{mso-style-name:Cn;	mso-style-parent:"";	mso-style-next:Ch;	margin-top:0in;	margin-right:0in;	margin-bottom:14.0pt;	margin-left:-1.25in;	line-height:12.0pt;	mso-line-height-rule:exactly;	mso-pagination:widow-orphan lines-together;	page-break-after:avoid;	font-size:12.0pt;	mso-bidi-font-size:10.0pt;	font-family:"Times New Roman";	mso-fareast-font-family:"Times New Roman";	text-transform:uppercase;	letter-spacing:6.0pt;}p.Lb2, li.Lb2, div.Lb2	{mso-style-name:Lb2;	mso-style-parent:Lb1;	margin-top:0in;	margin-right:0in;	margin-bottom:4.0pt;	margin-left:28.0pt;	text-indent:-14.0pt;	line-height:12.0pt;	mso-line-height-rule:exactly;	mso-pagination:widow-orphan lines-together;	tab-stops:28.0pt;	font-size:10.5pt;	mso-bidi-font-size:10.0pt;	font-family:"Times New Roman";	mso-fareast-font-family:"Times New Roman";}p.Exl, li.Exl, div.Exl	{mso-style-name:Exl;	mso-style-parent:Ex;	margin-top:0in;	margin-right:0in;	margin-bottom:0in;	margin-left:14.0pt;	margin-bottom:.0001pt;	line-height:11.0pt;	mso-line-height-rule:exactly;	mso-pagination:widow-orphan lines-together;	page-break-after:avoid;	tab-stops:33.0pt 52.0pt 71.0pt 1.25in 109.0pt 128.0pt 147.0pt 166.0pt 185.0pt 204.0pt;	font-size:8.0pt;	mso-bidi-font-size:10.0pt;	font-family:"Lucida Sans Typewriter";	mso-fareast-font-family:"Times New Roman";	mso-bidi-font-family:"Times New Roman";}p.Cap, li.Cap, div.Cap	{mso-style-name:Cap;	mso-style-parent:"";	mso-style-next:Normal;	margin-top:0in;	margin-right:0in;	margin-bottom:12.0pt;	margin-left:0in;	line-height:11.0pt;	mso-line-height-rule:exactly;	mso-pagination:widow-orphan lines-together;	tab-stops:14.0pt 28.0pt;	font-size:9.5pt;	mso-bidi-font-size:10.0pt;	font-family:"Times New Roman";	mso-fareast-font-family:"Times New Roman";	font-weight:bold;	mso-bidi-font-weight:normal;}p.Ln2, li.Ln2, div.Ln2	{mso-style-name:Ln2;	mso-style-parent:Ln1;	margin-top:0in;	margin-right:0in;	margin-bottom:4.0pt;	margin-left:28.0pt;	text-indent:-30.0pt;	line-height:12.0pt;	mso-line-height-rule:exactly;	mso-pagination:widow-orphan lines-together;	tab-stops:right 22.0pt left 28.0pt;	font-size:10.5pt;	mso-bidi-font-size:10.0pt;	font-family:"Times New Roman";	mso-fareast-font-family:"Times New Roman";}p.Lp2, li.Lp2, div.Lp2	{mso-style-name:Lp2;	mso-style-parent:Lp1;	margin-top:0in;	margin-right:0in;	margin-bottom:4.0pt;	margin-left:28.0pt;	line-height:12.0pt;	mso-line-height-rule:exactly;	mso-pagination:widow-orphan lines-together;	tab-stops:right 8.0pt left 14.0pt;	font-size:10.5pt;	mso-bidi-font-size:10.0pt;	font-family:"Times New Roman";	mso-fareast-font-family:"Times New Roman";}p.Rh1, li.Rh1, div.Rh1	{mso-style-name:Rh1;	mso-style-parent:"Heading 1";	mso-style-next:Rmh;	margin-top:0in;	margin-right:0in;	margin-bottom:13.0pt;	margin-left:-1.25in;	line-height:22.0pt;	mso-line-height-rule:exactly;	mso-pagination:widow-orphan;	page-break-after:avoid;	mso-outline-level:1;	font-size:20.0pt;	mso-bidi-font-size:10.0pt;	font-family:"Arial Narrow";	mso-fareast-font-family:"Times New Roman";	mso-bidi-font-family:"Times New Roman";	font-weight:bold;	mso-bidi-font-weight:normal;}p.Rmh, li.Rmh, div.Rmh	{mso-style-name:Rmh;	mso-style-parent:"";	mso-style-next:Normal;	margin-top:1.0pt;	margin-right:0in;	margin-bottom:0in;	margin-left:0in;	margin-bottom:.0001pt;	line-height:11.0pt;	mso-line-height-rule:exactly;	mso-pagination:widow-orphan lines-together;	page-break-after:avoid;	mso-element:frame;	mso-element-frame-width:78.0pt;	mso-element-frame-hspace:12.0pt;	mso-element-frame-vspace:12.0pt;	mso-element-wrap:around;	mso-element-anchor-vertical:paragraph;	mso-element-anchor-horizontal:page;	mso-element-top:.05pt;	mso-height-rule:exactly;	font-size:10.5pt;	mso-bidi-font-size:10.0pt;	font-family:"Arial Narrow";	mso-fareast-font-family:"Times New Roman";	mso-bidi-font-family:"Times New Roman";	font-weight:bold;	mso-bidi-font-weight:normal;}p.headerrule, li.headerrule, div.headerrule	{mso-style-name:"header rule";	mso-style-parent:"";	mso-style-next:Normal;	margin-top:2.5pt;	margin-right:1.5pt;	margin-bottom:0in;	margin-left:-88.5pt;	margin-bottom:.0001pt;	line-height:4.0pt;	mso-line-height-rule:exactly;	mso-pagination:widow-orphan;	border:none;	mso-border-top-alt:solid blue .75pt;	padding:0in;	mso-padding-alt:0in 0in 0in 0in;	font-size:6.0pt;	mso-bidi-font-size:10.0pt;	font-family:"Times New Roman";	mso-fareast-font-family:"Times New Roman";}p.Ermn, li.Ermn, div.Ermn	{mso-style-name:Ermn;	mso-style-parent:Erm;	margin-top:1.0pt;	margin-right:12.0pt;	margin-bottom:3.0pt;	margin-left:0in;	line-height:12.0pt;	mso-pagination:widow-orphan lines-together;	page-break-after:avoid;	font-size:10.5pt;	mso-bidi-font-size:10.0pt;	font-family:"Times New Roman";	mso-fareast-font-family:"Times New Roman";	font-weight:bold;	mso-bidi-font-weight:normal;}p.Sbrp, li.Sbrp, div.Sbrp	{mso-style-name:Sbrp;	mso-style-parent:"";	mso-style-next:Sbre;	margin-top:0in;	margin-right:14.0pt;	margin-bottom:8.0pt;	margin-left:14.0pt;	line-height:12.0pt;	mso-pagination:widow-orphan lines-together;	page-break-after:avoid;	background:#FFFFBA;	mso-shading:windowtext;	mso-pattern:gray-40 yellow;	border:none;	mso-border-alt:solid white 1.5pt;	padding:0in;	mso-padding-alt:14.0pt 14.0pt 14.0pt 14.0pt;	font-size:10.5pt;	mso-bidi-font-size:10.0pt;	font-family:"Times New Roman";	mso-fareast-font-family:"Times New Roman";}p.Hn3, li.Hn3, div.Hn3	{mso-style-name:Hn3;	mso-style-parent:"Heading 3";	mso-style-next:Normal;	margin-top:4.0pt;	margin-right:0in;	margin-bottom:2.0pt;	margin-left:0in;	line-height:17.0pt;	mso-line-height-rule:exactly;	mso-pagination:widow-orphan lines-together;	page-break-after:avoid;	mso-outline-level:3;	font-size:15.0pt;	mso-bidi-font-size:10.0pt;	font-family:"Arial Narrow";	mso-fareast-font-family:"Times New Roman";	mso-bidi-font-family:"Times New Roman";	font-weight:bold;	mso-bidi-font-weight:normal;}p.Term1, li.Term1, div.Term1	{mso-style-name:Term1;	mso-style-parent:"";	mso-style-next:Def1;	margin:0in;	margin-bottom:.0001pt;	line-height:12.0pt;	mso-line-height-rule:exactly;	mso-pagination:widow-orphan lines-together;	page-break-after:avoid;	font-size:10.5pt;	mso-bidi-font-size:10.0pt;	font-family:"Times New Roman";	mso-fareast-font-family:"Times New Roman";}p.Lbp, li.Lbp, div.Lbp	{mso-style-name:Lbp;	mso-style-parent:Lb1;	mso-style-next:Le;	margin-top:0in;	margin-right:0in;	margin-bottom:4.0pt;	margin-left:14.0pt;	text-indent:-14.0pt;	line-height:12.0pt;	mso-line-height-rule:exactly;	mso-pagination:widow-orphan lines-together;	tab-stops:14.0pt;	font-size:10.5pt;	mso-bidi-font-size:10.0pt;	font-family:"Times New Roman";	mso-fareast-font-family:"Times New Roman";}p.Np2i, li.Np2i, div.Np2i	{mso-style-name:Np2i;	mso-style-parent:Np2;	mso-style-next:Nei;	margin-top:0in;	margin-right:0in;	margin-bottom:4.0pt;	margin-left:14.0pt;	line-height:12.0pt;	mso-line-height-rule:exactly;	mso-pagination:widow-orphan;	page-break-after:avoid;	font-size:10.5pt;	mso-bidi-font-size:10.0pt;	font-family:"Times New Roman";	mso-fareast-font-family:"Times New Roman";}p.Term2, li.Term2, div.Term2	{mso-style-name:Term2;	mso-style-parent:Term1;	mso-style-next:Def2;	margin-top:0in;	margin-right:0in;	margin-bottom:0in;	margin-left:14.0pt;	margin-bottom:.0001pt;	line-height:12.0pt;	mso-line-height-rule:exactly;	mso-pagination:widow-orphan lines-together;	page-break-after:avoid;	font-size:10.5pt;	mso-bidi-font-size:10.0pt;	font-family:"Times New Roman";	mso-fareast-font-family:"Times New Roman";}p.Def1, li.Def1, div.Def1	{mso-style-name:Def1;	mso-style-next:Term1;	margin-top:0in;	margin-right:0in;	margin-bottom:4.0pt;	margin-left:14.0pt;	line-height:12.0pt;	mso-line-height-rule:exactly;	mso-pagination:widow-orphan lines-together;	font-size:10.5pt;	mso-bidi-font-size:10.0pt;	font-family:"Times New Roman";	mso-fareast-font-family:"Times New Roman";}p.Def2, li.Def2, div.Def2	{mso-style-name:Def2;	mso-style-parent:Def1;	mso-style-next:Term2;	margin-top:0in;	margin-right:0in;	margin-bottom:4.0pt;	margin-left:28.0pt;	line-height:12.0pt;	mso-line-height-rule:exactly;	mso-pagination:widow-orphan lines-together;	font-size:10.5pt;	mso-bidi-font-size:10.0pt;	font-family:"Times New Roman";	mso-fareast-font-family:"Times New Roman";}p.Rule, li.Rule, div.Rule	{mso-style-name:Rule;	mso-style-parent:"";	mso-style-next:Rh1;	margin-top:14.0pt;	margin-right:1.5pt;	margin-bottom:8.0pt;	margin-left:-88.5pt;	line-height:6.0pt;	mso-line-height-rule:exactly;	mso-pagination:widow-orphan;	page-break-after:avoid;	border:none;	mso-border-bottom-alt:solid windowtext .75pt;	padding:0in;	mso-padding-alt:0in 0in 0in 0in;	font-size:4.0pt;	mso-bidi-font-size:10.0pt;	font-family:"Times New Roman";	mso-fareast-font-family:"Times New Roman";	color:white;}p.Exw, li.Exw, div.Exw	{mso-style-name:Exw;	mso-style-parent:Ex;	margin-top:0in;	margin-right:0in;	margin-bottom:0in;	margin-left:-1.25in;	margin-bottom:.0001pt;	line-height:11.0pt;	mso-line-height-rule:exactly;	mso-pagination:widow-orphan lines-together;	page-break-after:avoid;	tab-stops:-71.0pt -52.0pt -33.0pt -14.0pt 5.0pt 24.0pt 43.0pt 62.0pt 81.0pt 100.0pt;	font-size:8.0pt;	mso-bidi-font-size:10.0pt;	font-family:"Lucida Sans Typewriter";	mso-fareast-font-family:"Times New Roman";	mso-bidi-font-family:"Times New Roman";}p.Syn, li.Syn, div.Syn	{mso-style-name:Syn;	mso-style-next:Normal;	margin-top:0in;	margin-right:0in;	margin-bottom:8.0pt;	margin-left:0in;	line-height:12.0pt;	mso-line-height-rule:exactly;	mso-pagination:widow-orphan lines-together;	page-break-after:avoid;	tab-stops:14.0pt 21.0pt 28.0pt 35.0pt 42.0pt 49.0pt 56.0pt 63.0pt 70.0pt 77.0pt 84.0pt 91.0pt 98.0pt 105.0pt 112.0pt 119.0pt 1.75in 133.0pt 140.0pt 147.0pt 154.0pt 161.0pt 168.0pt 175.0pt 182.0pt 189.0pt 196.0pt 203.0pt 210.0pt 217.0pt 224.0pt 231.0pt 238.0pt 245.0pt 3.5in 259.0pt 266.0pt 273.0pt 280.0pt 287.0pt 294.0pt 301.0pt 308.0pt 315.0pt 322.0pt 329.0pt 336.0pt 343.0pt;	font-size:10.5pt;	mso-bidi-font-size:10.0pt;	font-family:"Times New Roman";	mso-fareast-font-family:"Times New Roman";}p.Synw, li.Synw, div.Synw	{mso-style-name:Synw;	mso-style-next:Normal;	margin-top:0in;	margin-right:0in;	margin-bottom:8.0pt;	margin-left:-1.25in;	line-height:12.0pt;	mso-line-height-rule:exactly;	mso-pagination:widow-orphan lines-together;	page-break-after:avoid;	tab-stops:-76.0pt -62.0pt -48.0pt -34.0pt -20.0pt -6.0pt 8.0pt 14.0pt 21.0pt 28.0pt 35.0pt 42.0pt 49.0pt 56.0pt 63.0pt 70.0pt 77.0pt 84.0pt 91.0pt 98.0pt 105.0pt 112.0pt 119.0pt 1.75in 133.0pt 140.0pt 147.0pt 154.0pt 161.0pt 168.0pt 175.0pt 182.0pt 189.0pt 196.0pt 203.0pt 210.0pt 217.0pt 224.0pt 231.0pt 238.0pt 245.0pt 3.5in 259.0pt 266.0pt 273.0pt 280.0pt 287.0pt 294.0pt 301.0pt 308.0pt;	font-size:10.5pt;	mso-bidi-font-size:10.0pt;	font-family:"Times New Roman";	mso-fareast-font-family:"Times New Roman";}p.Leh, li.Leh, div.Leh	{mso-style-name:Leh;	mso-style-parent:Le;	mso-style-next:"Heading 1";	margin:0in;	margin-bottom:.0001pt;	text-align:right;	line-height:4.0pt;	mso-line-height-rule:exactly;	mso-pagination:widow-orphan lines-together;	font-size:6.0pt;	mso-bidi-font-size:10.0pt;	font-family:"Times New Roman";	mso-fareast-font-family:"Times New Roman";}p.Lmc, li.Lmc, div.Lmc	{mso-style-name:Lmc;	margin-top:0in;	margin-right:0in;	margin-bottom:4.0pt;	margin-left:0in;	line-height:12.0pt;	mso-line-height-rule:exactly;	mso-pagination:widow-orphan;	font-size:10.5pt;	mso-bidi-font-size:10.0pt;	font-family:"Times New Roman";	mso-fareast-font-family:"Times New Roman";}p.Pb, li.Pb, div.Pb	{mso-style-name:Pb;	mso-style-parent:"";	mso-style-next:Normal;	margin-top:0in;	margin-right:0in;	margin-bottom:0in;	margin-left:-14.0pt;	margin-bottom:.0001pt;	line-height:4.0pt;	mso-line-height-rule:exactly;	page-break-before:always;	mso-pagination:widow-orphan;	page-break-after:avoid;	mso-element:frame;	mso-element-frame-hspace:9.0pt;	mso-element-wrap:around;	mso-element-anchor-vertical:paragraph;	mso-element-anchor-horizontal:page;	mso-element-top:.05pt;	mso-height-rule:exactly;	font-size:6.0pt;	mso-bidi-font-size:10.0pt;	font-family:"Times New Roman";	mso-fareast-font-family:"Times New Roman";}p.Procp, li.Procp, div.Procp	{mso-style-name:Procp;	mso-style-next:Ln1;	margin-top:0in;	margin-right:0in;	margin-bottom:4.0pt;	margin-left:0in;	line-height:12.0pt;	mso-line-height-rule:exactly;	mso-pagination:widow-orphan lines-together;	page-break-after:avoid;	font-size:10.5pt;	mso-bidi-font-size:10.0pt;	font-family:"Times New Roman";	mso-fareast-font-family:"Times New Roman";}p.Tpi, li.Tpi, div.Tpi	{mso-style-name:Tpi;	mso-style-parent:Tp;	mso-style-next:Tp;	margin-top:1.0pt;	margin-right:0in;	margin-bottom:3.0pt;	margin-left:26.0pt;	text-indent:-14.0pt;	line-height:11.0pt;	mso-line-height-rule:exactly;	mso-pagination:widow-orphan lines-together;	tab-stops:26.0pt;	font-size:9.5pt;	mso-bidi-font-size:10.0pt;	font-family:"Times New Roman";	mso-fareast-font-family:"Times New Roman";}p.Tpr, li.Tpr, div.Tpr	{mso-style-name:Tpr;	mso-style-parent:Tp;	mso-style-next:Tp;	margin-top:1.0pt;	margin-right:0in;	margin-bottom:3.0pt;	margin-left:12.0pt;	text-align:right;	line-height:11.0pt;	mso-line-height-rule:exactly;	mso-pagination:widow-orphan lines-together;	font-size:9.5pt;	mso-bidi-font-size:10.0pt;	font-family:"Times New Roman";	mso-fareast-font-family:"Times New Roman";}p.Texf, li.Texf, div.Texf	{mso-style-name:Texf;	mso-style-parent:Ex;	margin-top:1.0pt;	margin-right:0in;	margin-bottom:3.0pt;	margin-left:0in;	line-height:11.0pt;	mso-line-height-rule:exactly;	mso-pagination:widow-orphan lines-together;	page-break-after:avoid;	tab-stops:19.0pt 38.0pt 57.0pt 76.0pt 95.0pt;	font-size:8.0pt;	mso-bidi-font-size:10.0pt;	font-family:"Lucida Sans Typewriter";	mso-fareast-font-family:"Times New Roman";	mso-bidi-font-family:"Times New Roman";}p.Tf, li.Tf, div.Tf	{mso-style-name:Tf;	mso-style-parent:Tp;	margin-top:1.0pt;	margin-right:0in;	margin-bottom:2.0pt;	margin-left:7.0pt;	text-indent:-7.0pt;	line-height:10.0pt;	mso-line-height-rule:exactly;	mso-pagination:widow-orphan lines-together;	tab-stops:14.0pt;	font-size:8.5pt;	mso-bidi-font-size:10.0pt;	font-family:"Times New Roman";	mso-fareast-font-family:"Times New Roman";}p.Tpf, li.Tpf, div.Tpf	{mso-style-name:Tpf;	mso-style-parent:Tp;	mso-style-next:Tp;	margin-top:1.0pt;	margin-right:0in;	margin-bottom:3.0pt;	margin-left:0in;	line-height:11.0pt;	mso-line-height-rule:exactly;	mso-pagination:widow-orphan lines-together;	tab-stops:14.0pt 28.0pt;	font-size:9.5pt;	mso-bidi-font-size:10.0pt;	font-family:"Times New Roman";	mso-fareast-font-family:"Times New Roman";}p.Tew, li.Tew, div.Tew	{mso-style-name:Tew;	mso-style-parent:Te;	mso-style-next:Normal;	margin-top:4.0pt;	margin-right:1.5pt;	margin-bottom:4.0pt;	margin-left:-88.5pt;	text-align:right;	line-height:9.0pt;	mso-pagination:widow-orphan lines-together;	border:none;	mso-border-top-alt:solid windowtext .75pt;	padding:0in;	mso-padding-alt:1.0pt 0in 0in 0in;	font-size:8.0pt;	mso-bidi-font-size:10.0pt;	font-family:"Times New Roman";	mso-fareast-font-family:"Times New Roman";}p.Art, li.Art, div.Art	{mso-style-name:Art;	mso-style-parent:"";	mso-style-next:Cap;	margin-top:4.0pt;	margin-right:0in;	margin-bottom:12.0pt;	margin-left:-1.25in;	mso-pagination:widow-orphan lines-together;	tab-stops:0in 14.0pt 28.0pt;	font-size:14.0pt;	mso-bidi-font-size:10.0pt;	font-family:"Times New Roman";	mso-fareast-font-family:"Times New Roman";}p.Thf, li.Thf, div.Thf	{mso-style-name:Thf;	mso-style-parent:Th;	mso-style-next:Th;	margin-top:1.0pt;	margin-right:0in;	margin-bottom:3.0pt;	margin-left:0in;	line-height:11.0pt;	mso-line-height-rule:exactly;	mso-pagination:widow-orphan lines-together;	page-break-after:avoid;	font-size:9.5pt;	mso-bidi-font-size:10.0pt;	font-family:"Times New Roman";	mso-fareast-font-family:"Times New Roman";	font-weight:bold;	mso-bidi-font-weight:normal;}p.Tpif, li.Tpif, div.Tpif	{mso-style-name:Tpif;	mso-style-parent:Tpi;	mso-style-next:Tp;	margin-top:1.0pt;	margin-right:0in;	margin-bottom:3.0pt;	margin-left:14.0pt;	text-indent:-14.0pt;	line-height:11.0pt;	mso-line-height-rule:exactly;	mso-pagination:widow-orphan lines-together;	tab-stops:14.0pt;	font-size:9.5pt;	mso-bidi-font-size:10.0pt;	font-family:"Times New Roman";	mso-fareast-font-family:"Times New Roman";}p.Tr, li.Tr, div.Tr	{mso-style-name:Tr;	mso-style-parent:"";	mso-style-next:Tpf;	margin:0in;	margin-bottom:.0001pt;	text-align:right;	line-height:1.0pt;	mso-line-height-rule:exactly;	mso-pagination:widow-orphan lines-together;	page-break-after:avoid;	border:none;	mso-border-top-alt:solid windowtext .75pt;	padding:0in;	mso-padding-alt:0in 0in 0in 0in;	font-size:4.0pt;	mso-bidi-font-size:10.0pt;	font-family:"Times New Roman";	mso-fareast-font-family:"Times New Roman";}p.Ph, li.Ph, div.Ph	{mso-style-name:Ph;	mso-style-parent:Ch;	mso-style-next:Normal;	margin:0in;	margin-bottom:.0001pt;	line-height:32.0pt;	mso-line-height-rule:exactly;	mso-pagination:widow-orphan lines-together;	page-break-after:avoid;	mso-element:frame;	mso-element-frame-width:336.0pt;	mso-element-frame-height:123.0pt;	mso-element-frame-hspace:9.0pt;	mso-element-wrap:no-wrap-beside;	mso-element-anchor-vertical:paragraph;	mso-element-anchor-horizontal:margin;	mso-element-left:-1.25in;	mso-element-top:.15pt;	mso-height-rule:exactly;	font-size:30.0pt;	mso-bidi-font-size:10.0pt;	font-family:"Times New Roman";	mso-fareast-font-family:"Times New Roman";	color:blue;}p.index, li.index, div.index	{mso-style-name:index;	mso-style-next:Normal;	margin-top:0in;	margin-right:0in;	margin-bottom:4.0pt;	margin-left:0in;	line-height:12.0pt;	mso-line-height-rule:exactly;	mso-pagination:widow-orphan lines-together;	page-break-after:avoid;	font-size:12.0pt;	mso-bidi-font-size:10.0pt;	font-family:Arial;	mso-fareast-font-family:"Times New Roman";	mso-bidi-font-family:"Times New Roman";	color:fuchsia;	display:none;	mso-hide:all;}p.CapSd, li.CapSd, div.CapSd	{mso-style-name:CapSd;	mso-style-parent:Cap;	margin:0in;	margin-bottom:.0001pt;	line-height:11.0pt;	mso-line-height-rule:exactly;	mso-pagination:widow-orphan lines-together;	tab-stops:right 78.0pt;	mso-element:frame;	mso-element-frame-width:78.0pt;	mso-element-frame-hspace:12.0pt;	mso-element-wrap:around;	mso-element-anchor-vertical:paragraph;	mso-element-anchor-horizontal:page;	mso-element-top:.05pt;	mso-height-rule:exactly;	font-size:9.5pt;	mso-bidi-font-size:10.0pt;	font-family:"Times New Roman";	mso-fareast-font-family:"Times New Roman";	font-weight:bold;	mso-bidi-font-weight:normal;}p.ArtSd, li.ArtSd, div.ArtSd	{mso-style-name:ArtSd;	mso-style-parent:Art;	mso-style-next:Normal;	margin-top:0in;	margin-right:0in;	margin-bottom:12.0pt;	margin-left:0in;	mso-pagination:widow-orphan lines-together;	page-break-after:avoid;	tab-stops:right 78.0pt;	mso-element:frame;	mso-element-frame-width:78.0pt;	mso-element-frame-hspace:12.0pt;	mso-element-wrap:around;	mso-element-anchor-vertical:paragraph;	mso-element-anchor-horizontal:page;	mso-element-top:.05pt;	mso-height-rule:exactly;	font-size:14.0pt;	mso-bidi-font-size:10.0pt;	font-family:"Times New Roman";	mso-fareast-font-family:"Times New Roman";}p.Tex, li.Tex, div.Tex	{mso-style-name:Tex;	mso-style-parent:Texf;	margin-top:1.0pt;	margin-right:0in;	margin-bottom:3.0pt;	margin-left:12.0pt;	line-height:11.0pt;	mso-line-height-rule:exactly;	mso-pagination:widow-orphan lines-together;	page-break-after:avoid;	tab-stops:31.0pt 50.0pt 69.0pt 88.0pt 107.0pt;	font-size:8.0pt;	mso-bidi-font-size:10.0pt;	font-family:"Lucida Sans Typewriter";	mso-fareast-font-family:"Times New Roman";	mso-bidi-font-family:"Times New Roman";}p.hb1, li.hb1, div.hb1	{mso-style-name:*hb1;	mso-style-parent:"Heading 4";	mso-style-next:"Heading 4";	margin-top:1.0pt;	margin-right:0in;	margin-bottom:2.0pt;	margin-left:0in;	text-align:center;	line-height:17.0pt;	mso-line-height-rule:exactly;	mso-pagination:widow-orphan lines-together;	page-break-after:avoid;	mso-outline-level:4;	background:#9C9CFF;	mso-shading:windowtext;	mso-pattern:gray-60 blue;	mso-element:frame;	mso-element-frame-width:75.0pt;	mso-element-frame-hspace:12.0pt;	mso-element-wrap:around;	mso-element-anchor-vertical:paragraph;	mso-element-anchor-horizontal:margin;	mso-element-left:-1.25in;	mso-element-top:.05pt;	mso-height-rule:exactly;	font-size:12.0pt;	mso-bidi-font-size:10.0pt;	font-family:"Arial Narrow";	mso-fareast-font-family:"Times New Roman";	mso-bidi-font-family:"Times New Roman";	color:white;	font-weight:bold;	mso-bidi-font-weight:normal;}p.hb2, li.hb2, div.hb2	{mso-style-name:*hb2;	mso-style-parent:*hb1;	margin-top:1.0pt;	margin-right:0in;	margin-bottom:1.0pt;	margin-left:0in;	text-indent:4.0pt;	line-height:18.0pt;	mso-line-height-rule:exactly;	mso-pagination:widow-orphan lines-together;	page-break-after:avoid;	mso-outline-level:4;	background:#9C9CFF;	mso-shading:windowtext;	mso-pattern:gray-60 blue;	mso-element:frame;	mso-element-frame-hspace:12.0pt;	mso-element-wrap:around;	mso-element-anchor-vertical:paragraph;	mso-element-anchor-horizontal:margin;	mso-element-left:right;	mso-element-top:.1pt;	mso-height-rule:exactly;	font-size:12.0pt;	mso-bidi-font-size:10.0pt;	font-family:"Arial Narrow";	mso-fareast-font-family:"Times New Roman";	mso-bidi-font-family:"Times New Roman";	color:white;	mso-text-raise:1.5pt;	font-weight:bold;	mso-bidi-font-weight:normal;}p.Cbx, li.Cbx, div.Cbx	{mso-style-name:*Cbx;	mso-style-parent:"";	margin-top:2.0pt;	margin-right:0in;	margin-bottom:2.0pt;	margin-left:8.0pt;	line-height:10.5pt;	mso-line-height-rule:exactly;	mso-pagination:widow-orphan lines-together;	page-break-after:avoid;	tab-stops:22.0pt;	font-size:9.5pt;	mso-bidi-font-size:10.0pt;	font-family:"Arial Narrow";	mso-fareast-font-family:"Times New Roman";	mso-bidi-font-family:"Times New Roman";}p.Cbxe, li.Cbxe, div.Cbxe	{mso-style-name:*Cbxe;	mso-style-parent:Te;	margin-top:0in;	margin-right:1.5pt;	margin-bottom:4.0pt;	margin-left:-9.0pt;	line-height:10.5pt;	mso-line-height-rule:exactly;	mso-pagination:widow-orphan lines-together;	tab-stops:lined 348.0pt;	font-size:8.0pt;	mso-bidi-font-size:10.0pt;	font-family:"Times New Roman";	mso-fareast-font-family:"Times New Roman";}p.Tart, li.Tart, div.Tart	{mso-style-name:Tart;	mso-style-parent:Tp;	margin-top:1.0pt;	margin-right:0in;	margin-bottom:3.0pt;	margin-left:0in;	mso-pagination:widow-orphan lines-together;	tab-stops:12.0pt 14.0pt 28.0pt;	font-size:9.5pt;	mso-bidi-font-size:10.0pt;	font-family:"Times New Roman";	mso-fareast-font-family:"Times New Roman";}p.Sbrh2, li.Sbrh2, div.Sbrh2	{mso-style-name:Sbrh2;	mso-style-parent:"Heading 5";	mso-style-next:Sbrp;	margin-top:2.0pt;	margin-right:14.0pt;	margin-bottom:2.0pt;	margin-left:14.0pt;	line-height:12.0pt;	mso-pagination:widow-orphan lines-together;	page-break-after:avoid;	mso-outline-level:5;	background:#FFFFBA;	mso-shading:windowtext;	mso-pattern:gray-40 yellow;	border:none;	mso-border-alt:solid white 1.5pt;	padding:0in;	mso-padding-alt:14.0pt 14.0pt 14.0pt 14.0pt;	font-size:10.5pt;	mso-bidi-font-size:10.0pt;	font-family:"Arial Narrow";	mso-fareast-font-family:"Times New Roman";	mso-bidi-font-family:"Times New Roman";	font-weight:bold;	mso-bidi-font-weight:normal;}p.SbrLb, li.SbrLb, div.SbrLb	{mso-style-name:SbrLb;	mso-style-parent:Lb2;	margin-top:0in;	margin-right:14.0pt;	margin-bottom:4.0pt;	margin-left:28.0pt;	text-indent:-14.0pt;	line-height:12.0pt;	mso-line-height-rule:exactly;	mso-pagination:widow-orphan lines-together;	tab-stops:28.0pt;	background:#FFFFBA;	mso-shading:windowtext;	mso-pattern:gray-40 yellow;	border:none;	mso-border-alt:solid white 1.5pt;	padding:0in;	mso-padding-alt:14.0pt 14.0pt 14.0pt 14.0pt;	font-size:10.5pt;	mso-bidi-font-size:10.0pt;	font-family:"Times New Roman";	mso-fareast-font-family:"Times New Roman";}p.Tei, li.Tei, div.Tei	{mso-style-name:Tei;	margin-top:4.0pt;	margin-right:1.5pt;	margin-bottom:4.0pt;	margin-left:15.5pt;	text-align:right;	line-height:9.0pt;	mso-pagination:widow-orphan lines-together;	border:none;	mso-border-top-alt:solid windowtext .75pt;	padding:0in;	mso-padding-alt:1.0pt 0in 0in 0in;	font-size:8.0pt;	mso-bidi-font-size:10.0pt;	font-family:"Times New Roman";	mso-fareast-font-family:"Times New Roman";}p.SbrLp, li.SbrLp, div.SbrLp	{mso-style-name:SbrLp;	mso-style-parent:SbrLb;	margin-top:0in;	margin-right:14.0pt;	margin-bottom:4.0pt;	margin-left:28.0pt;	text-indent:-14.0pt;	line-height:12.0pt;	mso-line-height-rule:exactly;	mso-pagination:widow-orphan lines-together;	tab-stops:28.0pt;	background:#FFFFBA;	mso-shading:windowtext;	mso-pattern:gray-40 yellow;	border:none;	mso-border-alt:solid white 1.5pt;	padding:0in;	mso-padding-alt:14.0pt 14.0pt 14.0pt 14.0pt;	font-size:10.5pt;	mso-bidi-font-size:10.0pt;	font-family:"Times New Roman";	mso-fareast-font-family:"Times New Roman";}p.SbrEx, li.SbrEx, div.SbrEx	{mso-style-name:SbrEx;	mso-style-parent:Exl;	margin-top:0in;	margin-right:14.0pt;	margin-bottom:0in;	margin-left:14.0pt;	margin-bottom:.0001pt;	line-height:11.0pt;	mso-line-height-rule:exactly;	mso-pagination:widow-orphan lines-together;	page-break-after:avoid;	tab-stops:33.0pt 52.0pt 71.0pt 1.25in 109.0pt 128.0pt 147.0pt 166.0pt 185.0pt 204.0pt;	background:#FFFFBA;	mso-shading:windowtext;	mso-pattern:gray-40 yellow;	border:none;	mso-border-alt:solid white 1.5pt;	padding:0in;	mso-padding-alt:14.0pt 14.0pt 14.0pt 14.0pt;	font-size:8.0pt;	mso-bidi-font-size:10.0pt;	font-family:"Lucida Sans Typewriter";	mso-fareast-font-family:"Times New Roman";	mso-bidi-font-family:"Times New Roman";}p.Exl2, li.Exl2, div.Exl2	{mso-style-name:Exl2;	mso-style-parent:Exl;	margin-top:0in;	margin-right:0in;	margin-bottom:0in;	margin-left:28.0pt;	margin-bottom:.0001pt;	line-height:11.0pt;	mso-line-height-rule:exactly;	mso-pagination:widow-orphan lines-together;	page-break-after:avoid;	tab-stops:33.0pt 52.0pt 71.0pt 1.25in 109.0pt 128.0pt 147.0pt 166.0pt 185.0pt 204.0pt;	font-size:8.0pt;	mso-bidi-font-size:10.0pt;	font-family:"Lucida Sans Typewriter";	mso-fareast-font-family:"Times New Roman";	mso-bidi-font-family:"Times New Roman";}p.Tes, li.Tes, div.Tes	{mso-style-name:Tes;	mso-style-parent:Le;	mso-style-next:Normal;	margin:0in;	margin-bottom:.0001pt;	text-align:right;	line-height:8.0pt;	mso-line-height-rule:exactly;	mso-pagination:widow-orphan lines-together;	font-size:6.0pt;	mso-bidi-font-size:10.0pt;	font-family:"Times New Roman";	mso-fareast-font-family:"Times New Roman";}p.Teh, li.Teh, div.Teh	{mso-style-name:Teh;	mso-style-parent:Leh;	mso-style-next:"Heading 1";	margin:0in;	margin-bottom:.0001pt;	text-align:right;	line-height:4.0pt;	mso-line-height-rule:exactly;	mso-pagination:widow-orphan lines-together;	font-size:6.0pt;	mso-bidi-font-size:10.0pt;	font-family:"Times New Roman";	mso-fareast-font-family:"Times New Roman";}p.SbrLe, li.SbrLe, div.SbrLe	{mso-style-name:SbrLe;	mso-style-parent:Le;	mso-style-next:Sbrp;	margin-top:0in;	margin-right:14.0pt;	margin-bottom:0in;	margin-left:14.0pt;	margin-bottom:.0001pt;	text-align:right;	line-height:8.0pt;	mso-pagination:widow-orphan lines-together;	background:#FFFFBA;	mso-shading:windowtext;	mso-pattern:gray-40 yellow;	border:none;	mso-border-alt:solid white 1.5pt;	padding:0in;	mso-padding-alt:14.0pt 14.0pt 14.0pt 14.0pt;	font-size:6.0pt;	mso-bidi-font-size:10.0pt;	font-family:"Times New Roman";	mso-fareast-font-family:"Times New Roman";}p.Tsyn, li.Tsyn, div.Tsyn	{mso-style-name:Tsyn;	mso-style-parent:Syn;	margin-top:1.0pt;	margin-right:0in;	margin-bottom:3.0pt;	margin-left:0in;	line-height:12.0pt;	mso-line-height-rule:exactly;	mso-pagination:widow-orphan lines-together;	page-break-after:avoid;	tab-stops:14.0pt 21.0pt 28.0pt 35.0pt 42.0pt 49.0pt 56.0pt 63.0pt 70.0pt 77.0pt 84.0pt 91.0pt 98.0pt 105.0pt 112.0pt 119.0pt 1.75in 133.0pt 140.0pt 147.0pt 154.0pt 161.0pt 168.0pt 175.0pt 182.0pt 189.0pt 196.0pt 203.0pt 210.0pt 217.0pt 224.0pt 231.0pt 238.0pt 245.0pt 3.5in 259.0pt 266.0pt 273.0pt 280.0pt 287.0pt 294.0pt 301.0pt 308.0pt 315.0pt 322.0pt 329.0pt 336.0pt 343.0pt;	font-size:10.5pt;	mso-bidi-font-size:10.0pt;	font-family:"Times New Roman";	mso-fareast-font-family:"Times New Roman";} /* Page Definitions */@page	{mso-facing-pages:yes;}@page Section1	{size:8.5in 11.0in;	margin:-127.0pt 76.5pt -115.0pt 166.5pt;	mso-header-margin:99.5pt;	mso-footer-margin:.25in;	mso-gutter-margin:21.0pt;	mso-page-numbers:1;	mso-title-page:yes;	mso-even-header:url("./Chap_01_files/header.htm") eh1;	mso-header:url("./Chap_01_files/header.htm") h1;	mso-even-footer:url("./Chap_01_files/header.htm") ef1;	mso-footer:url("./Chap_01_files/header.htm") f1;	mso-first-header:url("./Chap_01_files/header.htm") fh1;	mso-first-footer:url("./Chap_01_files/header.htm") ff1;	mso-paper-source:1;}div.Section1	{page:Section1;}--></style>	</head>	<body lang="EN-US" style="tab-interval:14.0pt">		<div class="Section1">			<p class="Cn" style="margin-left:0in">Chapter <span style='mso-field-code:"SEQ CHAPTER \\R 1"'>1</span></p>			<div style="mso-element:frame;mso-element-wrap:no-wrap-beside">				<table cellspacing="0" cellpadding="0" hspace="0" vspace="0" width="448" height="164">					<tr>						<td valign="top" align="left" height="164" style="padding-top:0in;padding-right:  0in;padding-bottom:0in;padding-left:0in">							<p class="Ch">Understanding Global Concepts</p>						</td>					</tr>				</table>			</div>			<![if !supportTextWrap]><br clear="ALL">			<![endif]>			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>xe&quot;aa&quot; \z &quot;MASMBW.DOC-1459&quot;<![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			</p>			<p class="MsoNormal">With the development of the Microsoft Macro Assembler (MASM) version 6.1, you now have more options available to you for approaching a programming task. This chapter explains the general concepts of programming in assembly language, beginning with the environment and a review of the components you need to work in the assembler environment. Even if you are familiar with previous versions of MASM, you should examine this chapter for information on new terms and features.</p>			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>xe&quot;aa&quot; \z &quot;MASMBW.DOC-1460&quot;<![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			</p>			<p class="MsoNormal">The first section of this chapter reviews available processors and operating systems and how they work together. The section also discusses segmented architecture and how it affects a protected-mode operating environment such as Windows.</p>			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>xe&quot;aa&quot; \z &quot;MASMBW.DOC-1461&quot;<![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			</p>			<p class="MsoNormal">The second section describes some of the language components of MASM that are common to most programs, such as reserved words, constant expressions, operators, and registers. The remainder of this book was written with the assumption that you understand the information presented in this section.</p>			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>xe&quot;aa&quot; \z &quot;MASMBW.DOC-1462&quot;<![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			</p>			<p class="MsoNormal">The last section summarizes the assembly process, from assembling a program through running it. You can affect this process by the way you develop your code. Finally, this section explores how you can change the assembly process with the <b style="mso-bidi-font-weight:normal">OPTION</b> directive and conditional assembly.</p>			<h1 style="margin-left:0in">The Processing Environment</h1>			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>xe&quot;aa&quot; \z &quot;MASMBW.DOC-1463&quot;<![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			</p>			<p class="MsoNormal">The processing environment for MASM 6.1 includes the processor on which your programs run, the operating system your programs use, and the aspects of the segmented architecture that influence the choice of programming models. This section summarizes these elements of the environment and how they affect your programming choices.</p>			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>XE&quot;8086-based processors&quot;<span style='mso-hide:none'> \z&quot;MASMBW.DOC-1001&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;Processors:8086-based&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1002&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;Segmented architecture&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1003&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;Architecture:segmented&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1004&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			</p>			<h2 style="margin-left:0in">8086-Based Processors</h2>			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>XE&quot;Processors:target&quot;<span style='mso-hide:none'> \z&quot;MASMBW.DOC-1005&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			</p>			<p class="MsoNormal">The 8086 &#147;family&#148; of processors uses segments to control data and code. The later 8086-based processors have larger instruction sets and more memory capacity, but they still support the same segmented architecture. Knowing the differences between the various 8086-based processors can help you select the appropriate target processor for your programs.</p>			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>xe&quot;aa&quot; \z &quot;MASMBW.DOC-1464&quot;<![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			</p>			<p class="MsoNormal">The instruction set of the 8086 processor is upwardly compatible with its successors. To write code that runs on the widest number of machines, select the 8086 instruction set. By using the instruction set of a more advanced processor, you increase the capabilities and efficiency of your program, but you also reduce the number of systems on which the program can run.</p>			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>XE&quot;8086-based processors&quot;<span style='mso-hide:none'> \z&quot;MASMBW.DOC-1006&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			</p>			<p class="MsoNormal">Table 1.1 lists modes, memory, and segment size of processors on which your application may need to run. Each processor is discussed in more detail following.</p>			<table border="0" cellspacing="0" cellpadding="0" style="margin-left:.4pt;border-collapse: collapse;mso-padding-alt:0in 0in 0in 0in">				<tr>					<td width="232" colspan="2" valign="top" style="width:174.0pt;padding:0in 0in 0in 0in">						<p class="Tt">Table <!--[if supportFields]><span style='font-family:Times'><span  style='mso-element:field-begin'></span>SEQ chapter \c<span style='mso-element:  field-separator'></span></span><![endif]-->						<span style="font-family:Times">1</span><!--[if supportFields]><span  style='font-family:Times'><span style='mso-element:field-end'></span></span><![endif]-->						 <span style="font-family:Times">.</span><!--[if supportFields]><span  style='font-family:Times'><span style='mso-element:field-begin'></span>SEQ  table<span style='mso-element:field-separator'></span></span><![endif]-->						 <span style="font-family:Times">1</span><!--[if supportFields]><span  style='font-family:Times'><span style='mso-element:field-end'></span></span><![endif]-->						 <span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </span>8086 Family of Processors</p>						<p class="Tt"></p>					</td>					<td width="232" colspan="2" valign="top" style="width:174.0pt;padding:0in 0in 0in 0in">						<p class="Tp"></p>						<p class="Tp"></p>					</td>					<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:  normal"></p>				</tr>				<tr>					<td width="464" colspan="4" valign="top" style="width:348.0pt;padding:0in 0in 0in 0in">						<div style="border:none;border-top:solid windowtext .75pt;padding:0in 0in 0in 0in">							<p class="Tr"></p>						</div>						<div style="border:none;border-top:solid windowtext .75pt;padding:0in 0in 0in 0in">							<p class="Tr"></p>						</div>					</td>					<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:  normal"><b style="mso-bidi-font-weight:normal"><o:p></o:p></b></p>				</tr>				<tr>					<td width="89" valign="top" style="width:66.75pt;padding:0in 0in 0in 0in">						<p class="Thf"><br>						Processor</p>						<p class="Thf"></p>					</td>					<td width="143" valign="top" style="width:107.25pt;padding:0in 0in 0in 0in">						<p class="Th">Available<br>						Modes</p>						<p class="Th"></p>					</td>					<td width="116" valign="top" style="width:87.0pt;padding:0in 0in 0in 0in">						<p class="Th">Addressable<br>						Memory</p>						<p class="Th"></p>					</td>					<td width="116" valign="top" style="width:87.0pt;padding:0in 0in 0in 0in">						<p class="Th">Segment<br>						Size</p>						<p class="Th"></p>					</td>					<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:  normal"></p>				</tr>				<tr>					<td width="464" colspan="4" valign="top" style="width:348.0pt;padding:0in 0in 0in 0in">						<div style="border:none;border-top:solid windowtext .75pt;padding:0in 0in 0in 0in">							<p class="Tr"></p>						</div>						<div style="border:none;border-top:solid windowtext .75pt;padding:0in 0in 0in 0in">							<p class="Tr"></p>						</div>					</td>					<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:  normal"></p>				</tr>				<tr>					<td width="89" valign="top" style="width:66.75pt;padding:0in 0in 0in 0in">						<p class="Tpf">8086/8088</p>						<p class="Tpf"></p>					</td>					<td width="143" valign="top" style="width:107.25pt;padding:0in 0in 0in 0in">						<p class="Tp">Real</p>						<p class="Tp"></p>					</td>					<td width="116" valign="top" style="width:87.0pt;padding:0in 0in 0in 0in">						<p class="Tp">1 megabyte</p>						<p class="Tp"></p>					</td>					<td width="116" valign="top" style="width:87.0pt;padding:0in 0in 0in 0in">						<p class="Tp">16 bits</p>						<p class="Tp"></p>					</td>					<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:  normal"><b style="mso-bidi-font-weight:normal"><o:p></o:p></b></p>				</tr>				<tr>					<td width="89" valign="top" style="width:66.75pt;padding:0in 0in 0in 0in">						<p class="Tpf">80186/80188</p>						<p class="Tpf"></p>					</td>					<td width="143" valign="top" style="width:107.25pt;padding:0in 0in 0in 0in">						<p class="Tp">Real</p>						<p class="Tp"></p>					</td>					<td width="116" valign="top" style="width:87.0pt;padding:0in 0in 0in 0in">						<p class="Tp">1 megabyte</p>						<p class="Tp"></p>					</td>					<td width="116" valign="top" style="width:87.0pt;padding:0in 0in 0in 0in">						<p class="Tp">16 bits</p>						<p class="Tp"></p>					</td>					<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:  normal"></p>				</tr>				<tr>					<td width="89" valign="top" style="width:66.75pt;padding:0in 0in 0in 0in">						<p class="Tpf">80286</p>						<p class="Tpf"></p>					</td>					<td width="143" valign="top" style="width:107.25pt;padding:0in 0in 0in 0in">						<p class="Tp">Real and Protected</p>						<p class="Tp"></p>					</td>					<td width="116" valign="top" style="width:87.0pt;padding:0in 0in 0in 0in">						<p class="Tp">16 megabytes</p>						<p class="Tp"></p>					</td>					<td width="116" valign="top" style="width:87.0pt;padding:0in 0in 0in 0in">						<p class="Tp">16 bits</p>						<p class="Tp"></p>					</td>					<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:  normal"></p>				</tr>				<tr>					<td width="89" valign="top" style="width:66.75pt;padding:0in 0in 0in 0in">						<p class="Tpf">80386</p>						<p class="Tpf"></p>					</td>					<td width="143" valign="top" style="width:107.25pt;padding:0in 0in 0in 0in">						<p class="Tp">Real and Protected</p>						<p class="Tp"></p>					</td>					<td width="116" valign="top" style="width:87.0pt;padding:0in 0in 0in 0in">						<p class="Tp">4 gigabytes</p>						<p class="Tp"></p>					</td>					<td width="116" valign="top" style="width:87.0pt;padding:0in 0in 0in 0in">						<p class="Tp">16 or 32 bits</p>						<p class="Tp"></p>					</td>					<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:  normal"></p>				</tr>				<tr>					<td width="89" valign="top" style="width:66.75pt;padding:0in 0in 0in 0in">						<p class="Tpf">80486</p>						<p class="Tpf"></p>					</td>					<td width="143" valign="top" style="width:107.25pt;padding:0in 0in 0in 0in">						<p class="Tp">Real and Protected</p>						<p class="Tp"></p>					</td>					<td width="116" valign="top" style="width:87.0pt;padding:0in 0in 0in 0in">						<p class="Tp">4 gigabytes</p>						<p class="Tp"></p>					</td>					<td width="116" valign="top" style="width:87.0pt;padding:0in 0in 0in 0in">						<p class="Tp">16 or 32 bits</p>						<p class="Tp"></p>					</td>					<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:  normal"></p>				</tr>			</table>			<div style="border:none;border-top:solid windowtext .75pt;padding:1.0pt 0in 0in 0in">				<p class="Te"><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>			</div>			<h4>Processor Modes</h4>			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>xe&quot;aa&quot; \z &quot;MASMBW.DOC-1465&quot;<![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			</p>			<p class="MsoNormal">Real mode allows only one process to run at a time. The mode gets its name from the fact that addresses in real mode always correspond to real locations in memory. The MS-DOS operating system runs in real mode.</p>			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>XE&quot;Virtual-86 mode&quot;<span style='mso-hide:none'> \z&quot;MASMBW.DOC-1007&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;Windows operatingsystem:protected mode&quot;<span style='mso-hide:none'> \z&quot;MASMBW.DOC-1008&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>xe &quot;Operating systems:types&quot;\t &quot;See DOS, Windows operating systems&quot;<span style='mso-hide:none'>\z &quot;MASMBW.DOC-1009&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>xe Processors \t &quot;See also Realmode, protected mode&quot;<span style='mso-hide:none'> \z&quot;MASMBW.DOC-1010&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;Real mode:described&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1011&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;Protected mode:described&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1012&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;DOS operating system&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1013&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			</p>			<p class="MsoNormal">Windows 3.1 operates only in protected mode, but runs MS-DOS programs in real mode or in a simulation of real mode called virtual-86 mode. In protected mode, more than one process can be active at any one time. The operating system protects memory belonging to one process from access by another process; hence the name protected mode.</p>			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>XE&quot;Instructions:privileged&quot;<span style='mso-hide:none'> \z&quot;MASMBW.DOC-1014&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			</p>			<p class="MsoNormal">Protected-mode addresses do not correspond directly to physical memory. Under protected-mode operating systems, the processor allocates and manages memory dynamically. Additional privileged instructions initialize protected mode and control multiple processes. For more information, see &#147;Operating Systems,&#148; following.</p>			<h4>8086 and 8088</h4>			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>XE&quot;Processors:8086-based&quot;<span style='mso-hide:none'> \z&quot;MASMBW.DOC-1015&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;Directives:EVEN&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1016&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;Directives:ALIGN&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1017&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;EVEN directive&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1018&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;ALIGN directive&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1019&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;8088 processor&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1020&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			</p>			<p class="MsoNormal">The 8086 is faster than the 8088 because of its 16-bit data bus; the 8088 has only an 8-bit data bus. The 16-bit data bus allows you to use <b style="mso-bidi-font-weight:normal">EVEN</b> and <b style="mso-bidi-font-weight:normal">ALIGN</b> on an 8086 processor to word-align data and thus improve data-handling efficiency. Memory addresses on the 8086 and 8088 refer to actual physical addresses.</p>			<h4>80186 and 80188</h4>			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>XE&quot;80186 processor&quot;<span style='mso-hide:none'> \z&quot;MASMBW.DOC-1021&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;80188 processor&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1022&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			</p>			<p class="MsoNormal">These two processors are identical to the 8086 and 8088 except that new instructions have been added and several old instructions have been optimized. These processors run significantly faster than the 8086.</p>			<h4>80286</h4>			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>XE&quot;80286 processor&quot;<span style='mso-hide:none'> \z&quot;MASMBW.DOC-1023&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;Protected mode:described&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1024&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;OS/2 operating system&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1025&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			</p>			<p class="MsoNormal">The 80286 processor adds some instructions to control protected mode, and it runs faster. It also provides protected mode services, allowing the operating system to run multiple processes at the same time. The 80286 is the minimum for running Windows 3.1 and 16-bit versions of OS/<span style="letter-spacing:1.75pt">2</span><span style="font-size:7.0pt">&reg;</span>.</p>			<h4>80386</h4>			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>xe&quot;aa&quot; \z &quot;MASMBW.DOC-1466&quot;<![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			</p>			<p class="MsoNormal">Unlike its predecessors, the 80386 processor can handle both 16-bit and 32-bit data. It supports the entire instruction set of the 80286, and adds several new instructions as well. Software written for the 80286 runs unchanged on the 80386, but is faster because the chip operates at higher speeds.</p>			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>XE&quot;80386 processor&quot;<span style='mso-hide:none'> \z&quot;MASMBW.DOC-1026&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;DOS operating system&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1027&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;OS/2 operating system&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1028&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;Windows operating system:WindowsNT&quot;<span style='mso-hide:none'> \z &quot;MASMBW.DOC-1029&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			</p>			<p class="MsoNormal">The 80386 implements many new hardware-level features, including paged memory, multiple virtual 8086 processes, addressing of up to 4 gigabytes of memory, and specialized debugging registers. Thirty-two&#150;bit operating systems such as Windows NT and OS/2 2.0 can run only on an 80386 or higher processor.</p>			<h4>80486</h4>			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>XE&quot;80486 processor&quot;<span style='mso-hide:none'> \z&quot;MASMBW.DOC-1030&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			</p>			<p class="MsoNormal">The 80486 processor is an enhanced version of the 80386, with instruction &#147;pipelining&#148; that executes many instructions two to three times faster. The chip incorporates both a math coprocessor and an 8K (kilobyte) memory cache. (The math coprocessor is disabled on a variation of the chip called the 80486SX.) The 80486 includes new instructions and is fully compatible with 80386 software.</p>			<h4>8087, 80287, and 80387</h4>			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>XE&quot;Coprocessors:described&quot;<span style='mso-hide:none'> \z&quot;MASMBW.DOC-1031&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE&quot;Floating-point:calculations&quot;<span style='mso-hide:none'> \z&quot;MASMBW.DOC-1032&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;Prote cted mode:described&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1033&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;8087 math coprocessor&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1034&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;80287 math coprocessor&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1035&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;80387 math coprocessor&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1036&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;8086-based processors&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1037&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			</p>			<p class="MsoNormal">These math coprocessors work concurrently with the 8086 family of processors. Performing floating-point calculations with math coprocessors is up to 100 times faster than emulating the calculations with integer instructions. Although there are technical and performance differences among the three coprocessors, the main difference to the applications programmer is that the 80287 and 80387 can operate in protected mode. The 80387 also has several new instructions. The 80486 does not use any of these coprocessors; its floating-point processor is built in and is functionally equivalent to the 80387.</p>			<h2 style="margin-left:0in">Operating Systems</h2>			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>XE&quot;Target environment&quot;<span style='mso-hide:none'> \z&quot;MASMBW.DOC-1038&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;Environment:target&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1039&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;Real mode:described&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1040&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;Protected mode:described&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1041&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;DOS operating system&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1042&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;OS/2 operating system&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1043&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;Windows operatingsystem:programming for&quot;<span style='mso-hide:none'> \z&quot;MASMBW.DOC-1044&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			</p>			<p class="MsoNormal">With MASM, you can create programs that run under MS-DOS, Windows, or Windows NT<span style="letter-spacing:-1.75pt"> </span>&#151;<span style="letter-spacing:-1.75pt"> </span>or all three, in some cases. For example, ML.EXE can produce executable files that run in any of the target environments, regardless of the programmer&#146;s environment. For information on building programs for different environments, see &#147;Building and Running Programs&#148; in Help for PWB.</p>			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>xe&quot;aa&quot; \z &quot;MASMBW.DOC-1467&quot;<![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			</p>			<p class="MsoNormal">MS-DOS and Windows 3.1 provide different processing modes. MS-DOS runs in the single-process real mode. Windows 3.1 operates in protected mode, allowing multiple processes to run simultaneously.</p>			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>xe&quot;aa&quot; \z &quot;MASMBW.DOC-1468&quot;<![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			</p>			<p class="MsoNormal">Although Windows requires another operating system for loading and file services, it provides many functions normally associated with an operating system. When an application requests an MS-DOS service, Windows often provides the service without invoking MS-DOS. For consistency, this book refers to Windows as an operating system.</p>			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>XE&quot;Operating systems:(list)&quot;<span style='mso-hide:none'> \z&quot;MASMBW.DOC-1045&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;DOS operating system&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1046&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;Real mode:described&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1047&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;Protected mode:described&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1048&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			</p>			<p class="MsoNormal">MS-DOS and Windows (in protected mode) differ primarily in system access methods, size of addressable memory, and segment selection. Table <span style='mso-field-code:"seq chapter \\c"'>1</span>.2 summarizes these differences.</p>			<table border="0" cellspacing="0" cellpadding="0" style="margin-left:.4pt;border-collapse: collapse;mso-padding-alt:0in 0in 0in 0in">				<tr>					<td width="403" colspan="5" valign="top" style="width:302.1pt;padding:0in 0in 0in 0in">						<p class="Tt">Table <!--[if supportFields]><span style='font-family:Times'><span  style='mso-element:field-begin'></span>SEQ chapter \c<span style='mso-element:  field-separator'></span></span><![endif]-->						<span style="font-family:Times">1</span><!--[if supportFields]><span  style='font-family:Times'><span style='mso-element:field-end'></span></span><![endif]-->						 <span style="font-family:Times">.</span><!--[if supportFields]><span  style='font-family:Times'><span style='mso-element:field-begin'></span>SEQ  table<span style='mso-element:field-separator'></span></span><![endif]-->						 <span style="font-family:Times">2</span><!--[if supportFields]><span  style='font-family:Times'><span style='mso-element:field-end'></span></span><![endif]-->						 <span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </span>The MS-DOS and Windows Operating Systems Compared</p>						<p class="Tt"></p>					</td>					<td width="61" valign="top" style="width:45.8pt;padding:0in 0in 0in 0in">						<p class="Tt"></p>						<p class="Tt"></p>					</td>					<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:  normal"></p>				</tr>				<tr>					<td width="464" colspan="6" valign="top" style="width:347.9pt;padding:0in 0in 0in 0in">						<div style="border:none;border-top:solid windowtext .75pt;padding:0in 0in 0in 0in">							<p class="Tr"></p>						</div>						<div style="border:none;border-top:solid windowtext .75pt;padding:0in 0in 0in 0in">							<p class="Tr"></p>						</div>					</td>					<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:  normal"><b style="mso-bidi-font-weight:normal"><o:p></o:p></b></p>				</tr>				<tr>					<td width="79" valign="top" style="width:59.5pt;padding:0in 0in 0in 0in">						<p class="Thf"><br>						Operating<br>						System</p>						<p class="Thf"></p>					</td>					<td width="79" valign="top" style="width:59.5pt;padding:0in 0in 0in 0in">						<p class="Th"><br>						System<br>						Access</p>						<p class="Th"></p>					</td>					<td width="77" valign="top" style="width:58.0pt;padding:0in 0in 0in 0in">						<p class="Th">Available<br>						Active<br>						Processes</p>						<p class="Th"></p>					</td>					<td width="87" valign="top" style="width:65.5pt;padding:0in 0in 0in 0in">						<p class="Th"><br>						Addressable Memory</p>						<p class="Th"></p>					</td>					<td width="79" valign="top" style="width:59.6pt;padding:0in 0in 0in 0in">						<p class="Th">Contents of Segment<br>						Register</p>						<p class="Th"></p>					</td>					<td width="61" valign="top" style="width:45.8pt;padding:0in 0in 0in 0in">						<p class="Th"><br>						Word Length</p>						<p class="Th"></p>					</td>					<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:  normal"></p>				</tr>				<tr>					<td width="464" colspan="6" valign="top" style="width:347.9pt;padding:0in 0in 0in 0in">						<div style="border:none;border-top:solid windowtext .75pt;padding:0in 0in 0in 0in">							<p class="Tr"></p>						</div>						<div style="border:none;border-top:solid windowtext .75pt;padding:0in 0in 0in 0in">							<p class="Tr"></p>						</div>					</td>					<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:  normal"></p>				</tr>				<tr>					<td width="79" valign="top" style="width:59.5pt;padding:0in 0in 0in 0in">						<p class="Tpf">MS-DOS and Windows real mode</p>						<p class="Tpf"></p>					</td>					<td width="79" valign="top" style="width:59.5pt;padding:0in 0in 0in 0in">						<p class="Tp">Direct to hardware and OS call</p>						<p class="Tp"></p>					</td>					<td width="77" valign="top" style="width:58.0pt;padding:0in 0in 0in 0in">						<p class="Tp">One</p>						<p class="Tp"></p>					</td>					<td width="87" valign="top" style="width:65.5pt;padding:0in 0in 0in 0in">						<p class="Tp">1 megabyte</p>						<p class="Tp"></p>					</td>					<td width="79" valign="top" style="width:59.6pt;padding:0in 0in 0in 0in">						<p class="Tp">Actual<br>						address</p>						<p class="Tp"></p>					</td>					<td width="61" valign="top" style="width:45.8pt;padding:0in 0in 0in 0in">						<p class="Tp">16 bits</p>						<p class="Tp"></p>					</td>					<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:  normal"><b style="mso-bidi-font-weight:normal"><o:p></o:p></b></p>				</tr>				<tr>					<td width="79" valign="top" style="width:59.5pt;padding:0in 0in 0in 0in">						<p class="Tpf">Windows virtual-86 mode</p>						<p class="Tpf"></p>					</td>					<td width="79" valign="top" style="width:59.5pt;padding:0in 0in 0in 0in">						<p class="Tp">Operating system call</p>						<p class="Tp"></p>					</td>					<td width="77" valign="top" style="width:58.0pt;padding:0in 0in 0in 0in">						<p class="Tp">Multiple</p>						<p class="Tp"></p>					</td>					<td width="87" valign="top" style="width:65.5pt;padding:0in 0in 0in 0in">						<p class="Tp">1 megabyte</p>						<p class="Tp"></p>					</td>					<td width="79" valign="top" style="width:59.6pt;padding:0in 0in 0in 0in">						<p class="Tp">Segment selectors</p>						<p class="Tp"></p>					</td>					<td width="61" valign="top" style="width:45.8pt;padding:0in 0in 0in 0in">						<p class="Tp">16 bits</p>						<p class="Tp"></p>					</td>					<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:  normal"></p>				</tr>				<tr>					<td width="79" valign="top" style="width:59.5pt;padding:0in 0in 0in 0in">						<p class="Tpf">Windows protected mode</p>						<p class="Tpf"></p>					</td>					<td width="79" valign="top" style="width:59.5pt;padding:0in 0in 0in 0in">						<p class="Tp">Operating system call</p>						<p class="Tp"></p>					</td>					<td width="77" valign="top" style="width:58.0pt;padding:0in 0in 0in 0in">						<p class="Tp">Multiple</p>						<p class="Tp"></p>					</td>					<td width="87" valign="top" style="width:65.5pt;padding:0in 0in 0in 0in">						<p class="Tp">16 megabytes</p>						<p class="Tp"></p>					</td>					<td width="79" valign="top" style="width:59.6pt;padding:0in 0in 0in 0in">						<p class="Tp">Segment<br>						selectors</p>						<p class="Tp"></p>					</td>					<td width="61" valign="top" style="width:45.8pt;padding:0in 0in 0in 0in">						<p class="Tp">16 bits</p>						<p class="Tp"></p>					</td>					<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:  normal"></p>				</tr>				<tr>					<td width="79" valign="top" style="width:59.5pt;padding:0in 0in 0in 0in">						<p class="Tpf">Windows NT</p>						<p class="Tpf"></p>					</td>					<td width="79" valign="top" style="width:59.5pt;padding:0in 0in 0in 0in">						<p class="Tp">Operating system call</p>						<p class="Tp"></p>					</td>					<td width="77" valign="top" style="width:58.0pt;padding:0in 0in 0in 0in">						<p class="Tp">Multiple</p>						<p class="Tp"></p>					</td>					<td width="87" valign="top" style="width:65.5pt;padding:0in 0in 0in 0in">						<p class="Tp">512 megabytes</p>						<p class="Tp"></p>					</td>					<td width="79" valign="top" style="width:59.6pt;padding:0in 0in 0in 0in">						<p class="Tp">Segment<br>						selectors</p>						<p class="Tp"></p>					</td>					<td width="61" valign="top" style="width:45.8pt;padding:0in 0in 0in 0in">						<p class="Tp">32 bits</p>						<p class="Tp"></p>					</td>					<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:  normal"></p>				</tr>			</table>			<div style="border:none;border-top:solid windowtext .75pt;padding:1.0pt 0in 0in 0in">				<p class="Te"><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>			</div>			<h4>MS-DOS</h4>			<p class="MsoNormal">In real-mode programming, you can access system functions by calling MS-DOS, calling the basic input/output system (BIOS), or directly addressing hardware. Access is through MS-DOS Interrupt 21h.</p>			<h4>Windows</h4>			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>XE&quot;Segment selectors&quot;<span style='mso-hide:none'> \z&quot;MASMBW.DOC-1049&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			</p>			<p class="MsoNormal">As you can see in Table 1.2, protected mode allows for much larger data structures than real mode, since addressable memory extends to 16 megabytes. In protected mode, segment registers contain selector values rather than actual segment addresses. These selectors cannot be calculated by the program; they must be obtained by calling the operating system. Programs that attempt to calculate segment values or to address memory directly do not work in protected mode.</p>			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>XE&quot;Privilege levels&quot;<span style='mso-hide:none'> \z&quot;MASMBW.DOC-1050&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;Instructions:CLI&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1051&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;Instructions:STI&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1052&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;Instructions:IN&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1053&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;Instructions:OUT&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1054&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;STI instruction&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1055&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;IN instruction&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1056&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;OUT instruction&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1057&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			</p>			<p class="MsoNormal">Protected mode uses privilege levels to maintain system integrity and security. Programs cannot access data or code that is in a higher privilege level. Some instructions that directly access ports or affect interrupts (such as <b style="mso-bidi-font-weight:normal">CLI</b>, <b style="mso-bidi-font-weight:normal">STI</b>,<b style="mso-bidi-font-weight:normal"> IN</b>, and <b style="mso-bidi-font-weight:normal">OUT</b>) are available at privilege levels normally used only by systems programmers.</p>			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>XE&quot;Virtual memory&quot;<span style='mso-hide:none'> \z&quot;MASMBW.DOC-1058&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;Memory:virtual&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1059&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			</p>			<p class="MsoNormal">Windows protected mode provides each application with up to 16 megabytes of &#147;virtual memory,&#148; even on computers that have less physical memory. The term virtual memory refers to the operating system&#146;s ability to use a swap area on the hard disk as an extension of real memory. When a Windows application requires more memory than is available, Windows writes sections of occupied memory to the swap area, thus freeing those sections for other use. It then provides the memory to the application that made the memory request. When the owner of the swapped data regains control, Windows restores the data from disk to memory, swapping out other memory if required.</p>			<h4>Windows NT</h4>			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>XE&quot;Architecture:unsegmented&quot;<span style='mso-hide:none'> \z&quot;MASMBW.DOC-1060&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>xe &quot;Flat model&quot; \t &quot;SeeMemory models, flat&quot;<span style='mso-hide:none'> \z&quot;MASMBW.DOC-1061&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;Windows operatingsystem:Windows NT&quot;<span style='mso-hide:none'> \z&quot;MASMBW.DOC-1062&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			</p>			<p class="MsoNormal">Windows NT uses the so-called &#147;flat model&#148; of 80386/486 processors. This model places the processor&#146;s entire address space within one 32-bit segment. The section &#147;Defining Basic Attributes with .MODEL&#148; in Chapter 2 explains how to use the flat model. In flat model, your program can (in theory) access up to 4 gigabytes of virtual memory. Since code, data, and stack reside in the same segment, each segment register can hold the same value, which need never change.</p>			<h2 style="margin-left:0in">Segmented Architecture</h2>			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>XE&quot;Segmented architecture&quot;<span style='mso-hide:none'> \z&quot;MASMBW.DOC-1063&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;Architecture:segmented&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1064&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			</p>			<p class="MsoNormal">The 8086 family of processors employs a segmented architecture<span style="letter-spacing:-1.75pt"> </span>&#151;<span style="letter-spacing:-1.75pt"> </span>that is, each address is represented as a segment and an offset. Segmented addresses affect many aspects of assembly-language programming, especially addresses and pointers.</p>			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>XE&quot;Segments:described&quot;<span style='mso-hide:none'> \z&quot;MASMBW.DOC-1065&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;Offsets:described&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1066&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;DOS operating system&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1067&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			</p>			<p class="MsoNormal">Segmented architecture was originally designed to enable a 16-bit processor to access an address space larger than 64K. (The section &#147;Segmented Addressing,&#148; later in this chapter, explains how the processor uses both the segment and offset to create addresses larger than 64K.) MS-DOS is an example of an operating system that uses segmented architecture on a 16-bit processor.</p>			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>XE&quot;Protected mode:described&quot;<span style='mso-hide:none'> \z&quot;MASMBW.DOC-1068&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			</p>			<p class="MsoNormal">With the advent of protected-mode processors such as the 80286, segmented architecture gained a second purpose. Segments can separate different blocks of code and data to protect them from undesirable interactions. Windows takes advantage of the protection features of the 16-bit segments on the 80286.</p>			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>XE&quot;Segments:protection&quot;<span style='mso-hide:none'> \z&quot;MASMBW.DOC-1069&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			</p>			<p class="MsoNormal">Segmented architecture went through another significant change with the release of 32-bit processors, starting with the 80386. These processors are compatible with the older 16-bit processors, but allow flat model 32-bit offset values up to 4 gigabytes. Offset values of this magnitude remove the memory limitations of segmented architecture. The Windows NT operating system uses 32-bit addressing.</p>			<h2 style="margin-left:0in">Segment Protection</h2>			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>XE&quot;Operating systems:multitasking&quot;<span style='mso-hide:none'> \z&quot;MASMBW.DOC-1070&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;Segments:protection&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1071&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;DOS operating system&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1072&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;Windows operatingsystem:protected mode&quot;<span style='mso-hide:none'> \z&quot;MASMBW.DOC-1073&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;Segments:location of&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1074&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			</p>			<p class="MsoNormal">Segmented architecture is an important part of the Windows memory-protection scheme. In a &#147;multitasking&#148; operating system in which numerous programs can run simultaneously, programs cannot access the code and data of another process without permission.</p>			<p class="MsoNormal">In MS-DOS, the data and code segments are usually allocated adjacent to each other, as shown in Figure <span style='mso-field-code:"seq chapter \\c"'>1</span>.1. In Windows, the data and code segments can be anywhere in memory. The programmer knows nothing about, and has no control over, their location. The operating system can even move the segments to a new memory location or to disk while the program is running.</p>			<p class="Art" style="margin-left:0in"><span style="mso-tab-count:1">&nbsp;&nbsp;&nbsp; </span><span style='mso-field-code:"include M\:\\\\SLM\\\\SRC\\\\MASM61\\\\APPS\\\\ART\\\\mpchp01\.doc art_mp0101_eps  \\\\* mergeformat"'><a name="art_mp0101_eps"></a><a name="space_mp0101_eps"><span style="mso-bookmark:art_mp0101_eps"></span></a><!--[if supportFields]><span style='mso-bookmark:space_mp0101_eps'><span style='mso-bookmark:art_mp0101_eps'></span></span><spanstyle='mso-element:field-begin'></span><span style='mso-bookmark:space_mp0101_eps'><spanstyle='mso-bookmark:art_mp0101_eps'>IMPORT M:\\SLM\\SRC\\MASM61\\APPS\\ART\\MP0101.EPS\* mergeformat<span style='mso-element:field-separator'></span></span></span><![endif]-->			<span style="mso-bookmark:space_mp0101_eps"><span style="mso-bookmark:art_mp0101_eps"><!--[if gte vml 1]><v:shapetype id="_x0000_t75" coordsize="21600,21600" o:spt="75" o:preferrelative="t" path="m@4@5l@4@11@9@11@9@5xe" filled="f" stroked="f"> <v:stroke joinstyle="miter"/> <v:formulas>  <v:f eqn="if lineDrawn pixelLineWidth 0"/>  <v:f eqn="sum @0 1 0"/>  <v:f eqn="sum 0 0 @1"/>  <v:f eqn="prod @2 1 2"/>  <v:f eqn="prod @3 21600 pixelWidth"/>  <v:f eqn="prod @3 21600 pixelHeight"/>  <v:f eqn="sum @0 0 1"/>  <v:f eqn="prod @6 1 2"/>  <v:f eqn="prod @7 21600 pixelWidth"/>  <v:f eqn="sum @8 21600 0"/>  <v:f eqn="prod @7 21600 pixelHeight"/>  <v:f eqn="sum @10 21600 0"/> </v:formulas> <v:path o:extrusionok="f" gradientshapeok="t" o:connecttype="rect"/> <o:lock v:ext="edit" aspectratio="t"/></v:shapetype><v:shape id="_x0000_i1025" type="#_x0000_t75" style='width:269.25pt; height:191.25pt'> <v:imagedata src="./Chap_01_files/image001.wmz" o:href="file:///M:/SLM/SRC/MASM61/APPS/ART/MP0101.EPS"/></v:shape><![endif]-->			<![if !vml]><img width="359" height="255" src="Chap_01_files/image002.gif" v:shapes="_x0000_i1025"><![endif]></span></span><!--[if supportFields]><spanstyle='mso-bookmark:space_mp0101_eps'><span style='mso-bookmark:art_mp0101_eps'></span></span><spanstyle='mso-element:field-end'></span><![endif]-->			 <span style="mso-bookmark:space_mp0101_eps"><span style="mso-bookmark:art_mp0101_eps"></span></span></span></p>			<p class="Cap">Figure <!--[if supportFields]><span style='font-family:Times'><spanstyle='mso-element:field-begin'></span>SEQ chapter \c<span style='mso-element:field-separator'></span></span><![endif]-->			<span style="font-family:Times">1</span><!--[if supportFields]><spanstyle='font-family:Times'><span style='mso-element:field-end'></span></span><![endif]-->			 <span style="font-family:Times">.</span><!--[if supportFields]><spanstyle='font-family:Times'><span style='mso-element:field-begin'></span>SEQfigure<span style='mso-element:field-separator'></span></span><![endif]-->			 <span style="font-family:Times">1</span><!--[if supportFields]><spanstyle='font-family:Times'><span style='mso-element:field-end'></span></span><![endif]-->			 <span style="font-family:Helvetica-Narrow"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </span></span><span style="font-family:Times">Segment Allocation</span></p>			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>XE&quot;Segments:protection&quot;<span style='mso-hide:none'> \z&quot;MASMBW.DOC-1075&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;Windows operatingsystem:protected mode&quot;<span style='mso-hide:none'> \z&quot;MASMBW.DOC-1076&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			</p>			<p class="MsoNormal">Segment protection makes software development easier and more reliable in Windows than in MS-DOS, because Windows immediately detects illegal memory accesses. The operating system intercepts illegal memory accesses, terminates the program, and displays a message. This makes it easier for you to track down and fix the bug.</p>			<p class="MsoNormal">Because it runs in real mode, MS-DOS contains no mechanism for detecting an improper memory access. A program that overwrites data not belonging to it may continue to run and even terminate correctly. The error may not surface until later, when MS-DOS or another program reads the corrupted memory.</p>			<h2 style="margin-left:0in">Segmented Addressing</h2>			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>XE&quot;Addresses:segmented&quot;<span style='mso-hide:none'> \z&quot;MASMBW.DOC-1077&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;Segments:addresses&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1078&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;Offsets:addresses&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1079&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			</p>			<p class="MsoNormal">Segmented addressing refers to the internal mechanism that combines a segment value and an offset value to form a complete memory address. The two parts of an address are represented as</p>			<p class="Syn"><i style="mso-bidi-font-style:normal">segment</i>:<i style="mso-bidi-font-style:normal">offset</i></p>			<p class="MsoNormal">The <i style="mso-bidi-font-style:normal">segment</i> portion always consists of a 16-bit value. The <i style="mso-bidi-font-style:normal">offset</i> portion is a 16-bit value in 16-bit mode or a 32-bit value in 32-bit mode.</p>			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>XE&quot;Real mode:described&quot;<span style='mso-hide:none'> \z&quot;MASMBW.DOC-1080&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;Protected mode:described&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1081&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;Addresses:physical&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1082&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			</p>			<p class="MsoNormal">In real mode, the segment value is a physical address that has an arithmetic relationship to the offset value. The segment and offset together create a 20-bit physical address (explained in the next section). Although 20-bit addresses can access up to 1 megabyte of memory, the BIOS and operating system on International Standard Architecture (IBM PC/AT and compatible) computers use part of this memory, leaving the remainder available for programs.</p>			<h2 style="margin-left:0in">Segment Arithmetic</h2>			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>XE&quot;Segment arithmetic&quot;<span style='mso-hide:none'> \z&quot;MASMBW.DOC-1083&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;Protected mode:described&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1084&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;Segments:described&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1085&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;Offsets:described&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1086&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			</p>			<p class="MsoNormal">Manipulating segment and offset addresses directly in real-mode programming is called &#147;segment arithmetic.&#148; Programs that perform segment arithmetic are not portable to protected-mode operating systems, in which addresses do not correspond to a known segment and offset.</p>			<p class="MsoNormal">To perform segment arithmetic successfully, it helps to understand how the processor combines a 16-bit segment and a 16-bit offset to form a 20-bit linear address. In effect, the segment selects a 64K region of memory, and the offset selects the byte within that region. Here&#146;s how it works:</p>			<p class="Ln1" style="margin-left:22.0pt"><span style="mso-tab-count:1"></span>1.<span style="mso-tab-count:1">&nbsp; </span>The processor shifts the segment address to the left by four binary places, producing a 20-bit address ending in four zeros. This operation has the effect of multiplying the segment address by 16.</p>			<p class="Ln1" style="margin-left:22.0pt"><span style="mso-tab-count:1"></span>2.<span style="mso-tab-count:1">&nbsp; </span>The processor adds this 20-bit segment address to the 16-bit offset address. The offset address is not shifted.</p>			<p class="Ln1" style="margin-left:22.0pt"><span style="mso-tab-count:1"></span>3.<span style="mso-tab-count:1">&nbsp; </span>The processor uses the resulting 20-bit address, called the &#147;physical address,&#148; to access an actual location in the 1-megabyte address space.</p>			<p class="Le"><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>XE&quot;Addresses:physical&quot;<span style='mso-hide:none'> \z&quot;MASMBW.DOC-1087&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			</p>			<p class="MsoNormal">Figure 1.2 illustrates this process.</p>			<p class="Art" style="margin-left:0in"><span style="mso-tab-count:1">&nbsp;&nbsp;&nbsp; </span><span style='mso-field-code:"include M\:\\\\SLM\\\\SRC\\\\MASM61\\\\APPS\\\\ART\\\\mpchp01\.doc art_mp0102_eps  \\\\* mergeformat"'><a name="art_mp0102_eps"></a><a name="space_mp0102_eps"><span style="mso-bookmark:art_mp0102_eps"></span></a><!--[if supportFields]><span style='mso-bookmark:space_mp0102_eps'><span style='mso-bookmark:art_mp0102_eps'></span></span><spanstyle='mso-element:field-begin'></span><span style='mso-bookmark:space_mp0102_eps'><spanstyle='mso-bookmark:art_mp0102_eps'>IMPORTM:\\SLM\\SRC\\MASM61\\APPS\\ART\\MP0102.EPS \* mergeformat<spanstyle='mso-element:field-separator'></span></span></span><![endif]-->			<span style="mso-bookmark:space_mp0102_eps"><span style="mso-bookmark:art_mp0102_eps"><!--[if gte vml 1]><v:shape id="_x0000_i1026" type="#_x0000_t75" style='width:264pt;height:210.75pt'> <v:imagedata src="./Chap_01_files/image003.wmz" o:href="file:///M:/SLM/SRC/MASM61/APPS/ART/MP0102.EPS"/></v:shape><![endif]-->			<![if !vml]><img width="352" height="281" src="Chap_01_files/image004.gif" v:shapes="_x0000_i1026"><![endif]></span></span><!--[if supportFields]><spanstyle='mso-bookmark:space_mp0102_eps'><span style='mso-bookmark:art_mp0102_eps'></span></span><spanstyle='mso-element:field-end'></span><![endif]-->			 <span style="mso-bookmark:space_mp0102_eps"><span style="mso-bookmark:art_mp0102_eps"></span></span></span></p>			<p class="Cap">Figure <!--[if supportFields]><span style='font-family:Times'><spanstyle='mso-element:field-begin'></span>SEQ chapter \c<span style='mso-element:field-separator'></span></span><![endif]-->			<span style="font-family:Times">1</span><!--[if supportFields]><spanstyle='font-family:Times'><span style='mso-element:field-end'></span></span><![endif]-->			 <span style="font-family:Times">.</span><!--[if supportFields]><spanstyle='font-family:Times'><span style='mso-element:field-begin'></span>SEQfigure<span style='mso-element:field-separator'></span></span><![endif]-->			 <span style="font-family:Times">2</span><!--[if supportFields]><spanstyle='font-family:Times'><span style='mso-element:field-end'></span></span><![endif]-->			 <span style="font-family:Helvetica-Narrow"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </span></span>Calculating Physical Addresses</p>			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>XE&quot;Addresses:segmented&quot;<span style='mso-hide:none'> \z&quot;MASMBW.DOC-1088&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			</p>			<p class="MsoNormal">A 20-bit physical address may actually be specified by 4,096 equivalent<br>			<i style="mso-bidi-font-style:normal">segment</i><b style="mso-bidi-font-weight:normal">:</b><i style="mso-bidi-font-style:normal">offset</i> addresses. For example, the addresses 0000:F800, 0F00:0800, and 0F80:0000 all refer to the same physical address 0F800.</p>			<h1 style="margin-left:0in">Language Components of MASM</h1>			<p class="MsoNormal">Programming with MASM requires that you understand the MASM concepts of reserved words, identifiers, predefined symbols, constants, expressions, operators, data types, registers, and statements. This section defines important terms and provides lists that summarize these topics. For detailed information, see Help or the <i style="mso-bidi-font-style:normal">Reference</i>.</p>			<h2 style="margin-left:0in">Reserved Words</h2>			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>XE&quot;Reserved words:described&quot;<span style='mso-hide:none'> \z&quot;MASMBW.DOC-1089&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			</p>			<p class="MsoNormal">A reserved word has a special meaning fixed by the language. You can use it only under certain conditions. Reserved words in MASM include:</p>			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>xe&quot;aa&quot; \z &quot;MASMBW.DOC-1469&quot;<![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			</p>			<p class="Lb1"><!--[if supportFields]><span style='mso-element:field-begin'></span>SYMBOL117 \f &quot;MSIcons&quot; \s 9.5 \h <![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<span style="mso-tab-count:1">&nbsp; </span>Instructions, which correspond to operations the processor can execute.</p>			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>xe&quot;aa&quot; \z &quot;MASMBW.DOC-1470&quot;<![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			</p>			<p class="Lb1"><!--[if supportFields]><span style='mso-element:field-begin'></span>SYMBOL117 \f &quot;MSIcons&quot; \s 9.5 \h <![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<span style="mso-tab-count:1">&nbsp; </span>Directives, which give commands to the assembler.</p>			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>xe&quot;aa&quot; \z &quot;MASMBW.DOC-1471&quot;<![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			</p>			<p class="Lb1"><!--[if supportFields]><span style='mso-element:field-begin'></span>SYMBOL117 \f &quot;MSIcons&quot; \s 9.5 \h <![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<span style="mso-tab-count:1">&nbsp; </span>Attributes, which provide a value for a field, such as segment alignment.</p>			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>xe&quot;aa&quot; \z &quot;MASMBW.DOC-1472&quot;<![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			</p>			<p class="Lb1"><!--[if supportFields]><span style='mso-element:field-begin'></span>SYMBOL117 \f &quot;MSIcons&quot; \s 9.5 \h <![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<span style="mso-tab-count:1">&nbsp; </span>Operators, which are used in expressions.</p>			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>xe&quot;aa&quot; \z &quot;MASMBW.DOC-1473&quot;<![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			</p>			<p class="Lb1"><!--[if supportFields]><span style='mso-element:field-begin'></span>SYMBOL117 \f &quot;MSIcons&quot; \s 9.5 \h <![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<span style="mso-tab-count:1">&nbsp; </span>Predefined symbols, which return information to your program.</p>			<p class="Le"><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>XE&quot;Symbols:predefined&quot;<span style='mso-hide:none'> \z&quot;MASMBW.DOC-1090&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;Predefined symbols:casesensitivity&quot;<span style='mso-hide:none'> \z &quot;MASMBW.DOC-1091&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;Case sensitivity:reservedwords&quot;<span style='mso-hide:none'> \z &quot;MASMBW.DOC-1092&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			</p>			<p class="MsoNormal">MASM reserved words are not case sensitive except for predefined symbols (see &#147;Predefined Symbols,&#148; later in this chapter).</p>			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>xe&quot;OPTION directive:NOKEYWORD&quot; \t &quot;See NOKEYWORD argument, OPTIONdirective&quot;<span style='mso-hide:none'> \z &quot;MASMBW.DOC-1093&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;NOKEYWORD argument, OPTIONdirective&quot;<span style='mso-hide:none'> \z &quot;MASMBW.DOC-1094&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			</p>			<p class="MsoNormal">The assembler generates an error if you use a reserved word as a variable, code label, or other identifier within your source code. However, if you need to use a reserved word for another purpose, the <b style="mso-bidi-font-weight:normal">OPTION NOKEYWORD</b> directive can selectively disable a word&#146;s status as a reserved word.</p>			<p class="MsoNormal">For example, to remove the <b style="mso-bidi-font-weight:normal">STR</b> instruction, the <b style="mso-bidi-font-weight:normal">MASK</b> operator, and the <b style="mso-bidi-font-weight:normal">NAME</b> directive from the set of words MASM recognizes as reserved, use this statement in the code segment of your program before the first reference to <b style="mso-bidi-font-weight:normal">STR</b>, <b style="mso-bidi-font-weight:normal">MASK</b>, or<b style="mso-bidi-font-weight:normal"> NAME</b>:</p>			<p class="Ex">OPTION NOKEYWORD:&lt;STR MASK NAME&gt;<br style="mso-special-character:line-break">			<![if !supportLineBreakNewLine]><br style="mso-special-character:line-break">			<![endif]></p>			<p class="MsoNormal">The section &#147;Using the OPTION Directive,&#148; later in this chapter, discusses the <b style="mso-bidi-font-weight:normal">OPTION</b> directive. Appendix D provides a complete list of MASM reserved words.</p>			<p class="MsoNormal">With the /Zm command-line option or <b style="mso-bidi-font-weight:normal">OPTION M510</b> in effect, MASM does not reserve any operators or instructions that do not apply to the current CPU mode. For example, you can use the symbol <span style='font-size:9.5pt;font-family:"Lucida Sans Typewriter"'>ENTER</span> when assembling under the default CPU mode but not under <b style="mso-bidi-font-weight:normal">.286</b> mode, since the 80186/486 processors recognize <span style='font-size:9.5pt;font-family:"Lucida Sans Typewriter"'>ENTER</span> as an instruction. The <b style="mso-bidi-font-weight:normal">USE32</b>, <b style="mso-bidi-font-weight:normal">FLAT</b>, <b style="mso-bidi-font-weight:normal">FAR32</b>, and <b style="mso-bidi-font-weight:normal">NEAR32</b> segment types and the 80386/486 register names are not keywords with processors other than the 80386/486.</p>			<h2 style="margin-left:0in">Identifiers</h2>			<p class="MsoNormal">An identifier is a name that you invent and attach to a definition. Identifiers can be symbols representing variables, constants, procedure names, code labels, segment names, and user-defined data types such as structures, unions, records, and types defined with <b style="mso-bidi-font-weight:normal">TYPEDEF</b>. Identifiers longer than 247 characters generate an error.</p>			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>XE&quot;Identifiers:naming restrictions&quot;<span style='mso-hide:none'> \z&quot;MASMBW.DOC-1095&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;Variables:namingrestrictions&quot;<span style='mso-hide:none'> \z &quot;MASMBW.DOC-1096&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;Naming restrictions&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1097&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>xe Symbols \t &quot;See alsoIdentifiers&quot;<span style='mso-hide:none'> \z &quot;MASMBW.DOC-1098&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>xe Scope \t &quot;See alsoVisibility&quot;<span style='mso-hide:none'> \z &quot;MASMBW.DOC-1099&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;Visibility:scope, within&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1100&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			</p>			<p class="MsoNormal">Certain restrictions limit the names you can use for identifiers. Follow these rules to define a name for an identifier:</p>			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>xe&quot;aa&quot; \z &quot;MASMBW.DOC-1474&quot;<![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			</p>			<p class="Lb1"><!--[if supportFields]><span style='mso-element:field-begin'></span>SYMBOL117 \f &quot;MSIcons&quot; \s 9.5 \h <![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<span style="mso-tab-count:1">&nbsp; </span>The first character of the identifier can be an alphabetic character (A&#150;Z) or any of these four characters: @ _ $ ?</p>			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>xe&quot;aa&quot; \z &quot;MASMBW.DOC-1475&quot;<![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			</p>			<p class="Lb1"><!--[if supportFields]><span style='mso-element:field-begin'></span>SYMBOL117 \f &quot;MSIcons&quot; \s 9.5 \h <![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<span style="mso-tab-count:1">&nbsp; </span>The other characters in the identifier can be any of the characters listed above or a decimal digit (0&#150;9).</p>			<p class="Le"><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>			<p class="MsoNormal">Avoid starting an identifier with the at sign (@), because MASM 6.1 predefines some special symbols starting with @ (see &#147;Predefined Symbols,&#148; following). Beginning an identifier with <span style="display:none;mso-hide:all">hidden</span>@ may also cause conflicts with future versions of the Macro Assembler.</p>			<p class="MsoNormal">The symbol<span style="letter-spacing:-1.75pt"> </span>&#151;<span style="letter-spacing:-1.75pt"> </span>and thus the identifier<span style="letter-spacing:-1.75pt"> </span>&#151;<span style="letter-spacing:-1.75pt"> </span>is visible as long as it remains within scope. (For more information about visibility and scope, see &#147;Sharing Symbols with Include Files&#148; in Chapter 8.)</p>			<h2 style="margin-left:0in">Predefined Symbols</h2>			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>XE&quot;Predefined symbols:case sensitivity&quot;<span style='mso-hide:none'> \z&quot;MASMBW.DOC-1101&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;Predefined symbols:(list)&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1102&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;Symbols:predefined&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1103&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;Case sensitivity:symbols,predefined&quot;<span style='mso-hide:none'> \z &quot;MASMBW.DOC-1104&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;ML:Command-lineoptions:/Cp&quot;<span style='mso-hide:none'> \z &quot;MASMBW.DOC-1105&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>xe &quot;Predefined equates&quot; \t&quot;See Predefined symbols&quot;<span style='mso-hide:none'> \z&quot;MASMBW.DOC-1106&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>xe &quot;Equates, predefined&quot; \t&quot;See Predefined symbols&quot;<span style='mso-hide:none'> \z&quot;MASMBW.DOC-1107&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;At sign (@):predefinedsymbols&quot;<span style='mso-hide:none'> \z &quot;MASMBW.DOC-1108&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;@ (at sign):predefinedsymbols&quot;<span style='mso-hide:none'> \z &quot;MASMBW.DOC-1109&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;/Cp command-line option,ML&quot;<span style='mso-hide:none'> \z &quot;MASMBW.DOC-1110&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			</p>			<p class="MsoNormal">The assembler includes a number of predefined symbols (also called predefined equates). You can use these symbol names at any point in your code to represent the equate value. For example, the predefined equate <span style="display:none;mso-hide:all">hidden</span><b style="mso-bidi-font-weight:normal">@FileName</b> represents the base name of the current file. If the current source file is TASK.ASM, the value of <span style="display:none;mso-hide:all">hidden</span><b style="mso-bidi-font-weight:normal">@FileName</b> is TASK. The MASM predefined symbols are listed according to the kinds of information they provide. Case is important only if the /Cp option is used. (For additional details, see Help on ML command-line options.)</p>			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>XE&quot;Segments:current&quot;<span style='mso-hide:none'> \z&quot;MASMBW.DOC-1111&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;Memory models:determining&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1112&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;Stacks:near&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1113&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;Stacks:far&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1114&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;Segments:size,determining&quot;<span style='mso-hide:none'> \z &quot;MASMBW.DOC-1115&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			</p>			<p class="MsoNormal">The predefined symbols for segment information include:</p>			<table border="0" cellspacing="0" cellpadding="0" style="margin-left:.4pt;border-collapse: collapse;mso-padding-alt:0in 0in 0in 0in">				<tr>					<td width="69" valign="top" style="width:51.75pt;padding:0in 0in 0in 0in">						<p class="Thf">Symbol</p>						<p class="Thf"></p>					</td>					<td width="395" valign="top" style="width:296.25pt;padding:0in 0in 0in 0in">						<p class="Th">Description</p>						<p class="Th"></p>					</td>					<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:  normal"></p>				</tr>				<tr>					<td width="464" colspan="2" valign="top" style="width:348.0pt;padding:0in 0in 0in 0in">						<div style="border:none;border-top:solid windowtext .75pt;padding:0in 0in 0in 0in">							<p class="Tr"></p>						</div>						<div style="border:none;border-top:solid windowtext .75pt;padding:0in 0in 0in 0in">							<p class="Tr"></p>						</div>					</td>					<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:  normal"></p>				</tr>				<tr>					<td width="69" valign="top" style="width:51.75pt;padding:0in 0in 0in 0in">						<p class="Tpf"><span style="display:none;mso-hide:all">hidden</span><b style="mso-bidi-font-weight:normal">@code</b></p>						<p class="Tpf"></p>					</td>					<td width="395" valign="top" style="width:296.25pt;padding:0in 0in 0in 0in">						<p class="Tp">Returns the name of the code segment.</p>						<p class="Tp"></p>					</td>					<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:  normal"><b style="mso-bidi-font-weight:normal"><o:p></o:p></b></p>				</tr>				<tr>					<td width="69" valign="top" style="width:51.75pt;padding:0in 0in 0in 0in">						<p class="Tpf"><span style="display:none;mso-hide:all">hidden</span><b style="mso-bidi-font-weight:normal">@CodeSize</b></p>						<p class="Tpf"></p>					</td>					<td width="395" valign="top" style="width:296.25pt;padding:0in 0in 0in 0in">						<p class="Tp">Returns an integer representing the default code distance.</p>						<p class="Tp"></p>					</td>					<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:  normal"></p>				</tr>				<tr>					<td width="69" valign="top" style="width:51.75pt;padding:0in 0in 0in 0in">						<p class="Tpf"><span style="display:none;mso-hide:all">hidden</span><b style="mso-bidi-font-weight:normal">@CurSeg</b></p>						<p class="Tpf"></p>					</td>					<td width="395" valign="top" style="width:296.25pt;padding:0in 0in 0in 0in">						<p class="Tp">Returns the name of the current segment.</p>						<p class="Tp"></p>					</td>					<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:  normal"></p>				</tr>				<tr>					<td width="69" valign="top" style="width:51.75pt;padding:0in 0in 0in 0in">						<p class="Tpf"><span style="display:none;mso-hide:all">hidden</span><b style="mso-bidi-font-weight:normal">@data</b></p>						<p class="Tpf"></p>					</td>					<td width="395" valign="top" style="width:296.25pt;padding:0in 0in 0in 0in">						<p class="Tp">Expands to DGROUP.</p>						<p class="Tp"></p>					</td>					<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:  normal"></p>				</tr>				<tr>					<td width="69" valign="top" style="width:51.75pt;padding:0in 0in 0in 0in">						<p class="Tpf"><span style="display:none;mso-hide:all">hidden</span><b style="mso-bidi-font-weight:normal">@DataSize</b></p>						<p class="Tpf"></p>					</td>					<td width="395" valign="top" style="width:296.25pt;padding:0in 0in 0in 0in">						<p class="Tp">Returns an integer representing the default data distance.</p>						<p class="Tp"></p>					</td>					<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:  normal"></p>				</tr>				<tr>					<td width="69" valign="top" style="width:51.75pt;padding:0in 0in 0in 0in">						<p class="Tpf"><span style="display:none;mso-hide:all">hidden</span><b style="mso-bidi-font-weight:normal">@fardata</b></p>						<p class="Tpf"></p>					</td>					<td width="395" valign="top" style="width:296.25pt;padding:0in 0in 0in 0in">						<p class="Tp">Returns the name of the segment defined by the<span style="font-size:9.0pt"> <b style="mso-bidi-font-weight:normal">.FARDATA</b></span> directive.</p>						<p class="Tp"></p>					</td>					<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:  normal"></p>				</tr>				<tr>					<td width="69" valign="top" style="width:51.75pt;padding:0in 0in 0in 0in">						<p class="Tpf"><span style="display:none;mso-hide:all">hidden</span><b style="mso-bidi-font-weight:normal">@fardata?</b></p>						<p class="Tpf"></p>					</td>					<td width="395" valign="top" style="width:296.25pt;padding:0in 0in 0in 0in">						<p class="Tp">Returns the name of the segment defined by the<span style="font-size:9.0pt"> <b style="mso-bidi-font-weight:normal">.FARDATA?</b></span><b style="mso-bidi-font-weight:normal"><span style="font-size:10.5pt"> </span></b>directive.</p>						<p class="Tp"></p>					</td>					<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:  normal"></p>				</tr>				<tr>					<td width="69" valign="top" style="width:51.75pt;padding:0in 0in 0in 0in">						<p class="Tpf"><span style="display:none;mso-hide:all">hidden</span><b style="mso-bidi-font-weight:normal">@Model</b></p>						<p class="Tpf"></p>					</td>					<td width="395" valign="top" style="width:296.25pt;padding:0in 0in 0in 0in">						<p class="Tp">Returns the selected memory model.</p>						<p class="Tp"></p>					</td>					<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:  normal"></p>				</tr>				<tr>					<td width="69" valign="top" style="width:51.75pt;padding:0in 0in 0in 0in">						<p class="Tpf"><span style="display:none;mso-hide:all">hidden</span><b style="mso-bidi-font-weight:normal">@stack</b></p>						<p class="Tpf"></p>					</td>					<td width="395" valign="top" style="width:296.25pt;padding:0in 0in 0in 0in">						<p class="Tp">Expands to DGROUP for near stacks or STACK for far stacks. (See &#147;Creating a Stack&#148; in Chapter 2.)</p>						<p class="Tp"></p>					</td>					<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:  normal"></p>				</tr>				<tr>					<td width="69" valign="top" style="width:51.75pt;padding:0in 0in 0in 0in">						<p class="Tpf"><span style="display:none;mso-hide:all">hidden</span><b style="mso-bidi-font-weight:normal">@WordSize</b></p>						<p class="Tpf"></p>					</td>					<td width="395" valign="top" style="width:296.25pt;padding:0in 0in 0in 0in">						<p class="Tp">Provides the size attribute of the current segment.</p>						<p class="Tp"></p>					</td>					<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:  normal"></p>				</tr>			</table>			<p class="Le"><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>XE&quot;@ (at sign):predefined symbols&quot;<span style='mso-hide:none'> \z&quot;MASMBW.DOC-1116&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;Symbols:predefined&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1117&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;At sign (@):predefinedsymbols&quot;<span style='mso-hide:none'> \z &quot;MASMBW.DOC-1118&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;Environment:variables:returningvalues of&quot;<span style='mso-hide:none'> \z &quot;MASMBW.DOC-1119&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;Variables:environment&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1120&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;Processors:modes,determining&quot;<span style='mso-hide:none'> \z &quot;MASMBW.DOC-1121&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			</p>			<p class="MsoNormal">The predefined symbols for environment information include:</p>			<table border="0" cellspacing="0" cellpadding="0" style="margin-left:.4pt;border-collapse: collapse;mso-padding-alt:0in 0in 0in 0in">				<tr>					<td width="69" valign="top" style="width:51.7pt;padding:0in 0in 0in 0in">						<p class="Thf">Symbol</p>						<p class="Thf"></p>					</td>					<td width="395" valign="top" style="width:296.3pt;padding:0in 0in 0in 0in">						<p class="Th">Description</p>						<p class="Th"></p>					</td>					<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:  normal"></p>				</tr>				<tr>					<td width="464" colspan="2" valign="top" style="width:348.0pt;padding:0in 0in 0in 0in">						<div style="border:none;border-top:solid windowtext .75pt;padding:0in 0in 0in 0in">							<p class="Tr"></p>						</div>						<div style="border:none;border-top:solid windowtext .75pt;padding:0in 0in 0in 0in">							<p class="Tr"></p>						</div>					</td>					<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:  normal"></p>				</tr>				<tr>					<td width="69" valign="top" style="width:51.7pt;padding:0in 0in 0in 0in">						<p class="Tpf"><span style="display:none;mso-hide:all">hidden</span><b style="mso-bidi-font-weight:normal">@Cpu</b></p>						<p class="Tpf"></p>					</td>					<td width="395" valign="top" style="width:296.3pt;padding:0in 0in 0in 0in">						<p class="Tp">Contains a bit mask specifying the processor mode.</p>						<p class="Tp"></p>					</td>					<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:  normal"><b style="mso-bidi-font-weight:normal"><o:p></o:p></b></p>				</tr>				<tr>					<td width="69" valign="top" style="width:51.7pt;padding:0in 0in 0in 0in">						<p class="Tpf"><span style="display:none;mso-hide:all">hidden</span><b style="mso-bidi-font-weight:normal">@Environ</b></p>						<p class="Tpf"></p>					</td>					<td width="395" valign="top" style="width:296.3pt;padding:0in 0in 0in 0in">						<p class="Tp">Returns values of environment variables during assembly.</p>						<p class="Tp"></p>					</td>					<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:  normal"></p>				</tr>				<tr>					<td width="69" valign="top" style="width:51.7pt;padding:0in 0in 0in 0in">						<p class="Tpf"><span style="display:none;mso-hide:all">hidden</span><b style="mso-bidi-font-weight:normal">@Interface</b></p>						<p class="Tpf"></p>					</td>					<td width="395" valign="top" style="width:296.3pt;padding:0in 0in 0in 0in">						<p class="Tp">Contains information about the language parameters.</p>						<p class="Tp"></p>					</td>					<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:  normal"></p>				</tr>				<tr>					<td width="69" valign="top" style="width:51.7pt;padding:0in 0in 0in 0in">						<p class="Tpf"><span style="display:none;mso-hide:all">hidden</span><b style="mso-bidi-font-weight:normal">@Version</b></p>						<p class="Tpf"></p>					</td>					<td width="395" valign="top" style="width:296.3pt;padding:0in 0in 0in 0in">						<p class="Tp">Represents the text equivalent of the MASM version number. In MASM 6.1, this expands to 610.</p>						<p class="Tp"></p>					</td>					<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:  normal"></p>				</tr>			</table>			<p class="Le"><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>			<div style="mso-element:frame;mso-element-wrap:around;mso-height-rule:exactly">				<table cellspacing="0" cellpadding="0" hspace="0" vspace="0" align="left">					<tr>						<td valign="top" align="left" style="padding-top:0in;padding-right:9.0pt;  padding-bottom:0in;padding-left:9.0pt">							<p class="Pb" style="margin-left:0in"><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>						</td>					</tr>				</table>			</div>			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>XE&quot;System date&quot; \z &quot;MASMBW.DOC-1122&quot;<![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;System time&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1123&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			</p>			<p class="MsoNormal">The predefined symbols for date and time information include:</p>			<table border="0" cellspacing="0" cellpadding="0" style="margin-left:.4pt;border-collapse: collapse;mso-padding-alt:0in 0in 0in 0in">				<tr>					<td width="69" valign="top" style="width:51.7pt;padding:0in 0in 0in 0in">						<p class="Thf">Symbol</p>						<p class="Thf"></p>					</td>					<td width="395" valign="top" style="width:296.3pt;padding:0in 0in 0in 0in">						<p class="Th">Description</p>						<p class="Th"></p>					</td>					<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:  normal"></p>				</tr>				<tr>					<td width="464" colspan="2" valign="top" style="width:348.0pt;padding:0in 0in 0in 0in">						<div style="border:none;border-top:solid windowtext .75pt;padding:0in 0in 0in 0in">							<p class="Tr"></p>						</div>						<div style="border:none;border-top:solid windowtext .75pt;padding:0in 0in 0in 0in">							<p class="Tr"></p>						</div>					</td>					<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:  normal"></p>				</tr>				<tr>					<td width="69" valign="top" style="width:51.7pt;padding:0in 0in 0in 0in">						<p class="Tpf"><span style="display:none;mso-hide:all">hidden</span><b style="mso-bidi-font-weight:normal">@Date</b></p>						<p class="Tpf"></p>					</td>					<td width="395" valign="top" style="width:296.3pt;padding:0in 0in 0in 0in">						<p class="Tp">Supplies the current system date during assembly.</p>						<p class="Tp"></p>					</td>					<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:  normal"><b style="mso-bidi-font-weight:normal"><o:p></o:p></b></p>				</tr>				<tr>					<td width="69" valign="top" style="width:51.7pt;padding:0in 0in 0in 0in">						<p class="Tpf"><span style="display:none;mso-hide:all">hidden</span><b style="mso-bidi-font-weight:normal">@Time</b></p>						<p class="Tpf"></p>					</td>					<td width="395" valign="top" style="width:296.3pt;padding:0in 0in 0in 0in">						<p class="Tp">Supplies the current system time during assembly.</p>						<p class="Tp"></p>					</td>					<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:  normal"></p>				</tr>			</table>			<p class="Le"><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>XE&quot;Files:naming&quot;<span style='mso-hide:none'> \z&quot;MASMBW.DOC-1124&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;Files:line numbers&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1125&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			</p>			<p class="MsoNormal">The predefined symbols for file information include:</p>			<table border="0" cellspacing="0" cellpadding="0" style="margin-left:.4pt;border-collapse: collapse;mso-padding-alt:0in 0in 0in 0in">				<tr style="mso-row-margin-right:.75pt">					<td width="69" valign="top" style="width:52.0pt;padding:0in 0in 0in 0in">						<p class="Thf">Symbol</p>						<p class="Thf"></p>					</td>					<td width="394" valign="top" style="width:295.25pt;padding:0in 0in 0in 0in">						<p class="Th">Description</p>						<p class="Th"></p>					</td>					<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:  normal"></p>					<td style="mso-cell-special:placeholder;border:none;padding:0in 0in 0in 0in" width="1">						<p class="MsoNormal">&nbsp;</td>				</tr>				<tr>					<td width="464" colspan="3" valign="top" style="width:348.0pt;padding:0in 0in 0in 0in">						<div style="border:none;border-top:solid windowtext .75pt;padding:0in 0in 0in 0in">							<p class="Tr"></p>						</div>						<div style="border:none;border-top:solid windowtext .75pt;padding:0in 0in 0in 0in">							<p class="Tr"></p>						</div>					</td>					<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:  normal"></p>				</tr>				<tr style="mso-row-margin-right:.75pt">					<td width="69" valign="top" style="width:52.0pt;padding:0in 0in 0in 0in">						<p class="Tpf"><span style="display:none;mso-hide:all">hidden</span><b style="mso-bidi-font-weight:normal">@FileCur</b></p>						<p class="Tpf"></p>					</td>					<td width="394" valign="top" style="width:295.25pt;padding:0in 0in 0in 0in">						<p class="Tp">Names the current file (base and suffix).</p>						<p class="Tp"></p>					</td>					<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:  normal"><b style="mso-bidi-font-weight:normal"><o:p></o:p></b></p>					<td style="mso-cell-special:placeholder;border:none;padding:0in 0in 0in 0in" width="1">						<p class="MsoNormal">&nbsp;</td>				</tr>				<tr style="mso-row-margin-right:.75pt">					<td width="69" valign="top" style="width:52.0pt;padding:0in 0in 0in 0in">						<p class="Tpf"><span style="display:none;mso-hide:all">hidden</span><b style="mso-bidi-font-weight:normal">@FileName</b></p>						<p class="Tpf"></p>					</td>					<td width="394" valign="top" style="width:295.25pt;padding:0in 0in 0in 0in">						<p class="Tp">Names the base name of the main file being assembled as it appears on the command line.</p>						<p class="Tp"></p>					</td>					<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:  normal"></p>					<td style="mso-cell-special:placeholder;border:none;padding:0in 0in 0in 0in" width="1">						<p class="MsoNormal">&nbsp;</td>				</tr>				<tr style="mso-row-margin-right:.75pt">					<td width="69" valign="top" style="width:52.0pt;padding:0in 0in 0in 0in">						<p class="Tpf"><span style="display:none;mso-hide:all">hidden</span><b style="mso-bidi-font-weight:normal">@Line</b></p>						<p class="Tpf"></p>					</td>					<td width="394" valign="top" style="width:295.25pt;padding:0in 0in 0in 0in">						<p class="Tp">Gives the source line number in the current file.</p>						<p class="Tp"></p>					</td>					<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:  normal"></p>					<td style="mso-cell-special:placeholder;border:none;padding:0in 0in 0in 0in" width="1">						<p class="MsoNormal">&nbsp;</td>				</tr>			</table>			<p class="Le"><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>xe&quot;Strings:predefined functions for macros&quot; \t &quot;See alsoPredefined string functions&quot;<span style='mso-hide:none'> \z&quot;MASMBW.DOC-1126&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;Symbols:predefined&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1127&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;Macros:predefined stringfunctions&quot;<span style='mso-hide:none'> \z &quot;MASMBW.DOC-1128&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;Strings:predefined functionsfor macros&quot;<span style='mso-hide:none'> \z &quot;MASMBW.DOC-1129&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;Predefined functions formacros&quot;<span style='mso-hide:none'> \z &quot;MASMBW.DOC-1130&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			</p>			<p class="MsoNormal">The predefined symbols for macro string manipulation include:</p>			<table border="0" cellspacing="0" cellpadding="0" style="margin-left:.4pt;border-collapse: collapse;mso-padding-alt:0in 0in 0in 0in">				<tr>					<td width="69" valign="top" style="width:51.7pt;padding:0in 0in 0in 0in">						<p class="Thf">Symbol</p>						<p class="Thf"></p>					</td>					<td width="395" valign="top" style="width:296.3pt;padding:0in 0in 0in 0in">						<p class="Th">Description</p>						<p class="Th"></p>					</td>					<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:  normal"></p>				</tr>				<tr>					<td width="464" colspan="2" valign="top" style="width:348.0pt;padding:0in 0in 0in 0in">						<div style="border:none;border-top:solid windowtext .75pt;padding:0in 0in 0in 0in">							<p class="Tr"></p>						</div>						<div style="border:none;border-top:solid windowtext .75pt;padding:0in 0in 0in 0in">							<p class="Tr"></p>						</div>					</td>					<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:  normal"></p>				</tr>				<tr>					<td width="69" valign="top" style="width:51.7pt;padding:0in 0in 0in 0in">						<p class="Tpf"><span style="display:none;mso-hide:all">hidden</span><b style="mso-bidi-font-weight:normal">@CatStr</b></p>						<p class="Tpf"></p>					</td>					<td width="395" valign="top" style="width:296.3pt;padding:0in 0in 0in 0in">						<p class="Tp">Returns concatenation of two strings.</p>						<p class="Tp"></p>					</td>					<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:  normal"><b style="mso-bidi-font-weight:normal"><o:p></o:p></b></p>				</tr>				<tr>					<td width="69" valign="top" style="width:51.7pt;padding:0in 0in 0in 0in">						<p class="Tpf"><span style="display:none;mso-hide:all">hidden</span><b style="mso-bidi-font-weight:normal">@InStr</b></p>						<p class="Tpf"></p>					</td>					<td width="395" valign="top" style="width:296.3pt;padding:0in 0in 0in 0in">						<p class="Tp">Returns the starting position of a string within another string.</p>						<p class="Tp"></p>					</td>					<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:  normal"></p>				</tr>				<tr>					<td width="69" valign="top" style="width:51.7pt;padding:0in 0in 0in 0in">						<p class="Tpf"><span style="display:none;mso-hide:all">hidden</span><b style="mso-bidi-font-weight:normal">@SizeStr</b></p>						<p class="Tpf"></p>					</td>					<td width="395" valign="top" style="width:296.3pt;padding:0in 0in 0in 0in">						<p class="Tp">Returns the length of a given string.</p>						<p class="Tp"></p>					</td>					<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:  normal"></p>				</tr>				<tr>					<td width="69" valign="top" style="width:51.7pt;padding:0in 0in 0in 0in">						<p class="Tpf"><span style="display:none;mso-hide:all">hidden</span><b style="mso-bidi-font-weight:normal">@SubStr</b></p>						<p class="Tpf"></p>					</td>					<td width="395" valign="top" style="width:296.3pt;padding:0in 0in 0in 0in">						<p class="Tp">Returns substring from a given string.</p>						<p class="Tp"></p>					</td>					<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:  normal"></p>				</tr>			</table>			<p class="Le"><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>			<h2 style="margin-left:0in">Integer Constants and Constant Expressions</h2>			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>XE&quot;Constants:defined&quot;<span style='mso-hide:none'> \z&quot;MASMBW.DOC-1131&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;Constants:integer&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1132&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;Integers:constants,defining&quot;<span style='mso-hide:none'> \z &quot;MASMBW.DOC-1133&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;Integers:radix specifiersfor&quot;<span style='mso-hide:none'> \z &quot;MASMBW.DOC-1134&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;Radix specifiers:(list)&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1135&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;Case sensitivity:radixspecifiers&quot;<span style='mso-hide:none'> \z &quot;MASMBW.DOC-1136&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;.RADIX directive&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1137&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;Directives:.RADIX&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1138&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			</p>			<p class="MsoNormal">An integer constant is a series of one or more numerals followed by an optional radix specifier. For example, in these statements</p>			<p class="Ex"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>mov<span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp; </span>ax, 25<br>			<span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>mov<span style="mso-spacerun:yes">&nbsp;&nbsp;&nbsp;&nbsp; </span>bx, 0B3h<br style="mso-special-character:line-break">			<![if !supportLineBreakNewLine]><br style="mso-special-character:line-break">			<![endif]></p>			<p class="MsoNormal">the numbers <span style='font-size:9.5pt;font-family:"Lucida Sans Typewriter"'>25</span> and <span style='font-size:9.5pt;font-family:"Lucida Sans Typewriter"'>0B3h</span> are integer constants. The <span style='font-size:9.5pt;font-family:"Lucida Sans Typewriter"'>h</span> appended to <span style='font-size:9.5pt;font-family:"Lucida Sans Typewriter"'>0B3</span> is a radix specifier. The specifiers are:</p>			<p class="index"><!--[if supportFields]><span style='font-size:9.5pt;font-family:"Lucida Sans Typewriter"'><span style='mso-element:field-begin'></span>xe&quot;aa&quot; \z &quot;MASMBW.DOC-1476&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='font-size:9.5pt;font-family:"Lucida Sans Typewriter"'><spanstyle='mso-element:field-end'></span></span><![endif]-->			</p>			<p class="Lb1"><!--[if supportFields]><span style='font-size:9.5pt;font-family:"Lucida Sans Typewriter"'><span style='mso-element:field-begin'></span>SYMBOL117 \f &quot;MSIcons&quot; \s 9.5 \h </span><![endif]-->			<!--[if supportFields]><spanstyle='font-size:9.5pt;font-family:"Lucida Sans Typewriter"'><spanstyle='mso-element:field-end'></span></span><![endif]-->			<span style='font-size:9.5pt;font-family:"Lucida Sans Typewriter"'><span style="mso-tab-count:1"></span>y</span> for binary (or <span style='font-size:9.5pt;font-family:"Lucida Sans Typewriter"'>b</span> if the default radix is not hexadecimal)</p>			<p class="index"><!--[if supportFields]><span style='font-size:9.5pt;font-family:"Lucida Sans Typewriter"'><span style='mso-element:field-begin'></span>xe&quot;aa&quot; \z &quot;MASMBW.DOC-1477&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='font-size:9.5pt;font-family:"Lucida Sans Typewriter"'><spanstyle='mso-element:field-end'></span></span><![endif]-->			</p>			<p class="Lb1"><!--[if supportFields]><span style='font-size:9.5pt;font-family:"Lucida Sans Typewriter"'><span style='mso-element:field-begin'></span>SYMBOL117 \f &quot;MSIcons&quot; \s 9.5 \h </span><![endif]-->			<!--[if supportFields]><spanstyle='font-size:9.5pt;font-family:"Lucida Sans Typewriter"'><spanstyle='mso-element:field-end'></span></span><![endif]-->			<span style='font-size:9.5pt;font-family:"Lucida Sans Typewriter"'><span style="mso-tab-count:1"></span>o</span> or <span style='font-size:9.5pt;font-family:"Lucida Sans Typewriter"'>q</span> for octal</p>			<p class="index"><!--[if supportFields]><span style='font-size:9.5pt;font-family:"Lucida Sans Typewriter"'><span style='mso-element:field-begin'></span>xe&quot;aa&quot; \z &quot;MASMBW.DOC-1478&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='font-size:9.5pt;font-family:"Lucida Sans Typewriter"'><spanstyle='mso-element:field-end'></span></span><![endif]-->			</p>			<p class="Lb1"><!--[if supportFields]><span style='font-size:9.5pt;font-family:"Lucida Sans Typewriter"'><span style='mso-element:field-begin'></span>SYMBOL117 \f &quot;MSIcons&quot; \s 9.5 \h </span><![endif]-->			<!--[if supportFields]><spanstyle='font-size:9.5pt;font-family:"Lucida Sans Typewriter"'><spanstyle='mso-element:field-end'></span></span><![endif]-->			<span style='font-size:9.5pt;font-family:"Lucida Sans Typewriter"'><span style="mso-tab-count:1"></span>t</span> for decimal (or <span style='font-size:9.5pt;font-family:"Lucida Sans Typewriter"'>d</span> if the default radix is not hexadecimal)</p>			<p class="index"><!--[if supportFields]><span style='font-size:9.5pt;font-family:"Lucida Sans Typewriter"'><span style='mso-element:field-begin'></span>xe&quot;aa&quot; \z &quot;MASMBW.DOC-1479&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='font-size:9.5pt;font-family:"Lucida Sans Typewriter"'><spanstyle='mso-element:field-end'></span></span><![endif]-->			</p>			<p class="Lb1"><!--[if supportFields]><span style='font-size:9.5pt;font-family:"Lucida Sans Typewriter"'><span style='mso-element:field-begin'></span>SYMBOL117 \f &quot;MSIcons&quot; \s 9.5 \h </span><![endif]-->			<!--[if supportFields]><spanstyle='font-size:9.5pt;font-family:"Lucida Sans Typewriter"'><spanstyle='mso-element:field-end'></span></span><![endif]-->			<span style='font-size:9.5pt;font-family:"Lucida Sans Typewriter"'><span style="mso-tab-count:1"></span>h</span> for hexadecimal</p>			<p class="Le"><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>			<p class="MsoNormal">Radix specifiers can be either uppercase or lowercase letters; sample code in this book is in lowercase. If you do not specify a radix, the assembler interprets the integer according to the current radix. The default radix is decimal, but you can change the default with the <b style="mso-bidi-font-weight:normal">.RADIX</b> directive.</p>			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>XE&quot;Integers:hexadecimal&quot;<span style='mso-hide:none'> \z&quot;MASMBW.DOC-1139&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;Expressions:constant&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1140&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			</p>			<p class="MsoNormal">Hexadecimal numbers must always start with a decimal digit (0&#150;9). If necessary, add a leading zero to distinguish between symbols and hexadecimal numbers that start with a letter. For example, MASM interprets <span style='font-size:9.5pt;font-family:"Lucida Sans Typewriter"'>ABCh</span> as an identifier. The hexadecimal digits A through F can be either uppercase or lowercase letters. Sample code in this book is in uppercase letters.</p>			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>XE&quot;Constants:expressions&quot;<span style='mso-hide:none'> \z&quot;MASMBW.DOC-1141&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;Constants:size of&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1142&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;Operators:expressions, in&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1143&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			</p>			<p class="MsoNormal">Constant expressions contain integer constants and (optionally) operators such as shift, logical, and arithmetic operators. The assembler evaluates constant expressions at assembly time. (In addition to constants, expressions can contain labels, types, registers, and their attributes.) Constant expressions do not change value during program execution.</p>			<h4>Symbolic Integer Constants</h4>			<p class="MsoNormal">You can define symbolic integer constants with either of the data assignment directives, <b style="mso-bidi-font-weight:normal">EQU</b> or the equal sign (<b style="mso-bidi-font-weight:normal">=</b>). These directives assign values to symbols during assembly, not during program execution. Symbolic constants are used to assign names to constant values. You can use a symbol with an assigned value in place of an immediate operand. For example, instead of referring in your code to keyboard scan codes with numbers such as 30 or 48, you can create more recognizable symbols:</p>			<p class="Ex">SCAN_A<span style="mso-spacerun: yes">&nbsp; </span>EQU<span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </span>30<br>			SCAN_B<span style="mso-spacerun: yes">&nbsp; </span>EQU<span style="mso-spacerun:yes">&nbsp;&nbsp;&nbsp; </span>48<br style="mso-special-character:line-break">			<![if !supportLineBreakNewLine]><br style="mso-special-character:line-break">			<![endif]></p>			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>XE&quot;Constants:symbolic&quot;<span style='mso-hide:none'> \z&quot;MASMBW.DOC-1144&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;Integers:constants,defining&quot;<span style='mso-hide:none'> \z &quot;MASMBW.DOC-1145&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;EQU directive&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1146&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;Equal directive (=)&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1147&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;Directives:EQU&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1148&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;Directives:= (equal)&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1149&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			</p>			<p class="MsoNormal">then use the appropriate symbol in your program rather than the number. Using symbolic constants instead of undescriptive numbers makes your code more readable and easier to maintain. The assembler does not allocate data storage when you use either <b style="mso-bidi-font-weight:normal">EQU</b> or <b style="mso-bidi-font-weight:normal">=</b>. It simply replaces each occurrence of the symbol with the value of the expression.</p>			<p class="MsoNormal">The directives <b style="mso-bidi-font-weight:normal">EQU</b> and <b style="mso-bidi-font-weight:normal">=</b> have slightly different purposes. Integers defined with the <b style="mso-bidi-font-weight:normal">=</b> directive can be redefined with another value in your source code, but those defined with <b style="mso-bidi-font-weight:normal">EQU</b> cannot. Once you&#146;ve defined a symbolic constant with the <b style="mso-bidi-font-weight:normal">EQU</b> directive, attempting to redefine it generates an error. The syntax is<a name="a"></a>:</p>			<p class="Syn"><i style="mso-bidi-font-style:normal">symbol</i> <b style="mso-bidi-font-weight:normal">EQU</b> <i style="mso-bidi-font-style:normal">expression</i></p>			<p class="MsoNormal">The <i style="mso-bidi-font-style:normal">symbol</i> is a unique name of your choice, except for words reserved by MASM. The <i style="mso-bidi-font-style:normal">expression</i> can be an integer, a constant expression, a one- or two-character string constant (four-character on the 80386/486), or an expression that evaluates to an address. Symbolic constants let you change a constant value used throughout your source code by merely altering <i style="mso-bidi-font-style:normal">expression</i> in the definition. This removes the potential for error and saves you the inconvenience of having to find and replace each occurrence of the constant in your program.</p>			<div style="mso-element:frame;mso-element-wrap:around;mso-height-rule:exactly">				<table cellspacing="0" cellpadding="0" hspace="0" vspace="0" align="left">					<tr>						<td valign="top" align="left" style="padding-top:0in;padding-right:9.0pt;  padding-bottom:0in;padding-left:9.0pt">							<p class="Pb" style="margin-left:0in"><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>						</td>					</tr>				</table>			</div>			<p class="MsoNormal">The following example shows the correct use of <b style="mso-bidi-font-weight:normal">EQU</b> to define symbolic integers.</p>			<p class="Ex">column<span style="mso-spacerun: yes">&nbsp; </span>EQU<span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </span>80<span style="mso-spacerun:yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>; Constant -<span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </span>80<br>			row<span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp; </span>EQU<span style="mso-spacerun:yes">&nbsp;&nbsp;&nbsp; </span>25<span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>; Constant -<span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </span>25<br>			screen<span style="mso-spacerun: yes">&nbsp; </span>EQU<span style="mso-spacerun:yes">&nbsp;&nbsp;&nbsp; </span>column * row<span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>; Constant<span style="mso-spacerun: yes">&nbsp; </span>- 2000<br>			line<span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </span>EQU<span style="mso-spacerun:yes">&nbsp;&nbsp;&nbsp; </span>row<span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>; Constant -<span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </span>25<br>			<br>			<span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>.DATA<br>			<br>			<span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>.CODE<br>			<span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>.<br>			<span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>.<br>			<span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>.<br>			<span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>mov<span style="mso-spacerun:yes">&nbsp;&nbsp;&nbsp;&nbsp; </span>cx, column<br>			<span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>mov<span style="mso-spacerun:yes">&nbsp;&nbsp;&nbsp;&nbsp; </span>bx, line<br style="mso-special-character:line-break">			<![if !supportLineBreakNewLine]><br style="mso-special-character:line-break">			<![endif]></p>			<p class="MsoNormal">The value of a symbol defined with the <b style="mso-bidi-font-weight:normal">=</b> directive can be different at different places in the source code. However, a constant value is assigned during assembly for each use, and that value does not change at run time.</p>			<p class="MsoNormal">The syntax for the <b style="mso-bidi-font-weight:normal">=</b> directive is:</p>			<p class="MsoNormal"><i style="mso-bidi-font-style:normal">symbol = expression</i></p>			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>XE&quot;M510 argument, OPTION directive:expression word size, setting&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1150&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>xe &quot;OPTION directive:EXPR16&quot;\t &quot;See EXPR16 argument, OPTION directive&quot;<span style='mso-hide:none'>\z &quot;MASMBW.DOC-1151&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>xe &quot;OPTION directive:M510&quot; \t&quot;See M510 argument, OPTION directive&quot;<span style='mso-hide:none'> \z&quot;MASMBW.DOC-1152&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;Word size:default&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1153&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			</p>			<h4>Size of Constants<span style="mso-spacerun: yes">&nbsp; </span></h4>			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>XE&quot;Word size:expressions, in&quot;<span style='mso-hide:none'> \z&quot;MASMBW.DOC-1154&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>xe &quot;OPTION directive:M510&quot; \t&quot;See M510 argument, OPTION directive&quot;<span style='mso-hide:none'> \z&quot;MASMBW.DOC-1155&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>xe &quot;OPTION directive:EXPR16&quot;\t &quot;See EXPR16 argument, OPTION directive&quot;<span style='mso-hide:none'>\z &quot;MASMBW.DOC-1156&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>xe &quot;OPTION directive:EXPR32&quot;\t &quot;See EXPR32 argument, OPTION directive&quot;<span style='mso-hide:none'>\z &quot;MASMBW.DOC-1157&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;Expressions:word size&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1158&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			</p>			<p class="MsoNormal">The default word size for MASM 6.1 expressions is 32 bits. This behavior can be modified using <b style="mso-bidi-font-weight:normal">OPTION EXPR16</b> or <b style="mso-bidi-font-weight:normal">OPTION M510</b>. Both of these options set the expression word size to 16 bits, but <b style="mso-bidi-font-weight:normal">OPTION M510</b> affects other assembler behavior as well (see Appendix A).</p>			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>XE&quot;EXPR16 argument, OPTION directive&quot;<span style='mso-hide:none'> \z&quot;MASMBW.DOC-1159&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;EXPR32 argument, OPTIONdirective&quot;<span style='mso-hide:none'> \z &quot;MASMBW.DOC-1160&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			</p>			<p class="MsoNormal">It is illegal to change the expression word size once it has been set with <b style="mso-bidi-font-weight:normal">OPTION M510</b>, <b style="mso-bidi-font-weight:normal">OPTION EXPR16</b>, or <b style="mso-bidi-font-weight:normal">OPTION EXPR32</b>. However, you can repeat the same directive in your source code as often as you wish. You can place the same directive in every include file, for example.</p>			<h2 style="margin-left:0in">Operators</h2>			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>XE&quot;Operators:expressions, in&quot;<span style='mso-hide:none'> \z&quot;MASMBW.DOC-1161&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;Operators:instructions,compared to &quot;<span style='mso-hide:none'> \z &quot;MASMBW.DOC-1162&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			</p>			<p class="MsoNormal">Operators are used in expressions. The value of the expression is determined at assembly time and does not change when the program runs.</p>			<p class="MsoNormal">Operators should not be confused with processor instructions. The reserved<br>			word <b style="mso-bidi-font-weight:normal">ADD</b> is an instruction; the plus sign (+) is an operator. For example, <span style='font-size:9.5pt;font-family:"Lucida Sans Typewriter"'>Amount+2</span> illustrates a valid use of the plus operator (+). It tells the assembler to add 2 to the constant value <span style='font-size:9.5pt;font-family:"Lucida Sans Typewriter"'>Amount</span>, which might be a value or an address. Contrast this operation, which occurs at assembly time, with the processor&#146;s <b style="mso-bidi-font-weight:normal">ADD</b> instruction. <b style="mso-bidi-font-weight:normal">ADD</b> tells the processor at run time to add two numbers and store the result.</p>			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>XE&quot;Operators:precedence&quot;<span style='mso-hide:none'> \z&quot;MASMBW.DOC-1163&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;Expressions:order ofevaluation&quot;<span style='mso-hide:none'> \z &quot;MASMBW.DOC-1164&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;Precedence:operators&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1165&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			</p>			<p class="MsoNormal">The assembler evaluates expressions that contain more than one operator according to the following rules:</p>			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>xe&quot;aa&quot; \z &quot;MASMBW.DOC-1480&quot;<![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			</p>			<p class="Lb1"><!--[if supportFields]><span style='mso-element:field-begin'></span>SYMBOL117 \f &quot;MSIcons&quot; \s 9.5 \h <![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<span style="mso-tab-count:1">&nbsp; </span>Operations in parentheses are performed before adjacent operations.</p>			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>xe&quot;aa&quot; \z &quot;MASMBW.DOC-1481&quot;<![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			</p>			<p class="Lb1"><!--[if supportFields]><span style='mso-element:field-begin'></span>SYMBOL117 \f &quot;MSIcons&quot; \s 9.5 \h <![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<span style="mso-tab-count:1">&nbsp; </span>Binary operations of highest precedence are performed first.</p>			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>xe&quot;aa&quot; \z &quot;MASMBW.DOC-1482&quot;<![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			</p>			<p class="Lb1"><!--[if supportFields]><span style='mso-element:field-begin'></span>SYMBOL117 \f &quot;MSIcons&quot; \s 9.5 \h <![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<span style="mso-tab-count:1">&nbsp; </span>Operations of equal precedence are performed from left to right.</p>			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>xe&quot;aa&quot; \z &quot;MASMBW.DOC-1483&quot;<![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			</p>			<p class="Lb1"><!--[if supportFields]><span style='mso-element:field-begin'></span>SYMBOL117 \f &quot;MSIcons&quot; \s 9.5 \h <![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<span style="mso-tab-count:1">&nbsp; </span>Unary operations of equal precedence are performed right to left.</p>			<p class="Le"><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>			<p class="MsoNormal">Table <span style='mso-field-code:"seq chapter \\c"'>1</span>.3 lists the order of precedence for all operators. Operators on the same line have equal precedence.</p>			<p class="Tt" style="tab-stops:348.0pt">Table <!--[if supportFields]><spanstyle='font-family:Times'><span style='mso-element:field-begin'></span>SEQchapter \c<span style='mso-element:field-separator'></span></span><![endif]-->			<span style="font-family:Times">1</span><!--[if supportFields]><spanstyle='font-family:Times'><span style='mso-element:field-end'></span></span><![endif]-->			 <span style="font-family:Times">.</span><!--[if supportFields]><spanstyle='font-family:Times'><span style='mso-element:field-begin'></span>SEQtable<span style='mso-element:field-separator'></span></span><![endif]-->			 <span style="font-family:Times">3</span><!--[if supportFields]><spanstyle='font-family:Times'><span style='mso-element:field-end'></span></span><![endif]-->			 <span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </span>Operator Precedence</p>			<table border="0" cellspacing="0" cellpadding="0" style="margin-left:.4pt;border-collapse: collapse;mso-padding-alt:0in 0in 0in 0in">				<tr>					<td width="464" colspan="2" valign="top" style="width:348.0pt;padding:0in 0in 0in 0in">						<div style="border:none;border-top:solid windowtext .75pt;padding:0in 0in 0in 0in">							<p class="Tr"></p>						</div>						<div style="border:none;border-top:solid windowtext .75pt;padding:0in 0in 0in 0in">							<p class="Tr"></p>						</div>					</td>					<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:  normal"><b style="mso-bidi-font-weight:normal"><o:p></o:p></b></p>				</tr>				<tr>					<td width="70" valign="top" style="width:52.5pt;padding:0in 0in 0in 0in">						<p class="Thf">Precedence</p>						<p class="Thf"></p>					</td>					<td width="394" valign="top" style="width:295.5pt;padding:0in 0in 0in 0in">						<p class="Th">Operators</p>						<p class="Th"></p>					</td>					<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:  normal"></p>				</tr>				<tr>					<td width="464" colspan="2" valign="top" style="width:348.0pt;padding:0in 0in 0in 0in">						<div style="border:none;border-top:solid windowtext .75pt;padding:0in 0in 0in 0in">							<p class="Tr"></p>						</div>						<div style="border:none;border-top:solid windowtext .75pt;padding:0in 0in 0in 0in">							<p class="Tr"></p>						</div>					</td>					<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:  normal"></p>				</tr>				<tr>					<td width="70" valign="top" style="width:52.5pt;padding:0in 0in 0in 0in">						<p class="Tpf">1</p>						<p class="Tpf"></p>					</td>					<td width="394" valign="top" style="width:295.5pt;padding:0in 0in 0in 0in">						<p class="Tp"><b style="mso-bidi-font-weight:normal">( )</b>, <b style="mso-bidi-font-weight:normal">[ ]</b></p>						<p class="Tp"></p>					</td>					<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:  normal"><b style="mso-bidi-font-weight:normal"><o:p></o:p></b></p>				</tr>				<tr>					<td width="70" valign="top" style="width:52.5pt;padding:0in 0in 0in 0in">						<p class="Tpf">2</p>						<p class="Tpf"></p>					</td>					<td width="394" valign="top" style="width:295.5pt;padding:0in 0in 0in 0in">						<p class="Tp"><b style="mso-bidi-font-weight:normal"><span style="font-size:  8.0pt">LENGTH</span></b>, <b style="mso-bidi-font-weight:normal"><span style="font-size:8.0pt">SIZE</span></b>, <b style="mso-bidi-font-weight:normal"><span style="font-size:8.0pt">WIDTH</span></b>, <b style="mso-bidi-font-weight:  normal"><span style="font-size:8.0pt">MASK, LENGTHOF, SIZEOF</span></b></p>						<p class="Tp"></p>					</td>					<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:  normal"></p>				</tr>				<tr>					<td width="70" valign="top" style="width:52.5pt;padding:0in 0in 0in 0in">						<p class="Tpf">3</p>						<p class="Tpf"></p>					</td>					<td width="394" valign="top" style="width:295.5pt;padding:0in 0in 0in 0in">						<p class="Tp"><b style="mso-bidi-font-weight:normal">.</b> (structure-field-name operator)</p>						<p class="Tp"></p>					</td>					<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:  normal"></p>				</tr>				<tr>					<td width="70" valign="top" style="width:52.5pt;padding:0in 0in 0in 0in">						<p class="Tpf">4</p>						<p class="Tpf"></p>					</td>					<td width="394" valign="top" style="width:295.5pt;padding:0in 0in 0in 0in">						<p class="Tp"><b style="mso-bidi-font-weight:normal">:</b> (segment-override operator), <b style="mso-bidi-font-weight:normal"><span style="font-size:  8.0pt">PTR</span></b></p>						<p class="Tp"></p>					</td>					<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:  normal"></p>				</tr>				<tr>					<td width="70" valign="top" style="width:52.5pt;padding:0in 0in 0in 0in">						<p class="Tpf">5</p>						<p class="Tpf"></p>					</td>					<td width="394" valign="top" style="width:295.5pt;padding:0in 0in 0in 0in">						<p class="Tp"><b style="mso-bidi-font-weight:normal"><span style="font-size:  8.0pt">LROFFSET</span></b>, <b style="mso-bidi-font-weight:normal"><span style="font-size:8.0pt">OFFSET</span></b>, <b style="mso-bidi-font-weight:  normal"><span style="font-size:8.0pt">SEG</span></b>, <b style="mso-bidi-font-weight:  normal"><span style="font-size:8.0pt">THIS</span></b>, <b style="mso-bidi-font-weight:  normal"><span style="font-size:8.0pt">TYPE</span></b></p>						<p class="Tp"></p>					</td>					<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:  normal"></p>				</tr>				<tr>					<td width="70" valign="top" style="width:52.5pt;padding:0in 0in 0in 0in">						<p class="Tpf">6</p>						<p class="Tpf"></p>					</td>					<td width="394" valign="top" style="width:295.5pt;padding:0in 0in 0in 0in">						<p class="Tp"><b style="mso-bidi-font-weight:normal"><span style="font-size:  8.0pt">HIGH</span></b>, <b style="mso-bidi-font-weight:normal"><span style="font-size:8.0pt">HIGHWORD</span></b>,<b style="mso-bidi-font-weight:  normal"><span style="font-size:8.0pt"> LOW</span></b>, <b style="mso-bidi-font-weight:  normal"><span style="font-size:8.0pt">LOWWORD</span></b></p>						<p class="Tp"></p>					</td>					<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:  normal"></p>				</tr>				<tr>					<td width="70" valign="top" style="width:52.5pt;padding:0in 0in 0in 0in">						<p class="Tpf">7</p>						<p class="Tpf"></p>					</td>					<td width="394" valign="top" style="width:295.5pt;padding:0in 0in 0in 0in">						<p class="Tp"><b style="mso-bidi-font-weight:normal">+</b> ,<b style="mso-bidi-font-weight:normal">&#150;</b> (unary)</p>						<p class="Tp"></p>					</td>					<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:  normal"></p>				</tr>				<tr>					<td width="70" valign="top" style="width:52.5pt;padding:0in 0in 0in 0in">						<p class="Tpf">8</p>						<p class="Tpf"></p>					</td>					<td width="394" valign="top" style="width:295.5pt;padding:0in 0in 0in 0in">						<p class="Tp"><b style="mso-bidi-font-weight:normal">*</b>, <b style="mso-bidi-font-weight:normal">/</b>, <b style="mso-bidi-font-weight:  normal"><span style="font-size:8.0pt">MOD</span></b>, <b style="mso-bidi-font-weight:  normal"><span style="font-size:8.0pt">SHL</span></b>, <b style="mso-bidi-font-weight:  normal"><span style="font-size:8.0pt">SHR</span></b></p>						<p class="Tp"></p>					</td>					<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:  normal"></p>				</tr>				<tr>					<td width="70" valign="top" style="width:52.5pt;padding:0in 0in 0in 0in">						<p class="Tpf">9</p>						<p class="Tpf"></p>					</td>					<td width="394" valign="top" style="width:295.5pt;padding:0in 0in 0in 0in">						<p class="Tp"><b style="mso-bidi-font-weight:normal">+</b>, <b style="mso-bidi-font-weight:normal">&#150;</b> (binary)</p>						<p class="Tp"></p>					</td>					<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:  normal"></p>				</tr>				<tr>					<td width="70" valign="top" style="width:52.5pt;padding:0in 0in 0in 0in">						<p class="Tpf">10</p>						<p class="Tpf"></p>					</td>					<td width="394" valign="top" style="width:295.5pt;padding:0in 0in 0in 0in">						<p class="Tp"><b style="mso-bidi-font-weight:normal"><span style="font-size:  8.0pt">EQ</span></b>, <b style="mso-bidi-font-weight:normal"><span style="font-size:8.0pt">NE</span></b>, <b style="mso-bidi-font-weight:normal"><span style="font-size:8.0pt">LT</span></b>, <b style="mso-bidi-font-weight:normal"><span style="font-size:8.0pt">LE</span></b>, <b style="mso-bidi-font-weight:normal"><span style="font-size:8.0pt">GT</span></b>, <b style="mso-bidi-font-weight:normal"><span style="font-size:8.0pt">GE</span></b></p>						<p class="Tp"></p>					</td>					<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:  normal"></p>				</tr>				<tr>					<td width="70" valign="top" style="width:52.5pt;padding:0in 0in 0in 0in">						<p class="Tpf">11</p>						<p class="Tpf"></p>					</td>					<td width="394" valign="top" style="width:295.5pt;padding:0in 0in 0in 0in">						<p class="Tp"><b style="mso-bidi-font-weight:normal"><span style="font-size:  8.0pt">NOT</span></b></p>						<p class="Tp"></p>					</td>					<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:  normal"></p>				</tr>				<tr>					<td width="70" valign="top" style="width:52.5pt;padding:0in 0in 0in 0in">						<p class="Tpf">12</p>						<p class="Tpf"></p>					</td>					<td width="394" valign="top" style="width:295.5pt;padding:0in 0in 0in 0in">						<p class="Tp"><b style="mso-bidi-font-weight:normal"><span style="font-size:  8.0pt">AND</span></b></p>						<p class="Tp"></p>					</td>					<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:  normal"></p>				</tr>				<tr>					<td width="70" valign="top" style="width:52.5pt;padding:0in 0in 0in 0in">						<p class="Tpf">13</p>						<p class="Tpf"></p>					</td>					<td width="394" valign="top" style="width:295.5pt;padding:0in 0in 0in 0in">						<p class="Tp"><b style="mso-bidi-font-weight:normal"><span style="font-size:  8.0pt">OR</span></b>, <b style="mso-bidi-font-weight:normal"><span style="font-size:8.0pt">XOR</span></b></p>						<p class="Tp"></p>					</td>					<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:  normal"></p>				</tr>				<tr>					<td width="70" valign="top" style="width:52.5pt;padding:0in 0in 0in 0in">						<p class="Tpf">14</p>						<p class="Tpf"></p>					</td>					<td width="394" valign="top" style="width:295.5pt;padding:0in 0in 0in 0in">						<p class="Tp"><b style="mso-bidi-font-weight:normal"><span style="font-size:  8.0pt">OPATTR</span></b>,<b style="mso-bidi-font-weight:normal"><span style="font-size:8.0pt"> SHORT</span></b>,<b style="mso-bidi-font-weight:  normal"><span style="font-size:8.0pt"> .TYPE</span></b></p>						<p class="Tp"></p>					</td>					<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:  normal"></p>				</tr>			</table>			<div style="border:none;border-top:solid windowtext .75pt;padding:1.0pt 0in 0in 0in">				<p class="Te"><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>			</div>			<h2 style="margin-left:0in">Data Types</h2>			<p class="MsoNormal">A &#147;data type&#148; describes a set of values. A variable of a given type can have any of a set of values within the range specified for that type.</p>			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>xeTypes \t &quot;See Data types&quot;<span style='mso-hide:none'> \z&quot;MASMBW.DOC-1166&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;Signed data&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1167&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;Data types:initializers,as&quot;<span style='mso-hide:none'> \z &quot;MASMBW.DOC-1168&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;Data types:defined&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1169&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;Data types:signed&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1170&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;Data types:directives&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1171&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;Data types:real&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1172&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;Directives:data types,for&quot;<span style='mso-hide:none'> \z &quot;MASMBW.DOC-1173&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;Integers:types, defining&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1174&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			</p>			<p class="MsoNormal">The intrinsic types for MASM 6.1 are <b style="mso-bidi-font-weight:normal">BYTE</b>, <b style="mso-bidi-font-weight:normal">SBYTE</b>, <b style="mso-bidi-font-weight:normal">WORD</b>, <b style="mso-bidi-font-weight:normal">SWORD</b>, <b style="mso-bidi-font-weight:normal">DWORD</b>, <b style="mso-bidi-font-weight:normal">SDWORD</b>, <b style="mso-bidi-font-weight:normal">FWORD</b>, <b style="mso-bidi-font-weight:normal">QWORD</b>, and <b style="mso-bidi-font-weight:normal">TBYTE</b>. These types define integers and binary coded decimals (BCDs), as discussed in Chapter 6. The signed data types <b style="mso-bidi-font-weight:normal">SBYTE</b>, <b style="mso-bidi-font-weight:normal">SWORD</b>, and <b style="mso-bidi-font-weight:normal">SDWORD</b> work in conjunction with directives such as <b style="mso-bidi-font-weight:normal">INVOKE</b> (for calling procedures) and <b style="mso-bidi-font-weight:normal">.IF</b> (introduced in Chapter 7). The <b style="mso-bidi-font-weight:normal">REAL4</b>, <b style="mso-bidi-font-weight:normal">REAL8</b>, and <b style="mso-bidi-font-weight:normal">REAL10</b> directives define floating-point types. (See Chapter 6.)</p>			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>XE&quot;Initializers:directives for&quot;<span style='mso-hide:none'> \z&quot;MASMBW.DOC-1175&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			</p>			<p class="MsoNormal">Versions of MASM prior to 6.0 had separate directives for types and initializers. For example, <b style="mso-bidi-font-weight:normal">BYTE</b> is a type and <b style="mso-bidi-font-weight:normal">DB</b> is the corresponding initializer. The distinction does not apply in MASM 6.1. You can use any type (intrinsic or user-defined) as an initializer.</p>			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>XE&quot;Arrays:defining&quot;<span style='mso-hide:none'> \z&quot;MASMBW.DOC-1176&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;Strings:defining&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1177&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			</p>			<p class="MsoNormal">MASM does not have specific types for arrays and strings. However, you can treat a sequence of data units as arrays, and character or byte sequences as strings. (See &#147;Arrays and Strings&#148; in Chapter 5.)</p>			<p class="MsoNormal">Types can also have attributes such as <i style="mso-bidi-font-style:normal">langtype</i> and <i style="mso-bidi-font-style:normal">distance</i> (<b style="mso-bidi-font-weight:normal">NEAR</b> and <b style="mso-bidi-font-weight:normal">FAR</b>). For information on these attributes, see &#147;Declaring Parameters with the PROC Directive&#148; in Chapter 7.</p>			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>XE&quot;Data types:attributes for&quot;<span style='mso-hide:none'> \z&quot;MASMBW.DOC-1178&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;Data types:user-defined&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1179&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;Pointers:TYPEDEF, definedwith&quot;<span style='mso-hide:none'> \z &quot;MASMBW.DOC-1180&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			</p>			<p class="MsoNormal">You can also define your own types with <b style="mso-bidi-font-weight:normal">STRUCT</b>, <b style="mso-bidi-font-weight:normal">UNION</b>, and <b style="mso-bidi-font-weight:normal">RECORD</b>. The types have fields that contain string or numeric data, or records that contain bits. These data types are similar to the user-defined data types in high-level languages such as C, Pascal, and FORTRAN. (See Chapter 5, &#147;Defining and Using Complex Data Types.&#148;)</p>			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>xeDirectives:TYPEDEF \t &quot;See TYPEDEF directive&quot;<span style='mso-hide:none'> \z &quot;MASMBW.DOC-1181&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;Data types:qualifiedtypes&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1182&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;TYPEDEF directive:pointers,defined by&quot;<span style='mso-hide:none'> \z &quot;MASMBW.DOC-1183&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;Qualifiedtypes:defined&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1184&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			</p>			<p class="MsoNormal">You can define new types, including pointer types, with the <b style="mso-bidi-font-weight:normal">TYPEDEF</b> directive. <b style="mso-bidi-font-weight:normal">TYPEDEF</b> assigns a <i style="mso-bidi-font-style:normal">qualifiedtype</i> (explained in the following) to a <i style="mso-bidi-font-style:normal">typename</i> of your choice. This lets you build new types with descriptive names of your choosing, making your programs more readable. For example, the following statement makes the symbol <span style='font-size:9.5pt;font-family:"Lucida Sans Typewriter"'>CHAR</span> a synonym for the intrinsic type <b style="mso-bidi-font-weight:normal">BYTE</b>:</p>			<p class="Ex">CHAR<span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </span>TYPEDEF BYTE<br style="mso-special-character:line-break">			<![if !supportLineBreakNewLine]><br style="mso-special-character:line-break">			<![endif]></p>			<p class="MsoNormal">The <i style="mso-bidi-font-style:normal">qualifiedtype</i> is any type or pointer to a type of the form:</p>			<p class="Syn"><span style="font-family:Times;letter-spacing:-1.5pt">[</span><span style="font-family:Times">[</span><i style="mso-bidi-font-style:normal">distance</i><span style="font-family:Times;letter-spacing:-1.5pt">]</span><span style="font-family:Times">]</span> <b style="mso-bidi-font-weight:normal">PTR</b> <span style="font-family:Times;letter-spacing:-1.5pt">[</span><span style="font-family:Times">[</span><i style="mso-bidi-font-style:normal">qualifiedtype</i><span style="font-family:Times;letter-spacing:-1.5pt">]</span><span style="font-family:Times">]</span></p>			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>XE&quot;Qualifiedtypes:defined&quot;<span style='mso-hide:none'> \z&quot;MASMBW.DOC-1185&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;TYPEDEF directive:pointers,defined by&quot;<span style='mso-hide:none'> \z &quot;MASMBW.DOC-1186&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;PTR operator:pointer to type,as&quot;<span style='mso-hide:none'> \z &quot;MASMBW.DOC-1187&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;Data types:attributes for&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1188&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;Distance attributes&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1189&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;Pointers:types, to&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1190&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;Operands:NEAR&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1191&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;Operands:FAR&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1192&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			</p>			<p class="MsoNormal">where <i style="mso-bidi-font-style:normal">distance</i> is <b style="mso-bidi-font-weight:normal">NEAR, FAR</b>, or any distance modifier. (For more information on <i style="mso-bidi-font-style:normal">distance, </i>see &#147;Declaring Parameters with the PROC Directive&#148; in Chapter 7.)</p>			<p class="MsoNormal">The <i style="mso-bidi-font-style:normal">qualifiedtype</i> can also be any type previously defined with <b style="mso-bidi-font-weight:normal">TYPEDEF</b>. For example, if you use <b style="mso-bidi-font-weight:normal">TYPEDEF</b> to create an alias for <b style="mso-bidi-font-weight:normal">BYTE</b><span style="letter-spacing:-1.75pt"> </span>&#151;<span style="letter-spacing:-1.75pt"> </span>say, <span style='font-size:9.5pt;font-family:"Lucida Sans Typewriter"'>CHAR</span> as in the preceding example<span style="letter-spacing:-1.75pt"> </span>&#151;<span style="letter-spacing:-1.75pt"> </span>you can use <span style='font-size:9.5pt;font-family:"Lucida Sans Typewriter"'>CHAR</span> as a <i style="mso-bidi-font-style:normal">qualifiedtype</i> when defining the pointer type <span style='font-size:9.5pt;font-family:"Lucida Sans Typewriter"'>PCHAR</span>, like this:</p>			<p class="Ex">CHAR<span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </span>TYPEDEF BYTE<br>			PCHAR<span style="mso-spacerun: yes">&nbsp;&nbsp; </span>TYPEDEF PTR CHAR<br style="mso-special-character:line-break">			<![if !supportLineBreakNewLine]><br style="mso-special-character:line-break">			<![endif]></p>			<p class="MsoNormal">The typename <span style='font-size:9.5pt;font-family:"Lucida Sans Typewriter"'>CHAR</span> in the first line becomes a <i style="mso-bidi-font-style:normal">qualifiedtype</i> in the second line. Use of the <b style="mso-bidi-font-weight:normal">TYPEDEF</b> directive to define pointers is explained in &#147;Accessing Data with Pointers and Addresses&#148; in Chapter 3.</p>			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>XE&quot;Prototypes:qualifiedtypes, defined with&quot;<span style='mso-hide:none'>\z &quot;MASMBW.DOC-1193&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;Qualifiedtypes:prototypes,as&quot;<span style='mso-hide:none'> \z &quot;MASMBW.DOC-1194&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;Qualifiedtypes:rules foruse&quot;<span style='mso-hide:none'> \z &quot;MASMBW.DOC-1195&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			</p>			<p class="MsoNormal">Since <i style="mso-bidi-font-style:normal">distance</i> and <i style="mso-bidi-font-style:normal">qualifiedtype</i> are optional syntax elements, you can use variables of type <b style="mso-bidi-font-weight:normal">PTR</b> or <b style="mso-bidi-font-weight:normal">FAR PTR</b>. You can also define procedure prototypes with <i style="mso-bidi-font-style:normal">qualifiedtype</i>. For more information about procedure prototypes, see &#147;Declaring Procedure Prototypes&#148; in Chapter 7.</p>			<p class="MsoNormal">These rules govern the use of <i style="mso-bidi-font-style:normal">qualifiedtype</i>:</p>			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>xe&quot;aa&quot; \z &quot;MASMBW.DOC-1484&quot;<![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			</p>			<p class="Lb1"><!--[if supportFields]><span style='mso-element:field-begin'></span>SYMBOL117 \f &quot;MSIcons&quot; \s 9.5 \h <![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<span style="mso-tab-count:1">&nbsp; </span>The only component of a <i style="mso-bidi-font-style:normal">qualifiedtype</i> definition that can be forward-<br>			referenced is a structure or union type identifier.</p>			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>xe&quot;aa&quot; \z &quot;MASMBW.DOC-1485&quot;<![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			</p>			<p class="Lb1"><!--[if supportFields]><span style='mso-element:field-begin'></span>SYMBOL117 \f &quot;MSIcons&quot; \s 9.5 \h <![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<span style="mso-tab-count:1">&nbsp; </span>If you do not specify <i style="mso-bidi-font-style:normal">distance</i>, the assembler assumes a distance that corresponds to the memory model. The assumed distance is <b style="mso-bidi-font-weight:normal">NEAR</b> for tiny, small, and medium models, and <b style="mso-bidi-font-weight:normal">FAR</b> for other models.</p>			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>xe&quot;aa&quot; \z &quot;MASMBW.DOC-1486&quot;<![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			</p>			<p class="Lb1"><!--[if supportFields]><span style='mso-element:field-begin'></span>SYMBOL117 \f &quot;MSIcons&quot; \s 9.5 \h <![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<span style="mso-tab-count:1">&nbsp; </span>If you do not specify a memory model with <b style="mso-bidi-font-weight:normal">.MODEL</b>, the assembler assumes <b style="mso-bidi-font-weight:normal">SMALL</b> model (and therefore <b style="mso-bidi-font-weight:normal">NEAR</b> pointers).</p>			<p class="Le"><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>XE&quot;Qualifiedtypes:where to use&quot;<span style='mso-hide:none'> \z&quot;MASMBW.DOC-1196&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;Arguments:qualifiedtype,with&quot;<span style='mso-hide:none'> \z &quot;MASMBW.DOC-1197&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;LABEL directive&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1198&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;Directives:LABEL&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1199&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>xe Directives:EXTERN \t &quot;See EXTERNdirective&quot;<span style='mso-hide:none'> \z &quot;MASMBW.DOC-1200&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>xe Directives:EXTERNDEF \t &quot;SeeEXTERNDEF directive&quot;<span style='mso-hide:none'> \z&quot;MASMBW.DOC-1201&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;Directives:COMM&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1202&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;COMM directive&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1203&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;EXTERN directive:overview&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1204&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;EXTERNDEFdirective:overview&quot;<span style='mso-hide:none'> \z&quot;MASMBW.DOC-1205&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;TYPEDEFdirective:qualifiedtypes&quot;<span style='mso-hide:none'> \z&quot;MASMBW.DOC-1206&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			</p>			<p class="MsoNormal">You can use a <i style="mso-bidi-font-style:normal">qualifiedtype</i> in seven places:</p>			<table border="0" cellspacing="0" cellpadding="0" style="margin-left:.4pt;border-collapse: collapse;mso-padding-alt:0in 0in 0in 0in">				<tr>					<td width="199" valign="top" style="width:149.35pt;padding:0in 0in 0in 0in">						<p class="Thf">Use</p>						<p class="Thf"></p>					</td>					<td width="265" valign="top" style="width:198.65pt;padding:0in 0in 0in 0in">						<p class="Th">Example</p>						<p class="Th"></p>					</td>					<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:  normal"></p>				</tr>				<tr>					<td width="464" colspan="2" valign="top" style="width:348.0pt;padding:0in 0in 0in 0in">						<div style="border:none;border-top:solid windowtext .75pt;padding:0in 0in 0in 0in">							<p class="Tr"></p>						</div>						<div style="border:none;border-top:solid windowtext .75pt;padding:0in 0in 0in 0in">							<p class="Tr"></p>						</div>					</td>					<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:  normal"></p>				</tr>				<tr>					<td width="199" valign="top" style="width:149.35pt;padding:0in 0in 0in 0in">						<p class="Tpf">In procedure arguments</p>						<p class="Tpf"></p>					</td>					<td width="265" valign="top" style="width:198.65pt;padding:0in 0in 0in 0in">						<p class="Tp"><span style='font-size:8.5pt;font-family:"Lucida Sans Typewriter"'>proc1 PROC pMsg:PTR BYTE</span></p>						<p class="Tp"></p>					</td>					<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:  normal"><b style="mso-bidi-font-weight:normal"><o:p></o:p></b></p>				</tr>				<tr>					<td width="199" valign="top" style="width:149.35pt;padding:0in 0in 0in 0in">						<p class="Tpf">In prototype arguments</p>						<p class="Tpf"></p>					</td>					<td width="265" valign="top" style="width:198.65pt;padding:0in 0in 0in 0in">						<p class="Tp"><span style='font-size:8.5pt;font-family:"Lucida Sans Typewriter"'>proc2 PROTO pMsg:FAR PTR WORD</span></p>						<p class="Tp"></p>					</td>					<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:  normal"></p>				</tr>				<tr>					<td width="199" valign="top" style="width:149.35pt;padding:0in 0in 0in 0in">						<p class="Tpf">With local variables declared inside procedures</p>						<p class="Tpf"></p>					</td>					<td width="265" valign="top" style="width:198.65pt;padding:0in 0in 0in 0in">						<p class="Tp"><span style='font-size:8.5pt;font-family:"Lucida Sans Typewriter"'>LOCAL pMsg:PTR</span></p>						<p class="Tp"></p>					</td>					<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:  normal"></p>				</tr>				<tr>					<td width="199" valign="top" style="width:149.35pt;padding:0in 0in 0in 0in">						<p class="Tpf">With the <b style="mso-bidi-font-weight:normal">LABEL</b> directive</p>						<p class="Tpf"></p>					</td>					<td width="265" valign="top" style="width:198.65pt;padding:0in 0in 0in 0in">						<p class="Tp"><span style='font-size:8.5pt;font-family:"Lucida Sans Typewriter"'>TempMsg LABEL PTR WORD</span></p>						<p class="Tp"></p>					</td>					<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:  normal"></p>				</tr>				<tr>					<td width="199" valign="top" style="width:149.35pt;padding:0in 0in 0in 0in">						<p class="Tpf">With the <b style="mso-bidi-font-weight:normal">EXTERN</b><b style="mso-bidi-font-weight:normal"><span style="font-size:10.5pt"> </span></b>and <b style="mso-bidi-font-weight:normal">EXTERNDEF</b> directives</p>						<p class="Tpf"></p>					</td>					<td width="265" valign="top" style="width:198.65pt;padding:0in 0in 0in 0in">						<p class="Tp"><span style='font-size:8.5pt;font-family:"Lucida Sans Typewriter"'>EXTERN pMsg:FAR PTR BYTE<br>						EXTERNDEF MyProc:PROTO</span></p>						<p class="Tp"></p>					</td>					<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:  normal"></p>				</tr>				<tr>					<td width="199" valign="top" style="width:149.35pt;padding:0in 0in 0in 0in">						<p class="Tpf">With the <b style="mso-bidi-font-weight:normal">COMM</b> directive</p>						<p class="Tpf"></p>					</td>					<td width="265" valign="top" style="width:198.65pt;padding:0in 0in 0in 0in">						<p class="Tp"><span style='font-size:8.5pt;font-family:"Lucida Sans Typewriter"'>COMM var1:WORD:3</span></p>						<p class="Tp"></p>					</td>					<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:  normal"></p>				</tr>				<tr>					<td width="199" valign="top" style="width:149.35pt;padding:0in 0in 0in 0in">						<p class="Tpf">With the <b style="mso-bidi-font-weight:normal">TYPEDEF</b> directive</p>						<p class="Tpf"></p>					</td>					<td width="265" valign="top" style="width:198.65pt;padding:0in 0in 0in 0in">						<p class="Tp"><span style='font-size:8.5pt;font-family:"Lucida Sans Typewriter"'>PBYTE TYPEDEF PTR BYTE<br>						PFUNC TYPEDEF PROTO MyProc</span></p>						<p class="Tp"></p>					</td>					<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:  normal"></p>				</tr>			</table>			<p class="Le"><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>			<p class="MsoNormal">&#147;Defining Pointer Types with TYPEDEF&#148; in Chapter 3 shows ways to write a <b style="mso-bidi-font-weight:normal">TYPEDEF</b> type for a <i style="mso-bidi-font-style:normal">qualifiedtype</i>. Attributes such as <b style="mso-bidi-font-weight:normal">NEAR</b> and <b style="mso-bidi-font-weight:normal">FAR</b> can also apply to a <i style="mso-bidi-font-style:normal">qualifiedtype</i>.</p>			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>XE&quot;BNF grammar&quot; \z &quot;MASMBW.DOC-1207&quot;<![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;Qualifiedtypes:BNF grammar,defined by&quot;<span style='mso-hide:none'> \z &quot;MASMBW.DOC-1208&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			</p>			<p class="MsoNormal">You can determine an accurate definition for <b style="mso-bidi-font-weight:normal">TYPEDEF</b> and <i style="mso-bidi-font-style:normal">qualifiedtype</i> from the BNF grammar definitions given in Appendix B. The BNF grammar defines each component of the syntax for any directive, showing the recursive properties of components such as <i style="mso-bidi-font-style:normal">qualifiedtype</i>.</p>			<h2 style="margin-left:0in">Registers</h2>			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>XE&quot;Registers:16-bit&quot;<span style='mso-hide:none'> \z&quot;MASMBW.DOC-1209&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			</p>			<p class="MsoNormal">The 8086 family of processors have the same base set of 16-bit registers. Each processor can treat certain registers as two separate 8-bit registers. The 80386/486 processors have extended 32-bit registers. To maintain compatibility with their predecessors, 80386/486 processors can access their registers as 16-bit or, where appropriate, as 8-bit values.</p>			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>XE&quot;Registers:16-bit&quot;<span style='mso-hide:none'> \z&quot;MASMBW.DOC-1210&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			</p>			<p class="MsoNormal">Figure 1.3 shows the registers common to all the 8086-based processors. Each register has its own special uses and limitations.</p>			<p class="Art" style="margin-left:0in"><span style="mso-tab-count:1">&nbsp;&nbsp;&nbsp; </span><span style='mso-field-code:"include M\:\\\\SLM\\\\SRC\\\\MASM61\\\\APPS\\\\ART\\\\mpchp01\.doc art_mp0103_eps  \\\\* mergeformat"'><a name="art_mp0103_eps"></a><a name="space_mp0103_eps"><span style="mso-bookmark:art_mp0103_eps"></span></a><!--[if supportFields]><span style='mso-bookmark:space_mp0103_eps'><span style='mso-bookmark:art_mp0103_eps'></span></span><spanstyle='mso-element:field-begin'></span><span style='mso-bookmark:space_mp0103_eps'><spanstyle='mso-bookmark:art_mp0103_eps'>IMPORTM:\\SLM\\SRC\\MASM61\\APPS\\ART\\MP0103.EPS \* mergeformat<spanstyle='mso-element:field-separator'></span></span></span><![endif]-->			<span style="mso-bookmark:space_mp0103_eps"><span style="mso-bookmark:art_mp0103_eps"><!--[if gte vml 1]><v:shape id="_x0000_i1027" type="#_x0000_t75" style='width:321.75pt;height:300.75pt'> <v:imagedata src="./Chap_01_files/image005.wmz" o:href="file:///M:/SLM/SRC/MASM61/APPS/ART/MP0103.EPS"/></v:shape><![endif]-->			<![if !vml]><img width="429" height="401" src="Chap_01_files/image006.gif" v:shapes="_x0000_i1027"><![endif]></span></span><!--[if supportFields]><spanstyle='mso-bookmark:space_mp0103_eps'><span style='mso-bookmark:art_mp0103_eps'></span></span><spanstyle='mso-element:field-end'></span><![endif]-->			 <span style="mso-bookmark:space_mp0103_eps"><span style="mso-bookmark:art_mp0103_eps"></span></span></span></p>			<p class="Cap">Figure <span style='mso-field-code:"SEQ chapter \\c"'>1</span>.<span style='mso-field-code:"SEQ figure"'>3</span><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </span>Registers for 8088<span style="font-family:Helvetica-Narrow;letter-spacing:-1.75pt"> </span><span style="font-family:Helvetica-Narrow">&#150;<span style="letter-spacing:-1.75pt"> </span></span>80286 Processors</p>			<h4>80386/486 Only</h4>			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>XE&quot;Registers:extended&quot;<span style='mso-hide:none'> \z&quot;MASMBW.DOC-1211&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;Registers:FS&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1212&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;Registers:GS&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1213&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>xe Registers:segments \t &quot;SeeSegment registers&quot;<span style='mso-hide:none'> \z&quot;MASMBW.DOC-1214&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;FS register&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1215&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;GS register&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1216&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			</p>			<p class="MsoNormal">The 80386/486 processors use the same 8-bit and 16-bit registers used by the rest of the 8086 family. All of these registers can be further extended to 32 bits, except segment registers, which always occupy 16 bits. The extended register names begin with the letter &#147;E.&#148; For example, the 32-bit extension of AX is EAX. The 80386/486 processors have two additional segment registers, FS and GS. Figure 1.4 shows the extended registers of the 80386/486.</p>			<p class="Art" style="margin-left:0in"><span style="mso-tab-count:1">&nbsp;&nbsp;&nbsp; </span><span style='mso-field-code:"include M\:\\\\SLM\\\\SRC\\\\MASM61\\\\APPS\\\\ART\\\\mpchp01\.doc art_mp0104_eps  \\\\* mergeformat"'><a name="art_mp0104_eps"></a><a name="space_mp0104_eps"><span style="mso-bookmark:art_mp0104_eps"></span></a><!--[if supportFields]><span style='mso-bookmark:space_mp0104_eps'><span style='mso-bookmark:art_mp0104_eps'></span></span><spanstyle='mso-element:field-begin'></span><span style='mso-bookmark:space_mp0104_eps'><spanstyle='mso-bookmark:art_mp0104_eps'>IMPORTM:\\SLM\\SRC\\MASM61\\APPS\\ART\\MP0104.EPS \* mergeformat<spanstyle='mso-element:field-separator'></span></span></span><![endif]-->			<span style="mso-bookmark:space_mp0104_eps"><span style="mso-bookmark:art_mp0104_eps"><!--[if gte vml 1]><v:shape id="_x0000_i1028" type="#_x0000_t75" style='width:329.25pt;height:336.75pt'> <v:imagedata src="./Chap_01_files/image007.wmz" o:href="file:///M:/SLM/SRC/MASM61/APPS/ART/MP0104.EPS"/></v:shape><![endif]-->			<![if !vml]><img width="439" height="449" src="Chap_01_files/image008.gif" v:shapes="_x0000_i1028"><![endif]></span></span><!--[if supportFields]><spanstyle='mso-bookmark:space_mp0104_eps'><span style='mso-bookmark:art_mp0104_eps'></span></span><spanstyle='mso-element:field-end'></span><![endif]-->			 <span style="mso-bookmark:space_mp0104_eps"><span style="mso-bookmark:art_mp0104_eps"></span></span></span></p>			<p class="Cap">Figure <!--[if supportFields]><span style='font-family:Times'><spanstyle='mso-element:field-begin'></span>SEQ chapter \c<span style='mso-element:field-separator'></span></span><![endif]-->			<span style="font-family:Times">1</span><!--[if supportFields]><spanstyle='font-family:Times'><span style='mso-element:field-end'></span></span><![endif]-->			 <span style="font-family:Times">.</span><!--[if supportFields]><spanstyle='font-family:Times'><span style='mso-element:field-begin'></span>SEQfigure<span style='mso-element:field-separator'></span></span><![endif]-->			 <span style="font-family:Times">4</span><!--[if supportFields]><spanstyle='font-family:Times'><span style='mso-element:field-end'></span></span><![endif]-->			 <span style="font-family:Helvetica-Narrow"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </span></span><span style="font-family:Times">Extended Registers for the 80386/486 Processors<o:p></o:p></span></p>			<h3>Segment Registers</h3>			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>XE&quot;Segment registers:described&quot;<span style='mso-hide:none'> \z&quot;MASMBW.DOC-1217&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>xe &quot;Code segment&quot; \t &quot;SeeSegments, code&quot;<span style='mso-hide:none'> \z &quot;MASMBW.DOC-1218&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>xe &quot;Data segment&quot; \t &quot;SeeSegments, data&quot;<span style='mso-hide:none'> \z &quot;MASMBW.DOC-1219&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;Stacks:segment register&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1220&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;Segment registers:FS&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1221&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;Segment registers:GS&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1222&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			</p>			<p class="MsoNormal">At run time, all addresses are relative to one of four segment registers: CS, DS, SS, or ES. (The 80386/486 processors add two more: FS and GS.) These registers, their segments, and their purposes include:</p>			<table border="0" cellspacing="0" cellpadding="0" style="margin-left:.4pt;border-collapse: collapse;mso-padding-alt:0in 0in 0in 0in">				<tr>					<td width="139" valign="top" style="width:1.45in;padding:0in 0in 0in 0in">						<p class="Thf">Register and Segment</p>						<p class="Thf"></p>					</td>					<td width="325" valign="top" style="width:243.6pt;padding:0in 0in 0in 0in">						<p class="Th">Purpose</p>						<p class="Th"></p>					</td>					<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:  normal"></p>				</tr>				<tr>					<td width="464" colspan="2" valign="top" style="width:348.0pt;padding:0in 0in 0in 0in">						<div style="border:none;border-top:solid windowtext .75pt;padding:0in 0in 0in 0in">							<p class="Tr"></p>						</div>						<div style="border:none;border-top:solid windowtext .75pt;padding:0in 0in 0in 0in">							<p class="Tr"></p>						</div>					</td>					<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:  normal"></p>				</tr>				<tr>					<td width="139" valign="top" style="width:1.45in;padding:0in 0in 0in 0in">						<p class="Tpf">CS (Code Segment)</p>						<p class="Tpf"></p>					</td>					<td width="325" valign="top" style="width:243.6pt;padding:0in 0in 0in 0in">						<p class="Tp">Contains processor instructions and their immediate operands.</p>						<p class="Tp"></p>					</td>					<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:  normal"><b style="mso-bidi-font-weight:normal"><o:p></o:p></b></p>				</tr>				<tr>					<td width="139" valign="top" style="width:1.45in;padding:0in 0in 0in 0in">						<p class="Tpf">DS (Data Segment)</p>						<p class="Tpf"></p>					</td>					<td width="325" valign="top" style="width:243.6pt;padding:0in 0in 0in 0in">						<p class="Tp">Normally contains data allocated by the program.</p>						<p class="Tp"></p>					</td>					<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:  normal"></p>				</tr>				<tr>					<td width="139" valign="top" style="width:1.45in;padding:0in 0in 0in 0in">						<p class="Tpf">SS (Stack Segment)</p>						<p class="Tpf"></p>					</td>					<td width="325" valign="top" style="width:243.6pt;padding:0in 0in 0in 0in">						<p class="Tp">Contains the program stack for use by <b style="mso-bidi-font-weight:  normal"><span style="font-size:9.0pt">PUSH</span></b>, <b style="mso-bidi-font-weight:  normal"><span style="font-size:9.0pt">POP</span></b>, <b style="mso-bidi-font-weight:  normal"><span style="font-size:9.0pt">CALL</span></b>,<br>						and <b style="mso-bidi-font-weight:normal"><span style="font-size:9.0pt">RET</span></b>.</p>						<p class="Tp"></p>					</td>					<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:  normal"></p>				</tr>			</table>			<div style="mso-element:frame;mso-element-wrap:around;mso-height-rule:exactly">				<table cellspacing="0" cellpadding="0" hspace="0" vspace="0" align="left">					<tr>						<td valign="top" align="left" style="padding-top:0in;padding-right:9.0pt;  padding-bottom:0in;padding-left:9.0pt">							<p class="Pb" style="margin-left:0in"><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>						</td>					</tr>				</table>			</div>			<table border="0" cellspacing="0" cellpadding="0" style="margin-left:.4pt;border-collapse: collapse;mso-padding-alt:0in 0in 0in 0in">				<tr>					<td width="139" valign="top" style="width:1.45in;padding:0in 0in 0in 0in">						<p class="Thf">Register and Segment</p>						<p class="Thf"></p>					</td>					<td width="325" valign="top" style="width:243.6pt;padding:0in 0in 0in 0in">						<p class="Th">Purpose</p>						<p class="Th"></p>					</td>					<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:  normal"></p>				</tr>				<tr>					<td width="464" colspan="2" valign="top" style="width:348.0pt;padding:0in 0in 0in 0in">						<div style="border:none;border-top:solid windowtext .75pt;padding:0in 0in 0in 0in">							<p class="Tr"></p>						</div>						<div style="border:none;border-top:solid windowtext .75pt;padding:0in 0in 0in 0in">							<p class="Tr"></p>						</div>					</td>					<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:  normal"></p>				</tr>				<tr>					<td width="139" valign="top" style="width:1.45in;padding:0in 0in 0in 0in">						<p class="Tpf">ES (Extra Segment)</p>						<p class="Tpf"></p>					</td>					<td width="325" valign="top" style="width:243.6pt;padding:0in 0in 0in 0in">						<p class="Tp">References secondary data segment. Used by string instructions.</p>						<p class="Tp"></p>					</td>					<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:  normal"></p>				</tr>				<tr>					<td width="139" valign="top" style="width:1.45in;padding:0in 0in 0in 0in">						<p class="Tpf">FS, GS</p>						<p class="Tpf"></p>					</td>					<td width="325" valign="top" style="width:243.6pt;padding:0in 0in 0in 0in">						<p class="Tp">Provides extra segments on the 80386/486.</p>						<p class="Tp"></p>					</td>					<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:  normal"></p>				</tr>			</table>			<p class="Le"><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>			<h3>General-Purpose Registers</h3>			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>XE&quot;Registers:general purpose&quot;<span style='mso-hide:none'> \z&quot;MASMBW.DOC-1223&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			</p>			<p class="MsoNormal">The AX, DX, CX, BX, BP, DI, and SI registers are 16-bit general-purpose registers, used for temporary data storage. Since the processor accesses registers more quickly than it accesses memory, you can make your programs run faster by keeping the most-frequently used data in registers.</p>			<p class="MsoNormal">The 8086-based processors do not perform memory-to-memory operations. For example, the processor cannot directly copy a variable from one location in memory to another. You must first copy from memory to a register, then from the register to the new memory location. Similarly, to add two variables in memory, you must first copy one variable to a register, then add the contents of the register to the other variable in memory.</p>			<p class="MsoNormal">The processor can access four of the general registers<a name="CurrentCell"></a><span style="letter-spacing:-1.75pt"> </span>&#151;<span style="letter-spacing:-1.75pt"> </span>AX, DX, CX, and BX<span style="letter-spacing:-1.75pt"> </span>&#151;<span style="letter-spacing:-1.75pt"> </span>either as two 8-bit registers or as a single 16-bit register. The AH, DH, CH, and BH registers represent the high-order 8 bits of the corresponding registers. Similarly, AL, DL, CL, and BL represent the low-order 8 bits of the registers.</p>			<p class="MsoNormal">The 80386/486 processors can extend all the general registers to 32 bits, though as Figure 1.4 shows, you cannot treat the upper 16 bits as a separate register as you can the lower 16 bits. To use EAX as an example, you can directly reference the low byte as AL, the next lowest byte as AH, and the low word as AX. To access the high word of EAX, however, you must first shift the upper 16 bits into the lower 16 bits.</p>			<h3>Special-Purpose Registers</h3>			<p class="MsoNormal">The 8086 family of processors has two additional registers, SP and IP, whose values are changed automatically by the processor.</p>			<h4>SP (Stack Pointer)</h4>			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>XE&quot;Registers:Stack Pointer (SP)&quot;<span style='mso-hide:none'> \z&quot;MASMBW.DOC-1224&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>xe &quot;Registers:InstructionPointer&quot; \t &quot;See Instruction Pointer (IP) registers&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1225&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;Stack Pointer (SP)register&quot;<span style='mso-hide:none'> \z &quot;MASMBW.DOC-1226&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;SP (Stack Pointer)register&quot;<span style='mso-hide:none'> \z &quot;MASMBW.DOC-1227&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			</p>			<p class="MsoNormal">The SP register points to the current location within the stack segment. Pushing a value onto the stack decreases the value of SP by two; popping from the stack increases the value of SP by two. Thirty-two&#150;bit operands on 80386/486 processors increase or decrease SP by four instead of two. The <b style="mso-bidi-font-weight:normal">CALL</b> and <b style="mso-bidi-font-weight:normal">INT</b> instructions store the return address on the stack and reduce SP accordingly. Return instructions retrieve the stored address from the stack and reset SP to its value before the call. SP can also be adjusted with instructions such as <b style="mso-bidi-font-weight:normal">ADD</b>. The program stack is described in detail in Chapter 3.</p>			<h4>IP (Instruction Pointer)</h4>			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>XE&quot;Instruction Pointer (IP) register&quot;<span style='mso-hide:none'> \z&quot;MASMBW.DOC-1228&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>xe IP \t &quot;See Instruction Pointer(IP) register&quot;<span style='mso-hide:none'> \z &quot;MASMBW.DOC-1229&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			</p>			<p class="MsoNormal">The IP register always contains the address of the next instruction to be executed. You cannot directly access or change the instruction pointer. However, instructions that control program flow (such as calls, jumps, loops, and interrupts) automatically change the instruction pointer.</p>			<h3><a name="BeginSelect"></a>Flags Register</h3>			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>XE&quot;Registers:flags&quot;<span style='mso-hide:none'> \z&quot;MASMBW.DOC-1230&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;Registers:Eflags&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1231&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			</p>			<p class="MsoNormal">The 16 bits in the flags register control the execution of certain instructions and reflect the current status of the processor. In 80386/486 processors, the flags register is extended to 32 bits. Some bits are undefined, so there are actually 9 flags for real mode, 11 flags (including a 2-bit flag) for 80286 protected mode, 13 for the 80386, and 14 for the 80486. The extended flags register of the 80386/486 is sometimes called &#147;Eflags.&#148;</p>			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>xe&quot;Flags register&quot; \t &quot;See Registers, flags&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1232&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;Registers:flags&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1233&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			</p>			<p class="MsoNormal">Figure 1.5 shows the bits of the 32-bit flags register for the 80386/486. Earlier 8086-family processors use only the lower word. The unmarked bits are reserved for processor use, and should not be modified.</p>			<p class="Art" style="margin-left:0in"><span style="mso-tab-count:1">&nbsp;&nbsp;&nbsp; </span><span style='mso-field-code:"include M\:\\\\SLM\\\\SRC\\\\MASM61\\\\APPS\\\\ART\\\\mpchp01\.doc art_mp0105_eps  \\\\* mergeformat"'><a name="art_mp0105_eps"></a><a name="space_mp0105_eps"><span style="mso-bookmark:art_mp0105_eps"></span></a><!--[if supportFields]><span style='mso-bookmark:space_mp0105_eps'><span style='mso-bookmark:art_mp0105_eps'></span></span><spanstyle='mso-element:field-begin'></span><span style='mso-bookmark:space_mp0105_eps'><spanstyle='mso-bookmark:art_mp0105_eps'>IMPORTM:\\SLM\\SRC\\MASM61\\APPS\\ART\\MP0105.EPS \* mergeformat<spanstyle='mso-element:field-separator'></span></span></span><![endif]-->			<span style="mso-bookmark:space_mp0105_eps"><span style="mso-bookmark:art_mp0105_eps"><!--[if gte vml 1]><v:shape id="_x0000_i1029" type="#_x0000_t75" style='width:309pt;height:231pt'> <v:imagedata src="./Chap_01_files/image009.wmz" o:href="file:///M:/SLM/SRC/MASM61/APPS/ART/MP0105.EPS"/></v:shape><![endif]-->			<![if !vml]><img width="412" height="308" src="Chap_01_files/image010.gif" v:shapes="_x0000_i1029"><![endif]></span></span><!--[if supportFields]><spanstyle='mso-bookmark:space_mp0105_eps'><span style='mso-bookmark:art_mp0105_eps'></span></span><spanstyle='mso-element:field-end'></span><![endif]-->			 <span style="mso-bookmark:space_mp0105_eps"><span style="mso-bookmark:art_mp0105_eps"></span></span></span></p>			<p class="Cap">Figure <span style='mso-field-code:"SEQ chapter \\c"'>1</span>.<span style='mso-field-code:"SEQ figure"'>5</span><span style="font-family:Helvetica-Narrow"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </span>Flags for 8088-80486 Processors</span></p>			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>xe&quot;Flags register&quot; \t &quot;See Registers, flags&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1234&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;Registers:flags&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1235&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			</p>			<p class="MsoNormal">In the following descriptions and throughout this book, &#147;set&#148; means a bit value of 1, and &#147;cleared&#148; means the bit value is 0. The nine flags common to all 8086-family processors, starting with the low-order flags, include:</p>			<table border="0" cellspacing="0" cellpadding="0" style="margin-left:.4pt;border-collapse: collapse;mso-padding-alt:0in 0in 0in 0in">				<tr>					<td width="93" valign="top" style="width:69.75pt;padding:0in 0in 0in 0in">						<p class="Thf">Flag</p>						<p class="Thf"></p>					</td>					<td width="371" valign="top" style="width:278.25pt;padding:0in 0in 0in 0in">						<p class="Th">Description</p>						<p class="Th"></p>					</td>					<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:  normal"></p>				</tr>				<tr>					<td width="464" colspan="2" valign="top" style="width:348.0pt;padding:0in 0in 0in 0in">						<div style="border:none;border-top:solid windowtext .75pt;padding:0in 0in 0in 0in">							<p class="Tr"></p>						</div>						<div style="border:none;border-top:solid windowtext .75pt;padding:0in 0in 0in 0in">							<p class="Tr"></p>						</div>					</td>					<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:  normal"></p>				</tr>				<tr>					<td width="93" valign="top" style="width:69.75pt;padding:0in 0in 0in 0in">						<p class="Tpf">Carry</p>						<p class="Tpf"></p>					</td>					<td width="371" valign="top" style="width:278.25pt;padding:0in 0in 0in 0in">						<p class="Tp">Set if an operation generates a carry to or a borrow from a destination operand.</p>						<p class="Tp"></p>					</td>					<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:  normal"><b style="mso-bidi-font-weight:normal"><o:p></o:p></b></p>				</tr>				<tr>					<td width="93" valign="top" style="width:69.75pt;padding:0in 0in 0in 0in">						<p class="Tpf">Parity</p>						<p class="Tpf"></p>					</td>					<td width="371" valign="top" style="width:278.25pt;padding:0in 0in 0in 0in">						<p class="Tp">Set if the low-order bits of the result of an operation contain an even number of set bits.</p>						<p class="Tp"></p>					</td>					<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:  normal"></p>				</tr>				<tr>					<td width="93" valign="top" style="width:69.75pt;padding:0in 0in 0in 0in">						<p class="Tpf">Auxiliary Carry</p>						<p class="Tpf"></p>					</td>					<td width="371" valign="top" style="width:278.25pt;padding:0in 0in 0in 0in">						<p class="Tp">Set if an operation generates a carry to or a borrow from the low-order 4 bits of an operand. This flag is used for binary coded decimal (BCD) arithmetic.</p>						<p class="Tp"></p>					</td>					<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:  normal"></p>				</tr>				<tr>					<td width="93" valign="top" style="width:69.75pt;padding:0in 0in 0in 0in">						<p class="Tpf">Zero</p>						<p class="Tpf"></p>					</td>					<td width="371" valign="top" style="width:278.25pt;padding:0in 0in 0in 0in">						<p class="Tp">Set if the result of an operation is 0.</p>						<p class="Tp"></p>					</td>					<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:  normal"></p>				</tr>				<tr>					<td width="93" valign="top" style="width:69.75pt;padding:0in 0in 0in 0in">						<p class="Tpf">Sign</p>						<p class="Tpf"></p>					</td>					<td width="371" valign="top" style="width:278.25pt;padding:0in 0in 0in 0in">						<p class="Tp">Equal to the high-order bit of the result of an operation (0 is positive, 1 is negative).</p>						<p class="Tp"></p>					</td>					<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:  normal"></p>				</tr>				<tr>					<td width="93" valign="top" style="width:69.75pt;padding:0in 0in 0in 0in">						<p class="Tpf">Trap</p>						<p class="Tpf"></p>					</td>					<td width="371" valign="top" style="width:278.25pt;padding:0in 0in 0in 0in">						<p class="Tp">If set, the processor generates a single-step interrupt after each instruction. A debugging program can use this feature to execute a program one instruction at a time.</p>						<p class="Tp"></p>					</td>					<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:  normal"></p>				</tr>				<tr>					<td width="93" valign="top" style="width:69.75pt;padding:0in 0in 0in 0in">						<p class="Tpf">Interrupt Enable</p>						<p class="Tpf"></p>					</td>					<td width="371" valign="top" style="width:278.25pt;padding:0in 0in 0in 0in">						<p class="Tp">If set, interrupts are recognized and acted on as they are received. The bit can be cleared to turn off interrupt processing temporarily.</p>						<p class="Tp"></p>					</td>					<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:  normal"></p>				</tr>				<tr>					<td width="93" valign="top" style="width:69.75pt;padding:0in 0in 0in 0in">						<p class="Tpf">Direction</p>						<p class="Tpf"></p>					</td>					<td width="371" valign="top" style="width:278.25pt;padding:0in 0in 0in 0in">						<p class="Tp">If set, string operations process down from high addresses to low addresses. If cleared, string operations process up from low addresses to high addresses.</p>						<p class="Tp"></p>					</td>					<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:  normal"></p>				</tr>				<tr>					<td width="93" valign="top" style="width:69.75pt;padding:0in 0in 0in 0in">						<p class="Tpf">Overflow</p>						<p class="Tpf"></p>					</td>					<td width="371" valign="top" style="width:278.25pt;padding:0in 0in 0in 0in">						<p class="Tp">Set if the result of an operation is too large or small to fit in the destination operand.</p>						<p class="Tp"></p>					</td>					<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:  normal"></p>				</tr>			</table>			<p class="Le"><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>xe&quot;aa&quot; \z &quot;MASMBW.DOC-1487&quot;<![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			</p>			<p class="MsoNormal">Although all flags serve a purpose, most programs require only the carry, zero, sign, and direction flags.</p>			<h2 style="margin-left:0in">Statements</h2>			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>XE&quot;Source code, statements in&quot;<span style='mso-hide:none'> \z&quot;MASMBW.DOC-1236&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;Statements:syntax&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1237&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;Syntax, MASM 6.1statements&quot;<span style='mso-hide:none'> \z &quot;MASMBW.DOC-1238&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;Fields:statements,in&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1239&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;Statements:syntax&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1240&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;Comments:source code, in&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1241&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;; (semicolon):comments&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1242&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;Semicolon (;):comments&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1243&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			</p>			<p class="MsoNormal">Statements are the line-by-line components of source files. Each MASM statement specifies an instruction or directive for the assembler. Statements have up to four fields, as shown here:</p>			<p class="Syn"><span style="font-family:Times;letter-spacing:-1.5pt">[</span><span style="font-family:Times">[</span><i style="mso-bidi-font-style:normal">name</i><b style="mso-bidi-font-weight:normal">:</b><span style="font-family:Times;letter-spacing:-1.5pt">]</span><span style="font-family:Times">]</span> <span style="font-family:Times;letter-spacing:-1.5pt">[</span><span style="font-family:Times">[</span><i style="mso-bidi-font-style:normal">operation</i><span style="font-family:Times;letter-spacing:-1.5pt">]</span><span style="font-family:Times">]</span> <span style="font-family:Times;letter-spacing:-1.5pt">[</span><span style="font-family:Times">[</span><i style="mso-bidi-font-style:normal">operands</i><span style="font-family:Times;letter-spacing:-1.5pt">]</span><span style="font-family:Times">]</span> <span style="font-family:Times;letter-spacing:-1.5pt">[</span><span style="font-family:Times">[</span><b style="mso-bidi-font-weight:normal">;</b><i style="mso-bidi-font-style:normal">comment</i><span style="font-family:Times;letter-spacing:-1.5pt">]</span><span style="font-family:Times">]</span></p>			<p class="MsoNormal">The following list explains each field:</p>			<table border="0" cellspacing="0" cellpadding="0" style="margin-left:.4pt;border-collapse: collapse;mso-padding-alt:0in 0in 0in 0in">				<tr>					<td width="64" valign="top" style="width:48.0pt;padding:0in 0in 0in 0in">						<p class="Thf">Field</p>						<p class="Thf"></p>					</td>					<td width="400" valign="top" style="width:300.0pt;padding:0in 0in 0in 0in">						<p class="Th">Purpose</p>						<p class="Th"></p>					</td>					<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:  normal"></p>				</tr>				<tr>					<td width="464" colspan="2" valign="top" style="width:348.0pt;padding:0in 0in 0in 0in">						<div style="border:none;border-top:solid windowtext .75pt;padding:0in 0in 0in 0in">							<p class="Tr"></p>						</div>						<div style="border:none;border-top:solid windowtext .75pt;padding:0in 0in 0in 0in">							<p class="Tr"></p>						</div>					</td>					<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:  normal"></p>				</tr>				<tr>					<td width="64" valign="top" style="width:48.0pt;padding:0in 0in 0in 0in">						<p class="Tpf"><span style="mso-spacerun: yes">&nbsp;</span><i style="mso-bidi-font-style:  normal"><span style='font-family:"Tms Rmn"'>name</span></i></p>						<p class="Tpf"></p>					</td>					<td width="400" valign="top" style="width:300.0pt;padding:0in 0in 0in 0in">						<p class="Tp">Labels the statement, so that instructions elsewhere in the program can refer to the statement by name. The <i style="mso-bidi-font-style:  normal">name </i>field can label a variable, type, segment, or code location.</p>						<p class="Tp"></p>					</td>					<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:  normal"><b style="mso-bidi-font-weight:normal"><o:p></o:p></b></p>				</tr>				<tr>					<td width="64" valign="top" style="width:48.0pt;padding:0in 0in 0in 0in">						<p class="Tpf"><i style="mso-bidi-font-style:normal"><span style='font-family:  "Tms Rmn"'>operation</span></i></p>						<p class="Tpf"></p>					</td>					<td width="400" valign="top" style="width:300.0pt;padding:0in 0in 0in 0in">						<p class="Tp">Defines the action of the statement. This field contains either an instruction or an assembler directive.</p>						<p class="Tp"></p>					</td>					<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:  normal"></p>				</tr>				<tr>					<td width="64" valign="top" style="width:48.0pt;padding:0in 0in 0in 0in">						<p class="Tpf"><i style="mso-bidi-font-style:normal"><span style='font-family:  "Tms Rmn"'>operands</span></i></p>						<p class="Tpf"></p>					</td>					<td width="400" valign="top" style="width:300.0pt;padding:0in 0in 0in 0in">						<p class="Tp">Lists one or more items on which the instruction or directive operates.</p>						<p class="Tp"></p>					</td>					<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:  normal"></p>				</tr>				<tr>					<td width="64" valign="top" style="width:48.0pt;padding:0in 0in 0in 0in">						<p class="Tpf"><i style="mso-bidi-font-style:normal"><span style='font-family:  "Tms Rmn"'>comment</span></i></p>						<p class="Tpf"></p>					</td>					<td width="400" valign="top" style="width:300.0pt;padding:0in 0in 0in 0in">						<p class="Tp">Provides a comment for the programmer. Comments are for documentation only; they are ignored by the assembler.</p>						<p class="Tp"></p>					</td>					<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:  normal"></p>				</tr>			</table>			<p class="Le"><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>xe&quot;aa&quot; \z &quot;MASMBW.DOC-1488&quot;<![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			</p>			<p class="MsoNormal">The following line contains all four fields:</p>			<p class="Ex">mainlp: mov<span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp; </span>ax, 7<span style="mso-spacerun: yes">&nbsp;&nbsp; </span>; Load AX with the value 7<br style="mso-special-character:line-break">			<![if !supportLineBreakNewLine]><br style="mso-special-character:line-break">			<![endif]></p>			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>xe&quot;aa&quot; \z &quot;MASMBW.DOC-1489&quot;<![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			</p>			<p class="MsoNormal">Here, <span style='font-size:9.5pt;font-family:"Lucida Sans Typewriter"'>mainlp</span> is the label, <span style='font-size:9.5pt;font-family:"Lucida Sans Typewriter"'>mov</span> is the operation, and <span style='font-size:9.5pt;font-family:"Lucida Sans Typewriter"'>ax</span> and <span style='font-size:9.5pt;font-family:"Lucida Sans Typewriter"'>7</span> are the operands, separated by a comma. The comment follows the semicolon.</p>			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>XE&quot;Statements:case sensitivity&quot;<span style='mso-hide:none'> \z&quot;MASMBW.DOC-1244&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			</p>			<p class="MsoNormal">All fields are optional, although certain directives and instructions require an entry in the name or operand field. Some instructions and directives place restrictions on the choice of operands. By default, MASM is not case sensitive.</p>			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>XE&quot;Case sensitivity:MASM statements&quot;<span style='mso-hide:none'> \z&quot;MASMBW.DOC-1245&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;Fields:statements,in&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1246&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;\\: (colon)&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1247&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			</p>			<p class="MsoNormal">Each field (except the comment field) must be separated from other fields by white-space characters (spaces or tabs). MASM also requires code labels to be followed by a colon, operands to be separated by commas, and comments to be preceded by a semicolon.</p>			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>XE&quot;Logical line&quot;<span style='mso-hide:none'> \z&quot;MASMBW.DOC-1248&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;Physical line&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1249&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;\\ (backslash character):MASMcode&quot;<span style='mso-hide:none'> \z &quot;MASMBW.DOC-1250&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;Comments:source code, in&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1251&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;COMMENT directive&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1252&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;Directives:COMMENT&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1253&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;Backslash character (\\):MASMcode&quot;<span style='mso-hide:none'> \z &quot;MASMBW.DOC-1254&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			</p>			<p class="MsoNormal">A logical line can contain up to 512 characters and occupy one or more physical lines. To extend a logical line into two or more physical lines, put the backslash character (\) as the last non-whitespace character before the comment or end of the line. You can place a comment after the backslash as shown in this example:</p>			<p class="Ex"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>.IF<span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp; </span>(x &gt; 0)<span style="mso-spacerun:yes">&nbsp;&nbsp;&nbsp; </span>\<span style="mso-spacerun: yes">&nbsp; </span>; X must be positive<br>			<span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>&amp;&amp;<span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>(ax &gt; x)<span style="mso-spacerun:yes">&nbsp;&nbsp; </span>\<span style="mso-spacerun: yes">&nbsp; </span>; Result from function must be &gt; x<br>			<span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>&amp;&amp;<span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>(cx == 0)<span style="mso-spacerun:yes">&nbsp;&nbsp;&nbsp;&nbsp; </span>; Check loop counter, too<br>			<span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>mov<span style="mso-spacerun:yes">&nbsp;&nbsp;&nbsp;&nbsp; </span>dx, 20h<br>			<span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>.ENDIF<br style="mso-special-character:line-break">			<![if !supportLineBreakNewLine]><br style="mso-special-character:line-break">			<![endif]></p>			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>xe&quot;aa&quot; \z &quot;MASMBW.DOC-1490&quot;<![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			</p>			<p class="MsoNormal">Multiline comments can also be specified with the <b style="mso-bidi-font-weight:normal">COMMENT</b> directive. The assembler ignores all text and code between the delimiters or on the same line as the delimiters. This example illustrates the use of <b style="mso-bidi-font-weight:normal">COMMENT</b>.</p>			<p class="Ex">COMMENT ^<span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>The assembler<br>			<span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>ignores this text<br>			^<span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>mov<span style="mso-spacerun:yes">&nbsp;&nbsp;&nbsp;&nbsp; </span>ax, 1<span style="mso-spacerun: yes">&nbsp;&nbsp; </span>and this code<br style="mso-special-character:line-break">			<![if !supportLineBreakNewLine]><br style="mso-special-character:line-break">			<![endif]></p>			<h1 style="margin-left:0in">The Assembly Process</h1>			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>xe&quot;aa&quot; \z &quot;MASMBW.DOC-1491&quot;<![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			</p>			<p class="MsoNormal">Creating and running an executable file involves four steps:</p>			<p class="Ln1" style="margin-left:22.0pt"><span style="mso-tab-count:1"></span>1.<span style="mso-tab-count:1">&nbsp; </span>Assembling the source code into an object file</p>			<p class="Ln1" style="margin-left:22.0pt"><span style="mso-tab-count:1"></span>2.<span style="mso-tab-count:1">&nbsp; </span>Linking the object file with other modules or libraries into an executable program</p>			<p class="Ln1" style="margin-left:22.0pt"><span style="mso-tab-count:1"></span>3.<span style="mso-tab-count:1">&nbsp; </span>Loading the program into memory</p>			<p class="Ln1" style="margin-left:22.0pt"><span style="mso-tab-count:1"></span>4.<span style="mso-tab-count:1">&nbsp; </span>Running the program</p>			<p class="Le"><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>XE&quot;OPTION directive:described&quot;<span style='mso-hide:none'> \z&quot;MASMBW.DOC-1255&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			</p>			<p class="MsoNormal">Once you have written your assembly-language program, MASM provides several options for assembling it. The <b style="mso-bidi-font-weight:normal">OPTION</b> directive has several different arguments that let you control the way MASM assembles your programs.</p>			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>XE&quot;Conditional assembly:assembly behavior, changing&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1256&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>xe Assembly:conditional \t &quot;SeeConditional assembly&quot;<span style='mso-hide:none'> \z&quot;MASMBW.DOC-1257&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			</p>			<p class="MsoNormal">Conditional assembly allows you to create one source file that can generate a variety of programs, depending on the status of various conditional-assembly statements.</p>			<h2 style="margin-left:0in">Generating and Running Executable Programs</h2>			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>XE&quot;Assembly:actions during&quot;<span style='mso-hide:none'> \z &quot;MASMBW.DOC-1258&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			</p>			<p class="MsoNormal">This section briefly lists all the actions that take place during each of the assembly steps. You can change the behavior of some of these actions in various ways, such as using macros instead of procedures, or using the <b style="mso-bidi-font-weight:normal">OPTION</b> directive or conditional assembly. The other chapters in this book include specific programming methods; this section simply gives you an overview.</p>			<h3>Assembling</h3>			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>xe&quot;aa&quot; \z &quot;MASMBW.DOC-1496&quot;<![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			</p>			<p class="MsoNormal">The ML.EXE program does two things to create an executable program. First, it assembles the source code into an intermediate object file. Second, it calls the linker, LINK.EXE, which links the object files and libraries into an executable program.</p>			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>xe&quot;aa&quot; \z &quot;MASMBW.DOC-1497&quot;<![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			</p>			<p class="MsoNormal">At assembly time, the assembler:</p>			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>XE&quot;Conditional assembly:assembly behavior, changing&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1259&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			</p>			<p class="Lb1"><!--[if supportFields]><span style='mso-element:field-begin'></span>SYMBOL117 \f &quot;MSIcons&quot; \s 9.5 \h <![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<span style="mso-tab-count:1">&nbsp; </span>Evaluates conditional-assembly directives, assembling if the conditions are true.</p>			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>XE&quot;Macros:expansion&quot;<span style='mso-hide:none'> \z&quot;MASMBW.DOC-1260&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			</p>			<p class="Lb1"><!--[if supportFields]><span style='mso-element:field-begin'></span>SYMBOL117 \f &quot;MSIcons&quot; \s 9.5 \h <![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<span style="mso-tab-count:1">&nbsp; </span>Expands macros and macro functions.</p>			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>XE&quot;Expressions:assembly-time evaluation&quot;<span style='mso-hide:none'> \z&quot;MASMBW.DOC-1261&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			</p>			<p class="Lb1"><!--[if supportFields]><span style='mso-element:field-begin'></span>SYMBOL117 \f &quot;MSIcons&quot; \s 9.5 \h <![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<span style="mso-tab-count:1">&nbsp; </span>Evaluates constant expressions such as <span style='font-size:9.5pt;font-family:"Lucida Sans Typewriter"'>MYFLAG AND 80H</span>, substituting the calculated value for the expression.</p>			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>xe&quot;aa&quot; \z &quot;MASMBW.DOC-1498&quot;<![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			</p>			<p class="Lb1"><!--[if supportFields]><span style='mso-element:field-begin'></span>SYMBOL117 \f &quot;MSIcons&quot; \s 9.5 \h <![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<span style="mso-tab-count:1">&nbsp; </span>Encodes instructions and nonaddress operands. For example, <span style='font-size:9.5pt;font-family:"Lucida Sans Typewriter"'>mov cx, 13</span> can be encoded at assembly time because the instruction does not access memory.</p>			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>xe&quot;aa&quot; \z &quot;MASMBW.DOC-1499&quot;<![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			</p>			<p class="Lb1"><!--[if supportFields]><span style='mso-element:field-begin'></span>SYMBOL117 \f &quot;MSIcons&quot; \s 9.5 \h <![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<span style="mso-tab-count:1">&nbsp; </span>Saves memory offsets as offsets from their segments.</p>			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>XE&quot;Segments:determining position of&quot;<span style='mso-hide:none'> \z&quot;MASMBW.DOC-1262&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			</p>			<p class="Lb1"><!--[if supportFields]><span style='mso-element:field-begin'></span>SYMBOL117 \f &quot;MSIcons&quot; \s 9.5 \h <![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<span style="mso-tab-count:1">&nbsp; </span>Places segments and segment attributes in the object file.</p>			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>XE&quot;Offsets:determining&quot;<span style='mso-hide:none'> \z&quot;MASMBW.DOC-1263&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			</p>			<p class="Lb1"><!--[if supportFields]><span style='mso-element:field-begin'></span>SYMBOL117 \f &quot;MSIcons&quot; \s 9.5 \h <![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<span style="mso-tab-count:1">&nbsp; </span>Saves placeholders for offsets and segments (relocatable addresses).</p>			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>xe&quot;aa&quot; \z &quot;MASMBW.DOC-1500&quot;<![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			</p>			<p class="Lb1"><!--[if supportFields]><span style='mso-element:field-begin'></span>SYMBOL117 \f &quot;MSIcons&quot; \s 9.5 \h <![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<span style="mso-tab-count:1">&nbsp; </span>Outputs a listing if requested.</p>			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>xe&quot;aa&quot; \z &quot;MASMBW.DOC-1501&quot;<![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			</p>			<p class="Lb1"><!--[if supportFields]><span style='mso-element:field-begin'></span>SYMBOL117 \f &quot;MSIcons&quot; \s 9.5 \h <![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<span style="mso-tab-count:1">&nbsp; </span>Passes messages (such as <b style="mso-bidi-font-weight:normal">INCLUDELIB</b> and <b style="mso-bidi-font-weight:normal">.DOSSEG</b>) directly to the linker.</p>			<p class="Le"><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>xe&quot;aa&quot; \z &quot;MASMBW.DOC-1502&quot;<![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			</p>			<p class="MsoNormal">For information about conditional assembly, see &#147;Conditional Directives&#148; in this chapter; for macros, see Chapter 9. Further details about segments and offsets are included in Chapters 2 and 3. Assembly listings are explained in Appendix C.</p>			<h3>Linking</h3>			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>XE&quot;Linking:actions during&quot;<span style='mso-hide:none'> \z&quot;MASMBW.DOC-1264&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			</p>			<p class="MsoNormal">Once your source code is assembled, the resulting object file is passed to the linker. At this point, the linker may combine several object files into an executable program. The linker:</p>			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>XE&quot;Segments:determining position of&quot;<span style='mso-hide:none'> \z&quot;MASMBW.DOC-1265&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			</p>			<p class="Lb1"><!--[if supportFields]><span style='mso-element:field-begin'></span>SYMBOL117 \f &quot;MSIcons&quot; \s 9.5 \h <![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<span style="mso-tab-count:1">&nbsp; </span>Combines segments according to the instructions in the object files, rearranging the positions of segments that share the same class or group.</p>			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>XE&quot;Offsets:determining&quot;<span style='mso-hide:none'> \z&quot;MASMBW.DOC-1266&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			</p>			<p class="Lb1"><!--[if supportFields]><span style='mso-element:field-begin'></span>SYMBOL117 \f &quot;MSIcons&quot; \s 9.5 \h <![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<span style="mso-tab-count:1">&nbsp; </span>Fills in placeholders for offsets (relocatable addresses).</p>			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>xe&quot;aa&quot; \z &quot;MASMBW.DOC-1503&quot;<![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			</p>			<p class="Lb1"><!--[if supportFields]><span style='mso-element:field-begin'></span>SYMBOL117 \f &quot;MSIcons&quot; \s 9.5 \h <![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<span style="mso-tab-count:1">&nbsp; </span>Writes relocations for segments into the header of .EXE files (but not .COM files).</p>			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>xe&quot;aa&quot; \z &quot;MASMBW.DOC-1504&quot;<![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			</p>			<p class="Lb1"><!--[if supportFields]><span style='mso-element:field-begin'></span>SYMBOL117 \f &quot;MSIcons&quot; \s 9.5 \h <![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<span style="mso-tab-count:1">&nbsp; </span>Writes the result as an executable program file.</p>			<p class="Le"><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>xe&quot;aa&quot; \z &quot;MASMBW.DOC-1505&quot;<![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			</p>			<p class="MsoNormal">Classes and groups are defined in &#147;Defining Segment Groups&#148; in Chapter 2. Segments and offsets are explained in Chapter 3, &#147;Using Addresses and Pointers.&#148;</p>			<h3>Loading</h3>			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>XE&quot;Loading, actions during&quot;<span style='mso-hide:none'> \z&quot;MASMBW.DOC-1267&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			</p>			<p class="MsoNormal">After loading the executable file into memory, the operating system:</p>			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>xe&quot;aa&quot; \z &quot;MASMBW.DOC-1506&quot;<![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			</p>			<p class="Lb1"><!--[if supportFields]><span style='mso-element:field-begin'></span>SYMBOL117 \f &quot;MSIcons&quot; \s 9.5 \h <![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<span style="mso-tab-count:1">&nbsp; </span>Creates the program segment prefix (PSP) header in memory.</p>			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>XE&quot;Memory:allocation&quot;<span style='mso-hide:none'> \z&quot;MASMBW.DOC-1268&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			</p>			<p class="Lb1"><!--[if supportFields]><span style='mso-element:field-begin'></span>SYMBOL117 \f &quot;MSIcons&quot; \s 9.5 \h <![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<span style="mso-tab-count:1">&nbsp; </span>Allocates memory for the program, based on the values in the PSP.</p>			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>xe&quot;aa&quot; \z &quot;MASMBW.DOC-1507&quot;<![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			</p>			<p class="Lb1"><!--[if supportFields]><span style='mso-element:field-begin'></span>SYMBOL117 \f &quot;MSIcons&quot; \s 9.5 \h <![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<span style="mso-tab-count:1">&nbsp; </span>Loads the program.</p>			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>xe&quot;aa&quot; \z &quot;MASMBW.DOC-1508&quot;<![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			</p>			<p class="Lb1"><!--[if supportFields]><span style='mso-element:field-begin'></span>SYMBOL117 \f &quot;MSIcons&quot; \s 9.5 \h <![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<span style="mso-tab-count:1">&nbsp; </span>Calculates the correct values for absolute addresses from the relocation table.</p>			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>XE&quot;Segment registers:DOS, under&quot;<span style='mso-hide:none'> \z&quot;MASMBW.DOC-1269&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			</p>			<p class="Lb1"><!--[if supportFields]><span style='mso-element:field-begin'></span>SYMBOL117 \f &quot;MSIcons&quot; \s 9.5 \h <![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<span style="mso-tab-count:1">&nbsp; </span>Loads the segment registers SS, CS, DS, and ES with values that point to the proper areas of memory.</p>			<p class="Le"><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>xe&quot;aa&quot; \z &quot;MASMBW.DOC-1509&quot;<![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			</p>			<p class="MsoNormal">For information about segment registers, the instruction pointer (IP), and the stack pointer (SP), see &#147;Registers&#148; earlier in this chapter. For more information on the PSP see Help or an MS-DOS reference.</p>			<h3>Running</h3>			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>XE&quot;Files:executable&quot;<span style='mso-hide:none'> \z&quot;MASMBW.DOC-1270&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			</p>			<p class="MsoNormal">To run your program, MS-DOS jumps to the program&#146;s first instruction. Some program operations, such as resolving indirect memory operands, cannot be handled until the program runs. For a description of indirect references, see &#147;Indirect Operands&#148; in Chapter 7.</p>			<h2 style="margin-left:0in">Using the OPTION Directive</h2>			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>xe&quot;aa&quot; \z &quot;MASMBW.DOC-1510&quot;<![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			</p>			<p class="MsoNormal">The <b style="mso-bidi-font-weight:normal">OPTION</b> directive lets you modify global aspects of the assembly process. With <b style="mso-bidi-font-weight:normal">OPTION</b>, you can change command-line options and default arguments. These changes affect only statements that follow the <b style="mso-bidi-font-weight:normal">OPTION</b> keyword.</p>			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>XE&quot;OPTION directive:using&quot;<span style='mso-hide:none'> \z&quot;MASMBW.DOC-1271&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>xe &quot;Compatibility, MASM 5.1&quot;\t &quot;See MASM 5.1 compatibility&quot;<span style='mso-hide:none'> \z&quot;MASMBW.DOC-1272&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>xe Directives:OPTION \t &quot;See OPTIONdirective&quot;<span style='mso-hide:none'> \z &quot;MASMBW.DOC-1273&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			</p>			<p class="MsoNormal">For example, you may have MASM code in which the first character of a variable, macro, structure, or field name is a dot (.). Since a leading dot causes MASM 6.1 to generate an error, you can use this statement in your program:</p>			<p class="Ex">OPTION DOTNAME<br style="mso-special-character:line-break">			<![if !supportLineBreakNewLine]><br style="mso-special-character:line-break">			<![endif]></p>			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>xe&quot;aa&quot; \z &quot;MASMBW.DOC-1511&quot;<![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			</p>			<p class="MsoNormal">This enables the use of the dot for the first character.</p>			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>xe&quot;aa&quot; \z &quot;MASMBW.DOC-1512&quot;<![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			</p>			<p class="MsoNormal">Changes made with <b style="mso-bidi-font-weight:normal">OPTION</b> override any corresponding command-line option. For example, suppose you compile a module with this command line (which enables M510 compatibility):</p>			<p class="Ex">ML /Zm TEST.ASM<br style="mso-special-character:line-break">			<![if !supportLineBreakNewLine]><br style="mso-special-character:line-break">			<![endif]></p>			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>xe&quot;aa&quot; \z &quot;MASMBW.DOC-1513&quot;<![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			</p>			<p class="MsoNormal">The assembler disables M510 compatibility options for all code following this statement:</p>			<p class="Ex">OPTION NOM510<br style="mso-special-character:line-break">			<![if !supportLineBreakNewLine]><br style="mso-special-character:line-break">			<![endif]></p>			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>xe&quot;aa&quot; \z &quot;MASMBW.DOC-1514&quot;<![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			</p>			<p class="MsoNormal">The following lists explain each of the arguments for the <b style="mso-bidi-font-weight:normal">OPTION</b> directive. Where appropriate, an underline identifies the default argument. If you wish to place more than one <b style="mso-bidi-font-weight:normal">OPTION</b> statement on a line, separate them by commas.</p>			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>XE&quot;CASEMAP\\:NONE argument, OPTION directive&quot;<span style='mso-hide:none'> \z &quot;MASMBW.DOC-1274&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;CASEMAP\\:NOTPUBLIC argument,OPTION directive&quot;<span style='mso-hide:none'> \z&quot;MASMBW.DOC-1275&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;CASEMAP\\:ALL argument, OPTIONdirective&quot;<span style='mso-hide:none'> \z &quot;MASMBW.DOC-1276&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;DOTNAME argument, OPTIONdirective&quot;<span style='mso-hide:none'> \z &quot;MASMBW.DOC-1277&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;NODOTNAME argument, OPTIONdirective&quot;<span style='mso-hide:none'> \z &quot;MASMBW.DOC-1278&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;NOM510 argument, OPTIONdirective&quot;<span style='mso-hide:none'> \z &quot;MASMBW.DOC-1279&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;OLDMACROS argument, OPTIONdirective&quot;<span style='mso-hide:none'> \z &quot;MASMBW.DOC-1280&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;NOOLDMACROS argument, OPTIONdirective&quot;<span style='mso-hide:none'> \z &quot;MASMBW.DOC-1281&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>xe &quot;OPTION directive:M510&quot; \t&quot;See M510 argument, OPTION directive&quot;<span style='mso-hide:none'> \z&quot;MASMBW.DOC-1282&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;OPTION directive:list ofarguments for&quot;<span style='mso-hide:none'> \z &quot;MASMBW.DOC-1283&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;OPTION directive:CASEMAP&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1284&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;Casesensitivity:specifying:command-line options, in&quot;<span style='mso-hide:none'> \z &quot;MASMBW.DOC-1285&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;Casesensitivity:specifying:OPTION directive, in&quot;<span style='mso-hide:none'>\z &quot;MASMBW.DOC-1286&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;OPTION directive:DOTNAME&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1287&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;OPTIONdirective:NODOTNAME&quot;<span style='mso-hide:none'> \z&quot;MASMBW.DOC-1288&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;MASM 5.1 compatibility:OPTIONdirective, specifying&quot;<span style='mso-hide:none'> \z&quot;MASMBW.DOC-1289&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;MASM 5.1 compatibility:macrobehavior&quot;<span style='mso-hide:none'> \z &quot;MASMBW.DOC-1290&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>xe &quot;OPTION directive:M510&quot; \t&quot;See M510 argument, OPTION directive&quot;<span style='mso-hide:none'> \z&quot;MASMBW.DOC-1291&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;OPTION directive:NOM510&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1292&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;Macros:MASM 5.1 behavior&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1293&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;OPTIONdirective:OLDMACROS&quot;<span style='mso-hide:none'> \z&quot;MASMBW.DOC-1294&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;OPTIONdirective:NOOLDMACROS&quot;<span style='mso-hide:none'> \z&quot;MASMBW.DOC-1295&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>xe &quot;OPTION directive:M510&quot; \t&quot;See M510 argument, OPTION directive&quot;<span style='mso-hide:none'> \z&quot;MASMBW.DOC-1296&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>xe &quot;OPTIONdirective:OLDSTRUCTS&quot; \t &quot;See OLDSTRUCTS argument, OPTIONdirective&quot;<span style='mso-hide:none'> \z &quot;MASMBW.DOC-1297&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;OPTIONdirective:NOOLDSTRUCTS&quot;<span style='mso-hide:none'> \z&quot;MASMBW.DOC-1298&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;Structures:MASM 5.1behavior&quot;<span style='mso-hide:none'> \z &quot;MASMBW.DOC-1299&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;MASM 5.1 compatibility:OPTIONdirective, specifying&quot;<span style='mso-hide:none'> \z&quot;MASMBW.DOC-1300&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;MASM 5.1compatibility:structures&quot;<span style='mso-hide:none'> \z&quot;MASMBW.DOC-1301&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;OPTION directive:SCOPED&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1302&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;OPTION directive:NOSCOPED&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1303&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;Procedures:visibility&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1304&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;Visibility:PROC statement&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1305&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;OLDSTRUCTS argument, OPTIONdirective:MASM 5.1 compatibility&quot;<span style='mso-hide:none'> \z&quot;MASMBW.DOC-1306&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;NOOLDSTRUCTS argument, OPTIONdirective&quot;<span style='mso-hide:none'> \z &quot;MASMBW.DOC-1307&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;Structures:compatibility withMASM 5.1&quot;<span style='mso-hide:none'> \z &quot;MASMBW.DOC-1308&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;SCOPED argument, OPTIONdirective&quot;<span style='mso-hide:none'> \z &quot;MASMBW.DOC-1309&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;NOSCOPED argument, OPTIONdirective&quot;<span style='mso-hide:none'> \z &quot;MASMBW.DOC-1310&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;LANGUAGE\\:C argument, OPTIONdirective&quot;<span style='mso-hide:none'> \z &quot;MASMBW.DOC-1311&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;LANGUAGE\\:PASCAL argument,OPTION directive&quot;<span style='mso-hide:none'> \z&quot;MASMBW.DOC-1312&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;LANGUAGE\\:FORTRAN argument,OPTION directive&quot;<span style='mso-hide:none'> \z&quot;MASMBW.DOC-1313&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;LANGUAGE\\:BASIC argument,OPTION directive&quot;<span style='mso-hide:none'> \z&quot;MASMBW.DOC-1314&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;LANGUAGE\\:SYSCALL argument,OPTION directive&quot;<span style='mso-hide:none'> \z &quot;MASMBW.DOC-1315&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;LANGUAGE\\:STDCALL argument,OPTION directive&quot;<span style='mso-hide:none'> \z&quot;MASMBW.DOC-1316&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;EPILOGUE argument OPTIONdirective&quot;<span style='mso-hide:none'> \z &quot;MASMBW.DOC-1317&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;PROLOGUE argument, OPTIONdirective&quot;<span style='mso-hide:none'> \z &quot;MASMBW.DOC-1318&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;PROC\\:PUBLIC argument, OPTIONdirective&quot;<span style='mso-hide:none'> \z &quot;MASMBW.DOC-1319&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;PROC\\:EXPORT argument, OPTIONdirective&quot;<span style='mso-hide:none'> \z &quot;MASMBW.DOC-1320&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;PROC\\:PRIVATE argument, OPTIONdirective&quot;<span style='mso-hide:none'> \z &quot;MASMBW.DOC-1321&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><bstyle='mso-bidi-font-weight:normal'><span style='font-size:9.0pt'><spanstyle='mso-element:field-begin'></span>XE &quot;SETIF2 argument, OPTIONdirective&quot;</span></b><b style='mso-bidi-font-weight:normal'><spanstyle='font-size:9.0pt;mso-hide:none'> \z &quot;MASMBW.DOC-1322&quot;</span></b><![endif]-->			<!--[if supportFields]><bstyle='mso-bidi-font-weight:normal'><span style='font-size:9.0pt'><spanstyle='mso-element:field-end'></span></span></b><![endif]-->			<!--[if supportFields]><bstyle='mso-bidi-font-weight:normal'><span style='font-size:9.0pt'><spanstyle='mso-element:field-begin'></span>XE &quot;OPTION directive:SETIF2&quot;</span></b><bstyle='mso-bidi-font-weight:normal'><span style='font-size:9.0pt;mso-hide:none'>\z &quot;MASMBW.DOC-1323&quot;</span></b><![endif]-->			<!--[if supportFields]><bstyle='mso-bidi-font-weight:normal'><span style='font-size:9.0pt'><spanstyle='mso-element:field-end'></span></span></b><![endif]-->			</p>			<p class="MsoNormal">Options for M510 compatibility include:</p>			<table border="0" cellspacing="0" cellpadding="0" style="margin-left:.4pt;border-collapse: collapse;mso-padding-alt:0in 0in 0in 0in">				<tr>					<td width="196" valign="top" style="width:147.35pt;padding:0in 0in 0in 0in">						<p class="Thf">Argument</p>						<p class="Thf"></p>					</td>					<td width="268" valign="top" style="width:200.65pt;padding:0in 0in 0in 0in">						<p class="Th">Description</p>						<p class="Th"></p>					</td>					<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:  normal"></p>				</tr>				<tr>					<td width="464" colspan="2" valign="top" style="width:348.0pt;padding:0in 0in 0in 0in">						<div style="border:none;border-top:solid windowtext .75pt;padding:0in 0in 0in 0in">							<p class="Tr"></p>						</div>						<div style="border:none;border-top:solid windowtext .75pt;padding:0in 0in 0in 0in">							<p class="Tr"></p>						</div>					</td>					<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:  normal"></p>				</tr>				<tr>					<td width="196" valign="top" style="width:147.35pt;padding:0in 0in 0in 0in">						<p class="Tpf"><b style="mso-bidi-font-weight:normal"><span style="font-size:  9.0pt">CASEMAP</span></b>: <i style="mso-bidi-font-style:normal">maptype</i></p>						<p class="Tpf"></p>					</td>					<td width="268" valign="top" style="width:200.65pt;padding:0in 0in 0in 0in">						<p class="Tp"><b style="mso-bidi-font-weight:normal"><span style="font-size:  9.0pt">CASEMAP:NONE</span></b> (or /Cx) causes internal symbol recognition to be case sensitive and causes the case of identifiers in the .OBJ file to be the same as specified in the <b style="mso-bidi-font-weight:normal"><span style="font-size:9.0pt">EXTERNDEF</span></b>, <b style="mso-bidi-font-weight:  normal"><span style="font-size:9.0pt">PUBLIC</span></b>, or <b style="mso-bidi-font-weight:normal"><span style="font-size:9.0pt">COMM</span></b> statement. The default is <b style="mso-bidi-font-weight:normal"><span style="font-size:9.0pt">CASEMAP:NOTPUBLIC </span></b>(or /Cp). It specifies case insensitivity for internal symbol recognition and the same behavior as <b style="mso-bidi-font-weight:normal"><span style="font-size:9.0pt">CASEMAP:NONE</span></b> for case of identifiers in .OBJ files. <b style="mso-bidi-font-weight:normal"><span style="font-size:9.0pt">CASEMAP:ALL</span></b> (/Cu) specifies case insensitivity for identifiers and converts all identifier names to uppercase.</p>						<p class="Tp"></p>					</td>					<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:  normal"><b style="mso-bidi-font-weight:normal"><o:p></o:p></b></p>				</tr>				<tr>					<td width="196" valign="top" style="width:147.35pt;padding:0in 0in 0in 0in">						<p class="Tpf"><b style="mso-bidi-font-weight:normal"><span style="font-size:  9.0pt">DOTNAME</span></b> | <b style="mso-bidi-font-weight:normal"><u><span style="font-size:9.0pt">NODOTNAME</span></u></b></p>						<p class="Tpf"></p>					</td>					<td width="268" valign="top" style="width:200.65pt;padding:0in 0in 0in 0in">						<p class="Tp"><span style="font-size:9.0pt">Enables the use of the dot (</span>.) as the leading character in variable, macro, structure, union, and member names.</p>						<p class="Tp"></p>					</td>					<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:  normal"></p>				</tr>				<tr>					<td width="196" valign="top" style="width:147.35pt;padding:0in 0in 0in 0in">						<p class="Tpf"><b style="mso-bidi-font-weight:normal"><span style="font-size:  9.0pt">M510</span></b> | <b style="mso-bidi-font-weight:normal"><u><span style="font-size:9.0pt">NOM510</span></u></b></p>						<p class="Tpf"></p>					</td>					<td width="268" valign="top" style="width:200.65pt;padding:0in 0in 0in 0in">						<p class="Tp">Sets all features to be compatible with MASM version 5.1, disabling the <b style="mso-bidi-font-weight:normal"><span style="font-size:  9.0pt">SCOPED</span></b> argument and enabling <b style="mso-bidi-font-weight:  normal"><span style="font-size:9.0pt">OLDMACROS</span></b>, <b style="mso-bidi-font-weight:normal"><span style="font-size:9.0pt">DOTNAME</span></b>, and, <b style="mso-bidi-font-weight:normal"><span style="font-size:9.0pt">OLDSTRUCTS</span></b>. <b style="mso-bidi-font-weight:normal"><span style="font-size:9.0pt">OPTION M510</span></b> conditionally sets other arguments for the <b style="mso-bidi-font-weight:normal"><span style="font-size:9.0pt">OPTION</span></b> directive. For more information on using <b style="mso-bidi-font-weight:normal"><span style="font-size:9.0pt">OPTION M510</span></b><span style="font-size:9.0pt">,<b style="mso-bidi-font-weight:normal"> </b></span>see Appendix A.</p>						<p class="Tp"></p>					</td>					<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:  normal"></p>				</tr>				<tr>					<td width="196" valign="top" style="width:147.35pt;padding:0in 0in 0in 0in">						<p class="Thf">Argument</p>						<p class="Thf"></p>					</td>					<td width="268" valign="top" style="width:200.65pt;padding:0in 0in 0in 0in">						<p class="Th">Description</p>						<p class="Th"></p>					</td>					<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:  normal"></p>				</tr>				<tr>					<td width="464" colspan="2" valign="top" style="width:348.0pt;padding:0in 0in 0in 0in">						<div style="border:none;border-top:solid windowtext .75pt;padding:0in 0in 0in 0in">							<p class="Tr"></p>						</div>						<div style="border:none;border-top:solid windowtext .75pt;padding:0in 0in 0in 0in">							<p class="Tr"></p>						</div>					</td>					<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:  normal"></p>				</tr>				<tr>					<td width="196" valign="top" style="width:147.35pt;padding:0in 0in 0in 0in">						<p class="Tpf"><b style="mso-bidi-font-weight:normal"><span style="font-size:  9.0pt">OLDMACROS</span></b> | <b style="mso-bidi-font-weight:normal"><u><span style="font-size:9.0pt">NOOLDMACROS</span></u></b></p>						<p class="Tpf"></p>					</td>					<td width="268" valign="top" style="width:200.65pt;padding:0in 0in 0in 0in">						<p class="Tp">Enables the version 5.1 treatment of macros. MASM 6.1 treats macros differently.</p>						<p class="Tp"></p>					</td>					<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:  normal"></p>				</tr>				<tr>					<td width="196" valign="top" style="width:147.35pt;padding:0in 0in 0in 0in">						<p class="Tpf"><b style="mso-bidi-font-weight:normal"><span style="font-size:  9.0pt">OLDSTRUCTS</span></b> | <b style="mso-bidi-font-weight:normal"><u><span style="font-size:9.0pt">NOOLDSTRUCTS</span></u></b></p>						<p class="Tpf"></p>					</td>					<td width="268" valign="top" style="width:200.65pt;padding:0in 0in 0in 0in">						<p class="Tp">Enables compatibility with MASM 5.1 for treatment of structure members. See Chapter 5 for information on structures.</p>						<p class="Tp"></p>					</td>					<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:  normal"></p>				</tr>				<tr>					<td width="196" valign="top" style="width:147.35pt;padding:0in 0in 0in 0in">						<p class="Tpf"><b style="mso-bidi-font-weight:normal"><u><span style="font-size:9.0pt">SCOPED</span></u></b> | <b style="mso-bidi-font-weight:  normal"><span style="font-size:9.0pt">NOSCOPED<u><o:p></o:p></u></span></b></p>						<p class="Tpf"><b style="mso-bidi-font-weight:normal"><u><span style="font-size:9.0pt"><o:p></o:p></span></u></b></p>					</td>					<td width="268" valign="top" style="width:200.65pt;padding:0in 0in 0in 0in">						<p class="Tp">Guarantees that all labels inside procedures are local to the procedure when <b style="mso-bidi-font-weight:normal"><span style="font-size:  9.0pt">SCOPED</span></b> (the default) is enabled.</p>						<p class="Tp"></p>					</td>					<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:  normal"></p>				</tr>				<tr>					<td width="196" valign="top" style="width:147.35pt;padding:0in 0in 0in 0in">						<p class="Tpf"><b style="mso-bidi-font-weight:normal"><span style="font-size:  9.0pt">SETIF2: TRUE</span></b><span style="font-size:9.0pt"> |</span> <b style="mso-bidi-font-weight:normal"><span style="font-size:9.0pt">FALSE</span></b></p>						<p class="Tpf"></p>					</td>					<td width="268" valign="top" style="width:200.65pt;padding:0in 0in 0in 0in">						<p class="Tp">If TRUE, <b style="mso-bidi-font-weight:normal"><span style="font-size:9.0pt">.ERR2</span></b> statements and <b style="mso-bidi-font-weight:  normal"><span style="font-size:9.0pt">IF2</span></b> and <b style="mso-bidi-font-weight:  normal"><span style="font-size:9.0pt">ELSEIF2</span></b> conditional blocks are evaluated on every pass. If FALSE, they are not evaluated. If <b style="mso-bidi-font-weight:normal"><span style="font-size:9.0pt">SETIF2</span></b> is not specified (or implied), <b style="mso-bidi-font-weight:normal"><span style="font-size:9.0pt">.ERR2</span></b>, <b style="mso-bidi-font-weight:  normal"><span style="font-size:9.0pt">IF2</span></b>, and <b style="mso-bidi-font-weight:normal"><span style="font-size:9.0pt">ELSEIF2</span></b> expressions cause an error. Both the /Zm command-line argument and <b style="mso-bidi-font-weight:normal"><span style="font-size:9.0pt">OPTION M510</span></b> imply <b style="mso-bidi-font-weight:normal"><span style="font-size:9.0pt">SETIF2:TRUE</span></b>.</p>						<p class="Tp"></p>					</td>					<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:  normal"></p>				</tr>			</table>			<p class="Le"><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>XE&quot;OPTION directive:LANGUAGE&quot;<span style='mso-hide:none'> \z&quot;MASMBW.DOC-1324&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>xe Directives:.MODEL \t &quot;See .MODELdirective&quot;<span style='mso-hide:none'> \z &quot;MASMBW.DOC-1325&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;.MODEL directive:languagetypes, specifying&quot;<span style='mso-hide:none'> \z&quot;MASMBW.DOC-1326&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;Language attributes:OPTIONdirective, with&quot;<span style='mso-hide:none'> \z&quot;MASMBW.DOC-1327&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;OPTION directive:EPILOGUE&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1328&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;OPTION directive:PROLOGUE&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1329&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;Procedures:prologues&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1330&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;Procedures:epilogues&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1331&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;OPTION directive:procedureuse&quot;<span style='mso-hide:none'> \z &quot;MASMBW.DOC-1332&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;Prologuecode:user-defined&quot;<span style='mso-hide:none'> \z&quot;MASMBW.DOC-1333&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;Epilogue code:procedures,with&quot;<span style='mso-hide:none'> \z &quot;MASMBW.DOC-1334&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			</p>			<p class="MsoNormal">Options for procedure use include:</p>			<table border="0" cellspacing="0" cellpadding="0" style="margin-left:.4pt;border-collapse: collapse;mso-padding-alt:0in 0in 0in 0in">				<tr style="mso-row-margin-right:.75pt">					<td width="196" valign="top" style="width:147.35pt;padding:0in 0in 0in 0in">						<p class="Thf">Argument</p>						<p class="Thf"></p>					</td>					<td width="267" valign="top" style="width:199.9pt;padding:0in 0in 0in 0in">						<p class="Th">Description</p>						<p class="Th"></p>					</td>					<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:  normal"></p>					<td style="mso-cell-special:placeholder;border:none;padding:0in 0in 0in 0in" width="1">						<p class="MsoNormal">&nbsp;</td>				</tr>				<tr>					<td width="464" colspan="3" valign="top" style="width:348.0pt;padding:0in 0in 0in 0in">						<div style="border:none;border-top:solid windowtext .75pt;padding:0in 0in 0in 0in">							<p class="Tr"></p>						</div>						<div style="border:none;border-top:solid windowtext .75pt;padding:0in 0in 0in 0in">							<p class="Tr"></p>						</div>					</td>					<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:  normal"></p>				</tr>				<tr style="mso-row-margin-right:.75pt">					<td width="196" valign="top" style="width:147.35pt;padding:0in 0in 0in 0in">						<p class="Tpf"><b style="mso-bidi-font-weight:normal"><span style="font-size:  9.0pt">LANGUAGE</span></b>: <i style="mso-bidi-font-style:normal">langtype</i></p>						<p class="Tpf"></p>					</td>					<td width="267" valign="top" style="width:199.9pt;padding:0in 0in 0in 0in">						<p class="Tp">Specifies the default language type (<b style="mso-bidi-font-weight:  normal"><span style="font-size:9.0pt">C</span></b><span style="font-size:  9.0pt">, <b style="mso-bidi-font-weight:normal">PASCAL</b>, <b style="mso-bidi-font-weight:normal">FORTRAN</b>, <b style="mso-bidi-font-weight:  normal">BASIC</b>, <b style="mso-bidi-font-weight:normal">SYSCALL</b>,</span> or <b style="mso-bidi-font-weight:normal"><span style="font-size:9.0pt">STDCALL</span></b>) to be used with <b style="mso-bidi-font-weight:normal"><span style="font-size:9.0pt">PROC</span></b>, <b style="mso-bidi-font-weight:normal"><span style="font-size:9.0pt">EXTERN</span></b>, and <b style="mso-bidi-font-weight:  normal"><span style="font-size:9.0pt">PUBLIC</span></b>. This use of the <b style="mso-bidi-font-weight:normal"><span style="font-size:9.0pt">OPTION</span></b> directive overrides the <b style="mso-bidi-font-weight:normal"><span style="font-size:9.0pt">.MODEL</span></b> directive but is normally used when <b style="mso-bidi-font-weight:normal"><span style="font-size:9.0pt">.MODEL</span></b> is not given.</p>						<p class="Tp"></p>					</td>					<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:  normal"><b style="mso-bidi-font-weight:normal"><o:p></o:p></b></p>					<td style="mso-cell-special:placeholder;border:none;padding:0in 0in 0in 0in" width="1">						<p class="MsoNormal">&nbsp;</td>				</tr>				<tr style="mso-row-margin-right:.75pt">					<td width="196" valign="top" style="width:147.35pt;padding:0in 0in 0in 0in">						<p class="Tpf"><b style="mso-bidi-font-weight:normal"><span style="font-size:  9.0pt">EPILOGUE</span></b>: <i style="mso-bidi-font-style:normal">macroname</i></p>						<p class="Tpf"></p>					</td>					<td width="267" valign="top" style="width:199.9pt;padding:0in 0in 0in 0in">						<p class="Tp">Instructs the assembler to call the <i style="mso-bidi-font-style:  normal">macroname</i> to generate a user-defined epilogue instead of the standard epilogue code when a <b style="mso-bidi-font-weight:normal"><span style="font-size:9.0pt">RET</span></b> instruction is encountered. See Chapter 7.</p>						<p class="Tp"></p>					</td>					<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:  normal"></p>					<td style="mso-cell-special:placeholder;border:none;padding:0in 0in 0in 0in" width="1">						<p class="MsoNormal">&nbsp;</td>				</tr>				<tr style="mso-row-margin-right:.75pt">					<td width="196" valign="top" style="width:147.35pt;padding:0in 0in 0in 0in">						<p class="Tpf"><b style="mso-bidi-font-weight:normal"><span style="font-size:  9.0pt">PROLOGUE</span></b>: <i style="mso-bidi-font-style:normal">macroname</i></p>						<p class="Tpf"></p>					</td>					<td width="267" valign="top" style="width:199.9pt;padding:0in 0in 0in 0in">						<p class="Tp">Instructs the assembler to call <i style="mso-bidi-font-style:  normal">macroname</i> to generate a user-defined prologue instead of generating the standard prologue code. See Chapter 7.</p>						<p class="Tp"></p>					</td>					<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:  normal"></p>					<td style="mso-cell-special:placeholder;border:none;padding:0in 0in 0in 0in" width="1">						<p class="MsoNormal">&nbsp;</td>				</tr>				<tr style="mso-row-margin-right:.75pt">					<td width="196" valign="top" style="width:147.35pt;padding:0in 0in 0in 0in">						<p class="Tpf"><b style="mso-bidi-font-weight:normal"><span style="font-size:  9.0pt">PROC</span></b>: <i style="mso-bidi-font-style:normal">visibility</i></p>						<p class="Tpf"></p>					</td>					<td width="267" valign="top" style="width:199.9pt;padding:0in 0in 0in 0in">						<p class="Tp">Lets you explicitly set the default visibility as <b style="mso-bidi-font-weight:normal"><span style="font-size:9.0pt">PUBLIC</span></b>, <b style="mso-bidi-font-weight:normal"><span style="font-size:9.0pt">EXPORT</span></b>, or <b style="mso-bidi-font-weight:normal"><span style="font-size:9.0pt">PRIVATE.</span></b></p>						<p class="Tp"></p>					</td>					<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:  normal"></p>					<td style="mso-cell-special:placeholder;border:none;padding:0in 0in 0in 0in" width="1">						<p class="MsoNormal">&nbsp;</td>				</tr>			</table>			<p class="Le"><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>xe&quot;OPTION directive:EXPR16&quot; \t &quot;See EXPR16 argument, OPTIONdirective&quot;<span style='mso-hide:none'> \z &quot;MASMBW.DOC-1335&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>xe &quot;OPTION directive:EXPR32&quot;\t &quot;See EXPR32 argument, OPTION directive&quot;<span style='mso-hide:none'>\z &quot;MASMBW.DOC-1336&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>xe &quot;OPTION directive:M510&quot; \t&quot;See M510 argument, OPTION directive&quot;<span style='mso-hide:none'> \z&quot;MASMBW.DOC-1337&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;Expressions:word size&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1338&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;Word size:expressions, in&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1339&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;EXPR16 argument, OPTIONdirective&quot;<span style='mso-hide:none'> \z &quot;MASMBW.DOC-1340&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;EXPR32 argument, OPTIONdirective&quot;<span style='mso-hide:none'> \z &quot;MASMBW.DOC-1341&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;M510 argument, OPTIONdirective:compatibility with MASM 5.1&quot;<span style='mso-hide:none'> \z&quot;MASMBW.DOC-1342&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;EMULATOR argument, OPTIONdirective&quot;<span style='mso-hide:none'> \z &quot;MASMBW.DOC-1343&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;NOEMULATOR argument, OPTIONdirective&quot;<span style='mso-hide:none'> \z &quot;MASMBW.DOC-1344&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;LJMP argument, OPTIONdirective&quot;<span style='mso-hide:none'> \z &quot;MASMBW.DOC-1345&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;NOLJMP argument, OPTIONdirective&quot;<span style='mso-hide:none'> \z &quot;MASMBW.DOC-1346&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;NOKEYWORD argument, OPTIONdirective&quot;<span style='mso-hide:none'> \z &quot;MASMBW.DOC-1347&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;NOSIGNEXTEND argument, OPTIONdirective&quot;<span style='mso-hide:none'> \z &quot;MASMBW.DOC-1348&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;AND instruction&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1349&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;XOR instruction&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1350&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;OR instruction&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1351&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;OPTION directive:EMULATOR&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1352&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;OPTIONdirective:NOEMULATOR&quot;<span style='mso-hide:none'> \z&quot;MASMBW.DOC-1353&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE&quot;Floating-point:instructions:controlling&quot;<span style='mso-hide:none'>\z &quot;MASMBW.DOC-1354&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;ML:Command-lineoptions:/Fpi&quot;<span style='mso-hide:none'> \z &quot;MASMBW.DOC-1355&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE&quot;Jumps:conditional:extending&quot;<span style='mso-hide:none'> \z&quot;MASMBW.DOC-1356&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;Jumps:extension, automatic&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1357&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;OPTION directive:LJMP&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1358&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;OPTION directive:NOLJMP&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1359&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>xe &quot;OPTIONdirective:NOKEYWORD&quot; \t &quot;See NOKEYWORD argument, OPTIONdirective&quot;<span style='mso-hide:none'> \z &quot;MASMBW.DOC-1360&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;Reserved words:described&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1361&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;OPTIONdirective:NOSIGNEXTEND&quot;<span style='mso-hide:none'> \z&quot;MASMBW.DOC-1362&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;Instructions:AND&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1363&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;Instructions:OR&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1364&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;Instructions:XOR&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1365&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;Offsets:fixups for&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1366&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;Segments:fixups for&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1367&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;MASM 5.1 compatibility:addressfixups&quot;<span style='mso-hide:none'> \z &quot;MASMBW.DOC-1368&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;OPTION directive:OFFSET&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1369&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;OPTION directive:OFFSET&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1370&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>xe Directives:.386 \t &quot;See .386directive&quot;<span style='mso-hide:none'> \z &quot;MASMBW.DOC-1371&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;OPTION directive:OFFSET&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1372&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;OFFSET\\:SEGMENT argument,OPTION directive&quot;<span style='mso-hide:none'> \z&quot;MASMBW.DOC-1373&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;OFFSET\\:GROUP argument, OPTIONdirective&quot;<span style='mso-hide:none'> \z &quot;MASMBW.DOC-1374&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;OFFSET\\:FLAT argument, OPTIONdirective&quot;<span style='mso-hide:none'> \z &quot;MASMBW.DOC-1375&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;.386 directive:FLAT, with&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1376&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;READONLY argument, OPTIONdirective&quot;<span style='mso-hide:none'> \z &quot;MASMBW.DOC-1377&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;NOREADONLY argument, OPTIONdirective&quot;<span style='mso-hide:none'> \z &quot;MASMBW.DOC-1378&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;SEGMENT\\:USE16 argument,OPTION directive&quot;<span style='mso-hide:none'> \z&quot;MASMBW.DOC-1379&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;SEGMENT\\:USE32 argument,OPTION directive&quot;<span style='mso-hide:none'> \z&quot;MASMBW.DOC-1380&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;SEGMENT\\:FLAT argument, OPTIONdirective&quot;<span style='mso-hide:none'> \z &quot;MASMBW.DOC-1381&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;OPTION directive:READONLY&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1382&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;OPTIONdirective:NOREADONLY&quot;<span style='mso-hide:none'> \z &quot;MASMBW.DOC-1383&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;Read-only code&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1384&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			</p>			<p class="MsoNormal">Other options include:</p>			<table border="0" cellspacing="0" cellpadding="0" style="margin-left:.4pt;border-collapse: collapse;mso-padding-alt:0in 0in 0in 0in">				<tr>					<td width="196" valign="top" style="width:147.35pt;padding:0in 0in 0in 0in">						<p class="Thf">Argument</p>						<p class="Thf"></p>					</td>					<td width="268" colspan="2" valign="top" style="width:200.65pt;padding:0in 0in 0in 0in">						<p class="Th">Description</p>						<p class="Th"></p>					</td>					<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:  normal"></p>				</tr>				<tr style="mso-row-margin-right:5.4pt">					<td width="457" colspan="2" valign="top" style="width:342.6pt;padding:0in 0in 0in 0in">						<div style="border:none;border-top:solid windowtext .75pt;padding:0in 0in 0in 0in">							<p class="Tr"></p>						</div>						<div style="border:none;border-top:solid windowtext .75pt;padding:0in 0in 0in 0in">							<p class="Tr"></p>						</div>					</td>					<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:  normal"></p>					<td style="mso-cell-special:placeholder;border:none;padding:0in 0in 0in 0in" width="7">						<p class="MsoNormal">&nbsp;</td>				</tr>				<tr>					<td width="196" valign="top" style="width:147.35pt;padding:0in 0in 0in 0in">						<p class="Tpf"><b style="mso-bidi-font-weight:normal"><span style="font-size:  9.0pt">EXPR16</span></b> | <b style="mso-bidi-font-weight:normal"><u><span style="font-size:9.0pt">EXPR32</span></u></b></p>						<p class="Tpf"></p>					</td>					<td width="268" colspan="2" valign="top" style="width:200.65pt;padding:0in 0in 0in 0in">						<p class="Tp">Sets the expression word size to 16 or 32 bits. The default is 32 bits. The <b style="mso-bidi-font-weight:normal"><span style="font-size:9.0pt">M510 </span></b>argument to the <b style="mso-bidi-font-weight:normal"><span style="font-size:9.0pt">OPTION</span></b> directive sets the word size to 16 bits. Once set with the <b style="mso-bidi-font-weight:normal"><span style="font-size:9.0pt">OPTION</span></b> directive, the expression word size cannot be changed.</p>						<p class="Tp"></p>					</td>					<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:  normal"><b style="mso-bidi-font-weight:normal"><o:p></o:p></b></p>				</tr>				<tr>					<td width="196" valign="top" style="width:147.35pt;padding:0in 0in 0in 0in">						<p class="Thf">Argument</p>						<p class="Thf"></p>					</td>					<td width="268" colspan="2" valign="top" style="width:200.65pt;padding:0in 0in 0in 0in">						<p class="Th">Description</p>						<p class="Th"></p>					</td>					<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:  normal"></p>				</tr>				<tr>					<td width="464" colspan="3" valign="top" style="width:348.0pt;padding:0in 0in 0in 0in">						<div style="border:none;border-top:solid windowtext .75pt;padding:0in 0in 0in 0in">							<p class="Tr"></p>						</div>						<div style="border:none;border-top:solid windowtext .75pt;padding:0in 0in 0in 0in">							<p class="Tr"></p>						</div>					</td>					<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:  normal"></p>				</tr>				<tr>					<td width="196" valign="top" style="width:147.35pt;padding:0in 0in 0in 0in">						<p class="Tpf"><b style="mso-bidi-font-weight:normal"><span style="font-size:  9.0pt">EMULATOR</span></b> | <b style="mso-bidi-font-weight:normal"><u><span style="font-size:9.0pt">NOEMULATOR</span></u></b></p>						<p class="Tpf"></p>					</td>					<td width="268" colspan="2" valign="top" style="width:200.65pt;padding:0in 0in 0in 0in">						<p class="Tp">Controls the generation of floating-point instructions.The <b style="mso-bidi-font-weight:normal"><span style="font-size:9.0pt">NOEMULATOR</span></b> option generates the coprocessor instructions directly. The <b style="mso-bidi-font-weight:normal"><span style="font-size:9.0pt">EMULATOR</span></b> option generates instructions with special fixup records for the linker so that the Microsoft floating-point emulator, supplied with other Microsoft languages, can be used. It produces the same result as setting the /Fpi command-line option. You can set this option only once per module.</p>						<p class="Tp"></p>					</td>					<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:  normal"></p>				</tr>				<tr>					<td width="196" valign="top" style="width:147.35pt;padding:0in 0in 0in 0in">						<p class="Tpf"><b style="mso-bidi-font-weight:normal"><u><span style="font-size:9.0pt">LJMP</span></u></b> | <b style="mso-bidi-font-weight:  normal"><span style="font-size:9.0pt">NOLJMP</span></b></p>						<p class="Tpf"></p>					</td>					<td width="268" colspan="2" valign="top" style="width:200.65pt;padding:0in 0in 0in 0in">						<p class="Tp">Enables automatic conditional-jump lengthening. For information about conditional-jump lengthening, see Chapter 7.</p>						<p class="Tp"></p>					</td>					<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:  normal"></p>				</tr>				<tr>					<td width="196" valign="top" style="width:147.35pt;padding:0in 0in 0in 0in">						<p class="Tpf"><b style="mso-bidi-font-weight:normal"><span style="font-size:  9.0pt">NOKEYWORD</span></b>:&lt;<i style="mso-bidi-font-style:normal">keywordlist</i>&gt;</p>						<p class="Tpf"></p>					</td>					<td width="268" colspan="2" valign="top" style="width:200.65pt;padding:0in 0in 0in 0in">						<p class="Tp">Disables the specified reserved words. For an example of the syntax for this argument, see &#147;Reserved Words&#148; in this chapter.</p>						<p class="Tp"></p>					</td>					<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:  normal"></p>				</tr>				<tr>					<td width="196" valign="top" style="width:147.35pt;padding:0in 0in 0in 0in">						<p class="Tpf"><b style="mso-bidi-font-weight:normal"><span style="font-size:  9.0pt">NOSIGNEXTEND</span></b></p>						<p class="Tpf"></p>					</td>					<td width="268" colspan="2" valign="top" style="width:200.65pt;padding:0in 0in 0in 0in">						<p class="Tp">Overrides the default sign-extended opcodes for the <b style="mso-bidi-font-weight:normal"><span style="font-size:9.0pt">AND</span></b>, <b style="mso-bidi-font-weight:normal"><span style="font-size:9.0pt">OR</span></b>, and <b style="mso-bidi-font-weight:normal"><span style="font-size:9.0pt">XOR</span></b> instructions and generates the larger non-sign-extended forms of these instructions. Provided for compatibility with NEC V25 and NEC V35 controllers.</p>						<p class="Tp"></p>					</td>					<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:  normal"></p>				</tr>				<tr>					<td width="196" valign="top" style="width:147.35pt;padding:0in 0in 0in 0in">						<p class="Tpf"><b style="mso-bidi-font-weight:normal"><span style="font-size:  9.0pt">OFFSET</span></b>: <i style="mso-bidi-font-style:normal">offsettype</i></p>						<p class="Tpf"></p>					</td>					<td width="268" colspan="2" valign="top" style="width:200.65pt;padding:0in 0in 0in 0in">						<p class="Tp">Determines the result of <b style="mso-bidi-font-weight:normal"><span style="font-size:9.0pt">OFFSET</span></b> operator fixups. <b style="mso-bidi-font-weight:normal"><span style="font-size:9.0pt">SEGMENT</span></b> sets the defaults for fixups to be segment-relative (compatible with MASM 5.1). <b style="mso-bidi-font-weight:normal"><span style="font-size:9.0pt">GROUP</span></b>, the default, generates fixups relative to the group (if the label is in a group). <b style="mso-bidi-font-weight:normal"><span style="font-size:9.0pt">FLAT</span></b> causes fixups to be relative to a flat frame. (The <b style="mso-bidi-font-weight:  normal"><span style="font-size:9.0pt">.386</span></b> mode must be enabled to use <b style="mso-bidi-font-weight:normal"><span style="font-size:9.0pt">FLAT</span></b>.) See Appendix A.</p>						<p class="Tp"></p>					</td>					<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:  normal"></p>				</tr>				<tr>					<td width="196" valign="top" style="width:147.35pt;padding:0in 0in 0in 0in">						<p class="Tpf"><b style="mso-bidi-font-weight:normal"><span style="font-size:  9.0pt">READONLY</span></b> | <b style="mso-bidi-font-weight:normal"><u><span style="font-size:9.0pt">NOREADONLY</span></u></b></p>						<p class="Tpf"></p>					</td>					<td width="268" colspan="2" valign="top" style="width:200.65pt;padding:0in 0in 0in 0in">						<p class="Tp">Enables checking for instructions that modify code segments, thereby guaranteeing that read-only code segments are not modified. Same as the /p command-line option of MASM 5.1, except that it affects only segments with at least one assembly instruction, not all segments. The argument is useful for protected mode programs, where code segments must remain read-only.</p>						<p class="Tp"></p>					</td>					<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:  normal"></p>				</tr>				<tr>					<td width="196" valign="top" style="width:147.35pt;padding:0in 0in 0in 0in">						<p class="Tpf"><b style="mso-bidi-font-weight:normal"><span style="font-size:  9.0pt">SEGMENT</span></b>: <i style="mso-bidi-font-style:normal">segSize</i></p>						<p class="Tpf"></p>					</td>					<td width="268" colspan="2" valign="top" style="width:200.65pt;padding:0in 0in 0in 0in">						<p class="Tp">Allows global default segment size to be set. Also determines the default address size for external symbols defined outside any segment. The <i style="mso-bidi-font-style:normal">segSize</i> can be <b style="mso-bidi-font-weight:  normal"><span style="font-size:9.0pt">USE16</span></b>, <b style="mso-bidi-font-weight:  normal"><span style="font-size:9.0pt">USE32</span></b>, or <b style="mso-bidi-font-weight:normal"><span style="font-size:9.0pt">FLAT</span></b>.</p>						<p class="Tp"></p>					</td>					<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:  normal"></p>				</tr>				<![if !supportMisalignedColumns]>				<tr height="0">					<td width="196" style="border:none"></td>					<td width="260" style="border:none"></td>					<td width="7" style="border:none"></td>				</tr>				<![endif]>			</table>			<p class="Le"><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>			<div style="mso-element:frame;mso-element-wrap:around;mso-height-rule:exactly">				<table cellspacing="0" cellpadding="0" hspace="0" vspace="0" align="left">					<tr>						<td valign="top" align="left" style="padding-top:0in;padding-right:9.0pt;  padding-bottom:0in;padding-left:9.0pt">							<p class="Pb" style="margin-left:0in"><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>						</td>					</tr>				</table>			</div>			<h2 style="margin-left:0in">Conditional Directives</h2>			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>XE&quot;Conditional assembly:directives&quot;<span style='mso-hide:none'> \z&quot;MASMBW.DOC-1385&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			</p>			<p class="MsoNormal">MASM 6.1 provides conditional-assembly directives and conditional-error directives. Conditional-assembly directives let you test for a specified condition and assemble a block of statements if the condition is true. Conditional-error directives allow you to test for a specified condition and generate an assembly error if the condition is true.</p>			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>xe&quot;aa&quot; \z &quot;MASMBW.DOC-1515&quot;<![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			</p>			<p class="MsoNormal">Both kinds of conditional directives test assembly-time conditions, not run-time conditions. You can test only expressions that evaluate to constants during assembly. For a list of the predefined symbols often used in conditional assembly, see &#147;Predefined Symbols,&#148; earlier in this chapter.</p>			<h4>Conditional-Assembly Directives</h4>			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>XE&quot;Directives:conditional assembly&quot;<span style='mso-hide:none'> \z&quot;MASMBW.DOC-1386&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>xe Assembly:conditional \t &quot;SeeConditional assembly&quot;<span style='mso-hide:none'> \z&quot;MASMBW.DOC-1387&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;Conditionalassembly:conditions, testing for&quot;<span style='mso-hide:none'> \z&quot;MASMBW.DOC-1388&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;Directives:IF&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1389&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;Directives:ENDIF&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1390&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;Directives:ELSEIF&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1391&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;Directives:ELSE&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1392&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;IF directive&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1393&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;ELSE directive&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1394&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;ELSEIF directive&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1395&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;ENDIF directive&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1396&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			</p>			<p class="MsoNormal">The <b style="mso-bidi-font-weight:normal">IF</b> and <b style="mso-bidi-font-weight:normal">ENDIF</b> directives enclose the conditional statements. The optional <b style="mso-bidi-font-weight:normal">ELSEIF</b> and <b style="mso-bidi-font-weight:normal">ELSE</b> blocks follow the <b style="mso-bidi-font-weight:normal">IF</b> directive. There are many forms of the <b style="mso-bidi-font-weight:normal">IF</b> and <b style="mso-bidi-font-weight:normal">ELSE</b> directives. Help provides a complete list.</p>			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>xe&quot;aa&quot; \z &quot;MASMBW.DOC-1516&quot;<![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			</p>			<p class="MsoNormal">The following statements show the syntax for the <b style="mso-bidi-font-weight:normal">IF</b> directives. The syntax for other condition-assembly directives follow the same form.</p>			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>XE&quot;Directives:conditional assembly&quot;<span style='mso-hide:none'> \z&quot;MASMBW.DOC-1397&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;Directives:IF&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1398&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;Directives:ENDIF&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1399&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;Directives:ELSEIF&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1400&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;Directives:ELSE&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1401&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;IF directive&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1402&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;ELSE directive&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1403&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;ELSEIF directive&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1404&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;ENDIF directive&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1405&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<b style="mso-bidi-font-weight:normal"><o:p></o:p></b></p>			<p class="Syn"><b style="mso-bidi-font-weight:normal">IF </b><i style="mso-bidi-font-style:normal">expression1</i><br>			<i style="mso-bidi-font-style:normal">ifstatements</i><br>			<span style="letter-spacing:-1.5pt">[</span>[<b style="mso-bidi-font-weight:normal">ELSEIF </b><i style="mso-bidi-font-style:normal">expression2</i><br>			<i style="mso-bidi-font-style:normal">elseifstatements</i><span style="letter-spacing:-1.5pt">]</span>]<br>			<span style="letter-spacing:-1.5pt">[</span>[<b style="mso-bidi-font-weight:normal">ELSE</b><br>			<i style="mso-bidi-font-style:normal">elsestatements</i><span style="letter-spacing:-1.5pt">]</span>]<br>			<b style="mso-bidi-font-weight:normal">ENDIF</b></p>			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>xe&quot;aa&quot; \z &quot;MASMBW.DOC-1517&quot;<![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			</p>			<p class="MsoNormal">The <i style="mso-bidi-font-style:normal"><span style='font-family:"Tms Rmn"'>statements</span></i><span style='font-family:"Tms Rmn"'> within an <b style="mso-bidi-font-weight:normal">IF</b> block can be any valid instructions, including other conditional blocks, which in turn can contain any number of <b style="mso-bidi-font-weight:normal">ELSEIF</b> blocks. <b style="mso-bidi-font-weight:normal">ENDIF</b> ends the block.</span></p>			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>XE&quot;ELSE directive&quot;<span style='mso-hide:none'> \z&quot;MASMBW.DOC-1406&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;ENDIF directive&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1407&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;Directives:ELSE&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1408&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;Directives:ENDIF&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1409&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			</p>			<p class="MsoNormal">MASM assembles the statements following the <b style="mso-bidi-font-weight:normal">IF</b> directive only if the corresponding condition is true. If the condition is not true and the block contains an <b style="mso-bidi-font-weight:normal">ELSEIF</b> directive, the assembler checks to see if the corresponding condition is true. If so, it assembles the statements following the <b style="mso-bidi-font-weight:normal">ELSEIF</b> directive. If no <b style="mso-bidi-font-weight:normal">IF</b> or <b style="mso-bidi-font-weight:normal">ELSEIF</b> conditions are satisfied, the assembler processes only the statements following the <b style="mso-bidi-font-weight:normal">ELSE</b> directive.</p>			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>xe&quot;aa&quot; \z &quot;MASMBW.DOC-1518&quot;<![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			</p>			<p class="MsoNormal">For example, you may want to assemble a line of code only if your program defines a particular variable. In this example,</p>			<p class="Ex">IFDEF<span style="mso-spacerun: yes">&nbsp;&nbsp; </span>buffer<br>			buff<span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </span>BYTE<span style="mso-spacerun:yes">&nbsp;&nbsp;&nbsp; </span>buffer DUP(?)<br>			ENDIF<br style="mso-special-character:line-break">			<![if !supportLineBreakNewLine]><br style="mso-special-character:line-break">			<![endif]></p>			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>xe&quot;aa&quot; \z &quot;MASMBW.DOC-1519&quot;<![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			</p>			<p class="MsoNormal">the assembler allocates <span style='font-size:9.5pt;font-family:"Lucida Sans Typewriter"'>buff</span> only if <span style='font-size:9.5pt;font-family:"Lucida Sans Typewriter"'>buffer</span> has been previously defined.</p>			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>XE&quot;SETIF2 argument, OPTION directive&quot;<span style='mso-hide:none'> \z&quot;MASMBW.DOC-1410&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><bstyle='mso-bidi-font-weight:normal'><span style='font-size:9.0pt'><spanstyle='mso-element:field-begin'></span>XE &quot;OPTION directive:SETIF2&quot;</span></b><bstyle='mso-bidi-font-weight:normal'><span style='font-size:9.0pt;mso-hide:none'>\z &quot;MASMBW.DOC-1411&quot;</span></b><![endif]-->			<!--[if supportFields]><bstyle='mso-bidi-font-weight:normal'><span style='font-size:9.0pt'><spanstyle='mso-element:field-end'></span></span></b><![endif]-->			<!--[if supportFields]><bstyle='mso-bidi-font-weight:normal'><span style='font-size:9.0pt'><spanstyle='mso-element:field-begin'></span>XE &quot;IF2 directive&quot;</span></b><bstyle='mso-bidi-font-weight:normal'><span style='font-size:9.0pt;mso-hide:none'>\z &quot;MASMBW.DOC-1412&quot;</span></b><![endif]-->			<!--[if supportFields]><bstyle='mso-bidi-font-weight:normal'><span style='font-size:9.0pt'><spanstyle='mso-element:field-end'></span></span></b><![endif]-->			<!--[if supportFields]><bstyle='mso-bidi-font-weight:normal'><span style='font-size:9.0pt'><spanstyle='mso-element:field-begin'></span>XE &quot;Directives:IF2&quot;</span></b><bstyle='mso-bidi-font-weight:normal'><span style='font-size:9.0pt;mso-hide:none'>\z &quot;MASMBW.DOC-1413&quot;</span></b><![endif]-->			<!--[if supportFields]><bstyle='mso-bidi-font-weight:normal'><span style='font-size:9.0pt'><spanstyle='mso-element:field-end'></span></span></b><![endif]-->			<!--[if supportFields]><bstyle='mso-bidi-font-weight:normal'><span style='font-size:9.0pt'><spanstyle='mso-element:field-begin'></span>XE &quot;ELSEIF2 directive&quot;</span></b><bstyle='mso-bidi-font-weight:normal'><span style='font-size:9.0pt;mso-hide:none'>\z &quot;MASMBW.DOC-1414&quot;</span></b><![endif]-->			<!--[if supportFields]><bstyle='mso-bidi-font-weight:normal'><span style='font-size:9.0pt'><spanstyle='mso-element:field-end'></span></span></b><![endif]-->			<!--[if supportFields]><bstyle='mso-bidi-font-weight:normal'><span style='font-size:9.0pt'><spanstyle='mso-element:field-begin'></span>XE &quot;Directives:ELSEIF2&quot;</span></b><bstyle='mso-bidi-font-weight:normal'><span style='font-size:9.0pt;mso-hide:none'>\z &quot;MASMBW.DOC-1415&quot;</span></b><![endif]-->			<!--[if supportFields]><bstyle='mso-bidi-font-weight:normal'><span style='font-size:9.0pt'><spanstyle='mso-element:field-end'></span></span></b><![endif]-->			</p>			<p class="MsoNormal">MASM 6.1 provides the directives <b style="mso-bidi-font-weight:normal">IF1</b>, <b style="mso-bidi-font-weight:normal">IF2</b>, <b style="mso-bidi-font-weight:normal">ELSEIF1</b>, and <b style="mso-bidi-font-weight:normal">ELSIF2</b> to grant assembly only on pass one or pass two. To use these directives, you must either enable 5.1 compatibility (with the /Zm command-line switch or <b style="mso-bidi-font-weight:normal">OPTION M510</b>) or set <b style="mso-bidi-font-weight:normal">OPTION SETIF2:TRUE</b>, as described in the previous section.</p>			<p class="MsoNormal">The following list summarizes the conditional-assembly directives:</p>			<table border="0" cellspacing="0" cellpadding="0" style="margin-left:.4pt;border-collapse: collapse;mso-padding-alt:0in 0in 0in 0in">				<tr>					<td width="118" valign="top" style="width:88.65pt;padding:0in 0in 0in 0in">						<p class="Thf">The Directive</p>						<p class="Thf"></p>					</td>					<td width="346" valign="top" style="width:259.35pt;padding:0in 0in 0in 0in">						<p class="Th">Grants Assembly If</p>						<p class="Th"></p>					</td>					<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:  normal"></p>				</tr>				<tr>					<td width="464" colspan="2" valign="top" style="width:348.0pt;padding:0in 0in 0in 0in">						<div style="border:none;border-top:solid windowtext .75pt;padding:0in 0in 0in 0in">							<p class="Tr"></p>						</div>						<div style="border:none;border-top:solid windowtext .75pt;padding:0in 0in 0in 0in">							<p class="Tr"></p>						</div>					</td>					<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:  normal"></p>				</tr>				<tr>					<td width="118" valign="top" style="width:88.65pt;padding:0in 0in 0in 0in">						<p class="Tpf"><b style="mso-bidi-font-weight:normal">IF</b><span style="font-size:9.0pt"> </span><i style="mso-bidi-font-style:normal">expression</i></p>						<p class="Tpf"></p>					</td>					<td width="346" valign="top" style="width:259.35pt;padding:0in 0in 0in 0in">						<p class="Tp"><i style="mso-bidi-font-style:normal">expression</i> is true (nonzero)</p>						<p class="Tp"></p>					</td>					<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:  normal"><b style="mso-bidi-font-weight:normal"><o:p></o:p></b></p>				</tr>				<tr>					<td width="118" valign="top" style="width:88.65pt;padding:0in 0in 0in 0in">						<p class="Tpf"><b style="mso-bidi-font-weight:normal">IFE</b><span style="font-size:9.0pt"> </span><i style="mso-bidi-font-style:normal">expression</i><b style="mso-bidi-font-weight:normal"><span style="font-size:9.0pt"><o:p></o:p></span></b></p>						<p class="Tpf"><b style="mso-bidi-font-weight:normal"><span style="font-size:  9.0pt"><o:p></o:p></span></b></p>					</td>					<td width="346" valign="top" style="width:259.35pt;padding:0in 0in 0in 0in">						<p class="Tp"><i style="mso-bidi-font-style:normal">expression</i> is false (zero)</p>						<p class="Tp"></p>					</td>					<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:  normal"></p>				</tr>				<tr>					<td width="118" valign="top" style="width:88.65pt;padding:0in 0in 0in 0in">						<p class="Tpf"><b style="mso-bidi-font-weight:normal">IFDEF</b><span style="font-size:9.0pt"> </span><i style="mso-bidi-font-style:normal">name</i></p>						<p class="Tpf"></p>					</td>					<td width="346" valign="top" style="width:259.35pt;padding:0in 0in 0in 0in">						<p class="Tp"><i style="mso-bidi-font-style:normal">name</i> has been previously defined</p>						<p class="Tp"></p>					</td>					<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:  normal"></p>				</tr>				<tr>					<td width="118" valign="top" style="width:88.65pt;padding:0in 0in 0in 0in">						<p class="Tpf"><b style="mso-bidi-font-weight:normal">IFNDEF</b> <i style="mso-bidi-font-style:normal">name</i><b style="mso-bidi-font-weight:  normal"><span style="font-size:9.0pt"><o:p></o:p></span></b></p>						<p class="Tpf"><b style="mso-bidi-font-weight:normal"><span style="font-size:  9.0pt"><o:p></o:p></span></b></p>					</td>					<td width="346" valign="top" style="width:259.35pt;padding:0in 0in 0in 0in">						<p class="Tp"><i style="mso-bidi-font-style:normal">name</i> has not been previously defined</p>						<p class="Tp"></p>					</td>					<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:  normal"></p>				</tr>				<tr>					<td width="118" valign="top" style="width:88.65pt;padding:0in 0in 0in 0in">						<p class="Tpf"><b style="mso-bidi-font-weight:normal">IFB</b> <i style="mso-bidi-font-style:normal">argument*</i></p>						<p class="Tpf"></p>					</td>					<td width="346" valign="top" style="width:259.35pt;padding:0in 0in 0in 0in">						<p class="Tp"><i style="mso-bidi-font-style:normal">argument</i> is blank</p>						<p class="Tp"></p>					</td>					<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:  normal"></p>				</tr>				<tr>					<td width="118" valign="top" style="width:88.65pt;padding:0in 0in 0in 0in">						<p class="Tpf"><b style="mso-bidi-font-weight:normal">IFNB</b> <i style="mso-bidi-font-style:normal">argument*</i><b style="mso-bidi-font-weight:  normal"><span style="font-size:9.0pt"><o:p></o:p></span></b></p>						<p class="Tpf"><b style="mso-bidi-font-weight:normal"><span style="font-size:  9.0pt"><o:p></o:p></span></b></p>					</td>					<td width="346" valign="top" style="width:259.35pt;padding:0in 0in 0in 0in">						<p class="Tp"><i style="mso-bidi-font-style:normal">argument</i> is not blank</p>						<p class="Tp"></p>					</td>					<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:  normal"></p>				</tr>				<tr>					<td width="118" valign="top" style="width:88.65pt;padding:0in 0in 0in 0in">						<p class="Tpf"><b style="mso-bidi-font-weight:normal">IFIDN[I]</b> <i style="mso-bidi-font-style:normal">arg1</i>, <i style="mso-bidi-font-style:  normal">arg2*</i></p>						<p class="Tpf"></p>					</td>					<td width="346" valign="top" style="width:259.35pt;padding:0in 0in 0in 0in">						<p class="Tp"><i style="mso-bidi-font-style:normal">arg1</i> equals<i style="mso-bidi-font-style:normal"> arg2</i></p>						<p class="Tp"></p>					</td>					<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:  normal"></p>				</tr>				<tr>					<td width="118" valign="top" style="width:88.65pt;padding:0in 0in 0in 0in">						<p class="Tpf"><b style="mso-bidi-font-weight:normal">IFDIF[I]</b> <i style="mso-bidi-font-style:normal">arg1</i>, <i style="mso-bidi-font-style:  normal">arg2*</i></p>						<p class="Tpf"></p>					</td>					<td width="346" valign="top" style="width:259.35pt;padding:0in 0in 0in 0in">						<p class="Tp"><i style="mso-bidi-font-style:normal">arg1</i> does not equal<i style="mso-bidi-font-style:normal"> arg2<o:p></o:p></i></p>						<p class="Tp">The optional <b style="mso-bidi-font-weight:normal">I</b> suffix (<b style="mso-bidi-font-weight:normal">IFIDNI</b> and <b style="mso-bidi-font-weight:  normal">IFDIFI</b>) makes comparisons insensitive to differences in case.</p>						<p class="Tp"></p>					</td>					<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:  normal"></p>				</tr>			</table>			<p class="Tf">* Used only in macros.</p>			<p class="Le"><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>XE&quot;Directives:IFE&quot; \z &quot;MASMBW.DOC-1416&quot;<![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;Directives:IFDEF&quot; \z&quot;MASMBW.DOC-1417&quot;<![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;Directives:IFNDEF&quot; \z&quot;MASMBW.DOC-1418&quot;<![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;Directives:IFB&quot; \z&quot;MASMBW.DOC-1419&quot;<![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;Directives:IFNB&quot; \z&quot;MASMBW.DOC-1420&quot;<![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;Directives:IFIDN&quot; \z&quot;MASMBW.DOC-1421&quot;<![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;Directives:IFDIF&quot; \z&quot;MASMBW.DOC-1422&quot;<![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;IF directive&quot; \z&quot;MASMBW.DOC-1423&quot;<![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;IFE directive&quot; \z&quot;MASMBW.DOC-1424&quot;<![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;IFDEF directive&quot; \z&quot;MASMBW.DOC-1425&quot;<![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;IFNDEF directive&quot; \z&quot;MASMBW.DOC-1426&quot;<![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;IFB directive&quot; \z&quot;MASMBW.DOC-1427&quot;<![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;IFNB directive&quot; \z&quot;MASMBW.DOC-1428&quot;<![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;IFIDN directive&quot; \z&quot;MASMBW.DOC-1429&quot;<![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;IFDIF directive&quot; \z&quot;MASMBW.DOC-1430&quot;<![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			</p>			<p class="MsoNormal"><span style="display:none;mso-hide:all"><span style="mso-spacerun: yes">&nbsp;&nbsp; </span><o:p></o:p></span></p>			<h4>Conditional-Error Directives</h4>			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>XE&quot;Conditional-error directives (table)&quot;<span style='mso-hide:none'> \z&quot;MASMBW.DOC-1431&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;Directives:conditionalerror&quot;<span style='mso-hide:none'> \z &quot;MASMBW.DOC-1432&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			</p>			<p class="MsoNormal">You can use conditional-error directives to debug programs and check for assembly-time errors. By inserting a conditional-error directive at a key point in your code, you can test assembly-time conditions at that point. You can also use conditional-error directives to test for boundary conditions in macros.</p>			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>xe&quot;aa&quot; \z &quot;MASMBW.DOC-1520&quot;<![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			</p>			<p class="MsoNormal">Like other severe errors, those generated by conditional-error directives cause the assembler to return a nonzero exit code. If MASM encounters a severe error during assembly, it does not generate the object module.</p>			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>xe&quot;aa&quot; \z &quot;MASMBW.DOC-1521&quot;<![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			</p>			<p class="MsoNormal">For example, the <b style="mso-bidi-font-weight:normal">.ERRNDEF</b> directive produces an error if the program has not defined a given label. In the following example, <b style="mso-bidi-font-weight:normal">.ERRNDEF</b> makes sure a label called <span style='font-size:9.5pt;font-family:"Lucida Sans Typewriter"'>publevel</span> actually exists.</p>			<p class="Ex">.ERRNDEF<span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </span>publevel<br>			IF<span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>publevel LE 2<br>			PUBLIC<span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>var1, var2<br>			ELSE<br>			PUBLIC<span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>var1, var2, var3<br>			ENDIF<br style="mso-special-character:line-break">			<![if !supportLineBreakNewLine]><br style="mso-special-character:line-break">			<![endif]></p>			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>XE&quot;Directives:conditional error&quot;<span style='mso-hide:none'> \z&quot;MASMBW.DOC-1433&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;Directives:.ERR&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1434&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;Directives:.ERRE&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1435&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;Directives:.ERRNZ&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1436&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;Directives:.ERRDEF&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1437&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;Directives:.ERRNDEF&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1438&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;Directives:.ERRB&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1439&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;Directives:.ERRNB&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1440&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;Directives:.ERRIDN&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1441&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;Directives:.ERRDIF&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1442&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;.ERR directive&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1443&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;.ERRE directive&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1444&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;.ERRNZ directive&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1445&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;.ERRDEF directive&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1446&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;.ERRNDEF directive&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1447&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;.ERRB directive&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1448&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;.ERRNB directive&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1449&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;.ERRIDN directive&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1450&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;.ERRDIF directive&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1451&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-begin'></span>XE &quot;Macros:arguments:testing&quot;<spanstyle='mso-hide:none'> \z &quot;MASMBW.DOC-1452&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			</p>			<p class="MsoNormal">The conditional-error directives use the syntax given in the previous section. The following list summarizes the conditional-error directives. Note their close correspondence with the previous list of conditional-assembly directives.</p>			<table border="0" cellspacing="0" cellpadding="0" style="margin-left:.4pt;border-collapse: collapse;mso-padding-alt:0in 0in 0in 0in">				<tr>					<td width="136" valign="top" style="width:102.0pt;padding:0in 0in 0in 0in">						<p class="Thf">The Directive</p>						<p class="Thf"></p>					</td>					<td width="328" valign="top" style="width:246.0pt;padding:0in 0in 0in 0in">						<p class="Th">Generates an Error</p>						<p class="Th"></p>					</td>					<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:  normal"></p>				</tr>				<tr>					<td width="464" colspan="2" valign="top" style="width:348.0pt;padding:0in 0in 0in 0in">						<div style="border:none;border-top:solid windowtext .75pt;padding:0in 0in 0in 0in">							<p class="Tr"></p>						</div>						<div style="border:none;border-top:solid windowtext .75pt;padding:0in 0in 0in 0in">							<p class="Tr"></p>						</div>					</td>					<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:  normal"></p>				</tr>				<tr>					<td width="136" valign="top" style="width:102.0pt;padding:0in 0in 0in 0in">						<p class="Tpf"><b style="mso-bidi-font-weight:normal"><span style="font-size:  9.0pt">.ERR</span></b></p>						<p class="Tpf"></p>					</td>					<td width="328" valign="top" style="width:246.0pt;padding:0in 0in 0in 0in">						<p class="Tp">Unconditionally where it occurs in the source file. Usually placed within a conditional-assembly block.</p>						<p class="Tp"></p>					</td>					<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:  normal"><b style="mso-bidi-font-weight:normal"><o:p></o:p></b></p>				</tr>				<tr>					<td width="136" valign="top" style="width:102.0pt;padding:0in 0in 0in 0in">						<p class="Tpf"><b style="mso-bidi-font-weight:normal"><span style="font-size:  9.0pt">.ERRE</span></b> <i style="mso-bidi-font-style:normal">expression</i></p>						<p class="Tpf"></p>					</td>					<td width="328" valign="top" style="width:246.0pt;padding:0in 0in 0in 0in">						<p class="Tp">If<i style="mso-bidi-font-style:normal"> expression </i>is false (zero).</p>						<p class="Tp"></p>					</td>					<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:  normal"></p>				</tr>				<tr>					<td width="136" valign="top" style="width:102.0pt;padding:0in 0in 0in 0in">						<p class="Tpf"><b style="mso-bidi-font-weight:normal"><span style="font-size:  9.0pt">.ERRNZ</span></b> <i style="mso-bidi-font-style:normal">expression</i><b style="mso-bidi-font-weight:normal"><span style="font-size:9.0pt"><o:p></o:p></span></b></p>						<p class="Tpf"><b style="mso-bidi-font-weight:normal"><span style="font-size:  9.0pt"><o:p></o:p></span></b></p>					</td>					<td width="328" valign="top" style="width:246.0pt;padding:0in 0in 0in 0in">						<p class="Tp">If<i style="mso-bidi-font-style:normal"> expression </i>is true (nonzero).</p>						<p class="Tp"></p>					</td>					<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:  normal"></p>				</tr>				<tr>					<td width="136" valign="top" style="width:102.0pt;padding:0in 0in 0in 0in">						<p class="Tpf"><b style="mso-bidi-font-weight:normal"><span style="font-size:  9.0pt">.ERRDEF</span></b> <i style="mso-bidi-font-style:normal">name</i></p>						<p class="Tpf"></p>					</td>					<td width="328" valign="top" style="width:246.0pt;padding:0in 0in 0in 0in">						<p class="Tp">If<i style="mso-bidi-font-style:normal"> name</i> has been defined.</p>						<p class="Tp"></p>					</td>					<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:  normal"></p>				</tr>				<tr>					<td width="136" valign="top" style="width:102.0pt;padding:0in 0in 0in 0in">						<p class="Tpf"><b style="mso-bidi-font-weight:normal"><span style="font-size:  9.0pt">.ERRNDEF</span></b> <i style="mso-bidi-font-style:normal">name</i><b style="mso-bidi-font-weight:normal"><span style="font-size:9.0pt"><o:p></o:p></span></b></p>						<p class="Tpf"><b style="mso-bidi-font-weight:normal"><span style="font-size:  9.0pt"><o:p></o:p></span></b></p>					</td>					<td width="328" valign="top" style="width:246.0pt;padding:0in 0in 0in 0in">						<p class="Tp">If <i style="mso-bidi-font-style:normal">name</i> has not been defined.</p>						<p class="Tp"></p>					</td>					<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:  normal"></p>				</tr>				<tr>					<td width="136" valign="top" style="width:102.0pt;padding:0in 0in 0in 0in">						<p class="Tpf"><b style="mso-bidi-font-weight:normal"><span style="font-size:  9.0pt">.ERRB</span></b> <i style="mso-bidi-font-style:normal">argument*</i></p>						<p class="Tpf"></p>					</td>					<td width="328" valign="top" style="width:246.0pt;padding:0in 0in 0in 0in">						<p class="Tp">If <i style="mso-bidi-font-style:normal">argument</i> is blank.</p>						<p class="Tp"></p>					</td>					<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:  normal"></p>				</tr>				<tr>					<td width="136" valign="top" style="width:102.0pt;padding:0in 0in 0in 0in">						<p class="Tpf"><b style="mso-bidi-font-weight:normal"><span style="font-size:  9.0pt">.ERRNB</span></b> <i style="mso-bidi-font-style:normal">argument*</i><b style="mso-bidi-font-weight:normal"><span style="font-size:9.0pt"><o:p></o:p></span></b></p>						<p class="Tpf"><b style="mso-bidi-font-weight:normal"><span style="font-size:  9.0pt"><o:p></o:p></span></b></p>					</td>					<td width="328" valign="top" style="width:246.0pt;padding:0in 0in 0in 0in">						<p class="Tp">If <i style="mso-bidi-font-style:normal">argument</i> is not blank.</p>						<p class="Tp"></p>					</td>					<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:  normal"></p>				</tr>				<tr>					<td width="136" valign="top" style="width:102.0pt;padding:0in 0in 0in 0in">						<p class="Tpf"><b style="mso-bidi-font-weight:normal"><span style="font-size:  9.0pt">.ERRIDN[I]</span></b> <i style="mso-bidi-font-style:normal">arg1</i>, <i style="mso-bidi-font-style:normal">arg2*</i></p>						<p class="Tpf"></p>					</td>					<td width="328" valign="top" style="width:246.0pt;padding:0in 0in 0in 0in">						<p class="Tp">If <i style="mso-bidi-font-style:normal">arg1</i> equals<i style="mso-bidi-font-style:normal"> arg2.</i></p>						<p class="Tp"></p>					</td>					<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:  normal"></p>				</tr>				<tr>					<td width="136" valign="top" style="width:102.0pt;padding:0in 0in 0in 0in">						<p class="Tpf"><b style="mso-bidi-font-weight:normal"><span style="font-size:  9.0pt">.ERRDIF[I]</span></b> <i style="mso-bidi-font-style:normal">arg1</i>, <i style="mso-bidi-font-style:normal">arg2*</i></p>						<p class="Tpf"></p>					</td>					<td width="328" valign="top" style="width:246.0pt;padding:0in 0in 0in 0in">						<p class="Tp">If<i style="mso-bidi-font-style:normal"> arg1 </i>does not equal <i style="mso-bidi-font-style:normal">arg2.<o:p></o:p></i></p>						<p class="Tp">The optional <b style="mso-bidi-font-weight:normal">I</b> suffix (<b style="mso-bidi-font-weight:normal"><span style="font-size:9.0pt">.ERRIDNI</span></b> and <b style="mso-bidi-font-weight:normal"><span style="font-size:9.0pt">.ERRDIFI</span></b>) makes comparisons insensitive to case.</p>						<p class="Tp"></p>					</td>					<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:  normal"></p>				</tr>			</table>			<p class="Tf">*<span style="mso-spacerun: yes">&nbsp; </span>Used only in macros</p>			<p class="Le"><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>			<p class="index"><!--[if supportFields]><span style='mso-element:field-begin'></span>XE&quot;SETIF2 argument, OPTION directive&quot;<span style='mso-hide:none'> \z&quot;MASMBW.DOC-1453&quot;</span><![endif]-->			<!--[if supportFields]><spanstyle='mso-element:field-end'></span><![endif]-->			<!--[if supportFields]><bstyle='mso-bidi-font-weight:normal'><span style='font-size:9.0pt'><spanstyle='mso-element:field-begin'></span>XE &quot;OPTION directive:SETIF2&quot;</span></b><bstyle='mso-bidi-font-weight:normal'><span style='font-size:9.0pt;mso-hide:none'>\z &quot;MASMBW.DOC-1454&quot;</span></b><![endif]-->			<!--[if supportFields]><bstyle='mso-bidi-font-weight:normal'><span style='font-size:9.0pt'><spanstyle='mso-element:field-end'></span></span></b><![endif]-->			<!--[if supportFields]><bstyle='mso-bidi-font-weight:normal'><span style='font-size:9.0pt'><spanstyle='mso-element:field-begin'></span>XE &quot;.ERR2 directive&quot;</span></b><bstyle='mso-bidi-font-weight:normal'><span style='font-size:9.0pt;mso-hide:none'>\z &quot;MASMBW.DOC-1455&quot;</span></b><![endif]-->			<!--[if supportFields]><bstyle='mso-bidi-font-weight:normal'><span style='font-size:9.0pt'><spanstyle='mso-element:field-end'></span></span></b><![endif]-->			<!--[if supportFields]><bstyle='mso-bidi-font-weight:normal'><span style='font-size:9.0pt'><spanstyle='mso-element:field-begin'></span>XE &quot;Directives:.ERR2&quot;</span></b><bstyle='mso-bidi-font-weight:normal'><span style='font-size:9.0pt;mso-hide:none'>\z &quot;MASMBW.DOC-1456&quot;</span></b><![endif]-->			<!--[if supportFields]><bstyle='mso-bidi-font-weight:normal'><span style='font-size:9.0pt'><spanstyle='mso-element:field-end'></span></span></b><![endif]-->			<!--[if supportFields]><bstyle='mso-bidi-font-weight:normal'><span style='font-size:9.0pt'><spanstyle='mso-element:field-begin'></span>XE &quot;.ERR1 directive&quot;</span></b><bstyle='mso-bidi-font-weight:normal'><span style='font-size:9.0pt;mso-hide:none'>\z &quot;MASMBW.DOC-1457&quot;</span></b><![endif]-->			<!--[if supportFields]><bstyle='mso-bidi-font-weight:normal'><span style='font-size:9.0pt'><spanstyle='mso-element:field-end'></span></span></b><![endif]-->			<b style="mso-bidi-font-weight:normal"><span style="font-size:9.0pt"><a name="bkEntry"></a><a name="bmXETemp"></a><a name="FindXETemp1"><span style="mso-bookmark:bmXETemp"><span style="mso-bookmark:bkEntry"></span></span></a></span></b><!--[if supportFields]><spanstyle='mso-bookmark:FindXETemp1'><span style='mso-bookmark:bmXETemp'><spanstyle='mso-bookmark:bkEntry'></span></span></span><span style='mso-element:field-begin'></span><span style='mso-bookmark:FindXETemp1'><spanstyle='mso-bookmark:bmXETemp'><span style='mso-bookmark:bkEntry'><bstyle='mso-bidi-font-weight:normal'><span style='font-size:9.0pt'>XE&quot;Directives:.ERR1&quot;</span></b></span></span></span><spanstyle='mso-bookmark:FindXETemp1'><span style='mso-bookmark:bmXETemp'><spanstyle='mso-bookmark:bkEntry'><b style='mso-bidi-font-weight:normal'><spanstyle='font-size:9.0pt;mso-hide:none'> \z &quot;MASMBW.DOC-1458&quot;</span></b></span></span></span><spanstyle='mso-bookmark:FindXETemp1'><span style='mso-bookmark:bmXETemp'><spanstyle='mso-bookmark:bkEntry'></span></span></span><![endif]-->			<span style="mso-bookmark:FindXETemp1"><span style="mso-bookmark:bmXETemp"><span style="mso-bookmark:bkEntry"></span></span></span><!--[if supportFields]><spanstyle='mso-bookmark:FindXETemp1'><span style='mso-bookmark:bmXETemp'><spanstyle='mso-bookmark:bkEntry'></span></span></span><span style='mso-element:field-end'></span><![endif]-->			<span style="mso-bookmark:FindXETemp1"><span style="mso-bookmark:bmXETemp"><span style="mso-bookmark:bkEntry"></span></span></span></p>			<p class="MsoNormal"><a name="FindXETemp">Two special conditional-error directives, <b style="mso-bidi-font-weight:normal">.ERR1</b> and <b style="mso-bidi-font-weight:normal">.ERR2</b>, generate an error only on pass one or pass two. To use these directives, you must either enable 5.1 compatibility (with the /Zm command-line switch or <b style="mso-bidi-font-weight:normal">OPTION M510</b>) or set <b style="mso-bidi-font-weight:normal">OPTION SETIF2:TRUE</b>, as described in the previous section.</a></p>		</div>	</body></html>